# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.rulesengine.sampletestservice.v1beta1 import sample_test_service_api_pb2 as flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2


class SampleTestServiceAPIStub(object):
    """SampleTestServiceAPI.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Grade1 = channel.unary_unary(
                '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade1',
                request_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade1Request.SerializeToString,
                response_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade1Response.FromString,
                )
        self.Grade2 = channel.unary_unary(
                '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade2',
                request_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade2Request.SerializeToString,
                response_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade2Response.FromString,
                )
        self.Grade3 = channel.unary_unary(
                '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade3',
                request_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade3Request.SerializeToString,
                response_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade3Response.FromString,
                )
        self.Grade4 = channel.unary_unary(
                '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade4',
                request_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade4Request.SerializeToString,
                response_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade4Response.FromString,
                )


class SampleTestServiceAPIServicer(object):
    """SampleTestServiceAPI.
    """

    def Grade1(self, request, context):
        """Grade for test.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Grade2(self, request, context):
        """Grade for test.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Grade3(self, request, context):
        """Grade for test.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Grade4(self, request, context):
        """Grade for test.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SampleTestServiceAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Grade1': grpc.unary_unary_rpc_method_handler(
                    servicer.Grade1,
                    request_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade1Request.FromString,
                    response_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade1Response.SerializeToString,
            ),
            'Grade2': grpc.unary_unary_rpc_method_handler(
                    servicer.Grade2,
                    request_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade2Request.FromString,
                    response_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade2Response.SerializeToString,
            ),
            'Grade3': grpc.unary_unary_rpc_method_handler(
                    servicer.Grade3,
                    request_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade3Request.FromString,
                    response_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade3Response.SerializeToString,
            ),
            'Grade4': grpc.unary_unary_rpc_method_handler(
                    servicer.Grade4,
                    request_deserializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade4Request.FromString,
                    response_serializer=flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade4Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SampleTestServiceAPI(object):
    """SampleTestServiceAPI.
    """

    @staticmethod
    def Grade1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade1',
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade1Request.SerializeToString,
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Grade2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade2',
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade2Request.SerializeToString,
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Grade3(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade3',
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade3Request.SerializeToString,
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade3Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Grade4(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.rulesengine.sampletestservice.v1beta1.SampleTestServiceAPI/Grade4',
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade4Request.SerializeToString,
            flexport_dot_rulesengine_dot_sampletestservice_dot_v1beta1_dot_sample__test__service__api__pb2.Grade4Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
