# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.catalog.grpc.expectedtransittimes.v1 import (
    expected_transit_times_api_pb2 as flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2,
)


class ExpectedTransitTimesAPIStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpsertExpectedTransitTimes = channel.unary_unary(
            "/flexport.catalog.grpc.expectedtransittimes.v1.ExpectedTransitTimesAPI/UpsertExpectedTransitTimes",
            request_serializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.UpsertExpectedTransitTimesRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.UpsertExpectedTransitTimesResponse.FromString,
        )
        self.RefreshExpectedTransitTimes = channel.unary_unary(
            "/flexport.catalog.grpc.expectedtransittimes.v1.ExpectedTransitTimesAPI/RefreshExpectedTransitTimes",
            request_serializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.RefreshExpectedTransitTimesRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.RefreshExpectedTransitTimesResponse.FromString,
        )


class ExpectedTransitTimesAPIServicer:
    """Missing associated documentation comment in .proto file."""

    def UpsertExpectedTransitTimes(self, request, context):
        """Creates the OTE/QTT if it does not exist. If it exists and the SLAs are different, we will delete the
        previous record and create a new one.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RefreshExpectedTransitTimes(self, request, context):
        """Re-evaluated the ett_uuid for each service_offerings with the given ett_uuid."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ExpectedTransitTimesAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "UpsertExpectedTransitTimes": grpc.unary_unary_rpc_method_handler(
            servicer.UpsertExpectedTransitTimes,
            request_deserializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.UpsertExpectedTransitTimesRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.UpsertExpectedTransitTimesResponse.SerializeToString,
        ),
        "RefreshExpectedTransitTimes": grpc.unary_unary_rpc_method_handler(
            servicer.RefreshExpectedTransitTimes,
            request_deserializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.RefreshExpectedTransitTimesRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.RefreshExpectedTransitTimesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.catalog.grpc.expectedtransittimes.v1.ExpectedTransitTimesAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ExpectedTransitTimesAPI:
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpsertExpectedTransitTimes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.grpc.expectedtransittimes.v1.ExpectedTransitTimesAPI/UpsertExpectedTransitTimes",
            flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.UpsertExpectedTransitTimesRequest.SerializeToString,
            flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.UpsertExpectedTransitTimesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def RefreshExpectedTransitTimes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.grpc.expectedtransittimes.v1.ExpectedTransitTimesAPI/RefreshExpectedTransitTimes",
            flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.RefreshExpectedTransitTimesRequest.SerializeToString,
            flexport_dot_catalog_dot_grpc_dot_expectedtransittimes_dot_v1_dot_expected__transit__times__api__pb2.RefreshExpectedTransitTimesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
