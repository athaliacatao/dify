# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.smb.catalogsearch.v1beta1 import (
    catalog_search_api_pb2 as flexport_dot_smb_dot_catalogsearch_dot_v1beta1_dot_catalog__search__api__pb2,
)


class CatalogSearchAPIStub:
    """Public Catalog Search API used by SMB marketplace apps."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CatalogSearch = channel.unary_unary(
            "/flexport.smb.catalogsearch.v1beta1.CatalogSearchAPI/CatalogSearch",
            request_serializer=flexport_dot_smb_dot_catalogsearch_dot_v1beta1_dot_catalog__search__api__pb2.CatalogSearchRequest.SerializeToString,
            response_deserializer=flexport_dot_smb_dot_catalogsearch_dot_v1beta1_dot_catalog__search__api__pb2.CatalogSearchResponse.FromString,
        )


class CatalogSearchAPIServicer:
    """Public Catalog Search API used by SMB marketplace apps."""

    def CatalogSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CatalogSearchAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CatalogSearch": grpc.unary_unary_rpc_method_handler(
            servicer.CatalogSearch,
            request_deserializer=flexport_dot_smb_dot_catalogsearch_dot_v1beta1_dot_catalog__search__api__pb2.CatalogSearchRequest.FromString,
            response_serializer=flexport_dot_smb_dot_catalogsearch_dot_v1beta1_dot_catalog__search__api__pb2.CatalogSearchResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.smb.catalogsearch.v1beta1.CatalogSearchAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class CatalogSearchAPI:
    """Public Catalog Search API used by SMB marketplace apps."""

    @staticmethod
    def CatalogSearch(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.smb.catalogsearch.v1beta1.CatalogSearchAPI/CatalogSearch",
            flexport_dot_smb_dot_catalogsearch_dot_v1beta1_dot_catalog__search__api__pb2.CatalogSearchRequest.SerializeToString,
            flexport_dot_smb_dot_catalogsearch_dot_v1beta1_dot_catalog__search__api__pb2.CatalogSearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
