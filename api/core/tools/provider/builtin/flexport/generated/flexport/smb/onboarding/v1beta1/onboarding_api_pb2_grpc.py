# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.smb.onboarding.v1beta1 import (
    onboarding_api_pb2 as flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2,
)


class OnboardingAPIStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateOnboardingRegistration = channel.unary_unary(
            "/flexport.smb.onboarding.v1beta1.OnboardingAPI/CreateOnboardingRegistration",
            request_serializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.CreateOnboardingRegistrationRequest.SerializeToString,
            response_deserializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.CreateOnboardingRegistrationResponse.FromString,
        )
        self.TriggerOnboarding = channel.unary_unary(
            "/flexport.smb.onboarding.v1beta1.OnboardingAPI/TriggerOnboarding",
            request_serializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.TriggerOnboardingRequest.SerializeToString,
            response_deserializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.TriggerOnboardingResponse.FromString,
        )


class OnboardingAPIServicer:
    """Missing associated documentation comment in .proto file."""

    def CreateOnboardingRegistration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TriggerOnboarding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_OnboardingAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateOnboardingRegistration": grpc.unary_unary_rpc_method_handler(
            servicer.CreateOnboardingRegistration,
            request_deserializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.CreateOnboardingRegistrationRequest.FromString,
            response_serializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.CreateOnboardingRegistrationResponse.SerializeToString,
        ),
        "TriggerOnboarding": grpc.unary_unary_rpc_method_handler(
            servicer.TriggerOnboarding,
            request_deserializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.TriggerOnboardingRequest.FromString,
            response_serializer=flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.TriggerOnboardingResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.smb.onboarding.v1beta1.OnboardingAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class OnboardingAPI:
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateOnboardingRegistration(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.smb.onboarding.v1beta1.OnboardingAPI/CreateOnboardingRegistration",
            flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.CreateOnboardingRegistrationRequest.SerializeToString,
            flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.CreateOnboardingRegistrationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def TriggerOnboarding(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.smb.onboarding.v1beta1.OnboardingAPI/TriggerOnboarding",
            flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.TriggerOnboardingRequest.SerializeToString,
            flexport_dot_smb_dot_onboarding_dot_v1beta1_dot_onboarding__api__pb2.TriggerOnboardingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
