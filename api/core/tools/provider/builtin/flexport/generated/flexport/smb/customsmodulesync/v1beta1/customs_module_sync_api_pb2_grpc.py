# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.smb.customsmodulesync.v1beta1 import customs_module_sync_api_pb2 as flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2


class CustomsModuleSyncAPIStub(object):
    """This service syncs and retrieves data from core.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendCustomsBondData = channel.unary_unary(
                '/flexport.smb.customsmodulesync.v1beta1.CustomsModuleSyncAPI/SendCustomsBondData',
                request_serializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsBondDataRequest.SerializeToString,
                response_deserializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsBondDataResponse.FromString,
                )
        self.SendCustomsInformationData = channel.unary_unary(
                '/flexport.smb.customsmodulesync.v1beta1.CustomsModuleSyncAPI/SendCustomsInformationData',
                request_serializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsInformationDataRequest.SerializeToString,
                response_deserializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsInformationDataResponse.FromString,
                )
        self.GetCustomsClientData = channel.unary_unary(
                '/flexport.smb.customsmodulesync.v1beta1.CustomsModuleSyncAPI/GetCustomsClientData',
                request_serializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.GetCustomsClientDataRequest.SerializeToString,
                response_deserializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.GetCustomsClientDataResponse.FromString,
                )


class CustomsModuleSyncAPIServicer(object):
    """This service syncs and retrieves data from core.
    """

    def SendCustomsBondData(self, request, context):
        """Send customs bond data to core to be synced.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendCustomsInformationData(self, request, context):
        """Sends customs information data to core to be synced.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomsClientData(self, request, context):
        """Retrieves customs client data from core to be visible in the SMB NIS.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomsModuleSyncAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendCustomsBondData': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCustomsBondData,
                    request_deserializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsBondDataRequest.FromString,
                    response_serializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsBondDataResponse.SerializeToString,
            ),
            'SendCustomsInformationData': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCustomsInformationData,
                    request_deserializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsInformationDataRequest.FromString,
                    response_serializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsInformationDataResponse.SerializeToString,
            ),
            'GetCustomsClientData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomsClientData,
                    request_deserializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.GetCustomsClientDataRequest.FromString,
                    response_serializer=flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.GetCustomsClientDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.smb.customsmodulesync.v1beta1.CustomsModuleSyncAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomsModuleSyncAPI(object):
    """This service syncs and retrieves data from core.
    """

    @staticmethod
    def SendCustomsBondData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.smb.customsmodulesync.v1beta1.CustomsModuleSyncAPI/SendCustomsBondData',
            flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsBondDataRequest.SerializeToString,
            flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsBondDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendCustomsInformationData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.smb.customsmodulesync.v1beta1.CustomsModuleSyncAPI/SendCustomsInformationData',
            flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsInformationDataRequest.SerializeToString,
            flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.SendCustomsInformationDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCustomsClientData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.smb.customsmodulesync.v1beta1.CustomsModuleSyncAPI/GetCustomsClientData',
            flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.GetCustomsClientDataRequest.SerializeToString,
            flexport_dot_smb_dot_customsmodulesync_dot_v1beta1_dot_customs__module__sync__api__pb2.GetCustomsClientDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
