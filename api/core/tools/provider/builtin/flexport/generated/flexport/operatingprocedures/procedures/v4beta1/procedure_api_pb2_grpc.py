# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.operatingprocedures.procedures.v4beta1 import (
    procedure_api_pb2 as flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2,
)


class ProcedureAPIStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSSDProcedureByProcedureFID = channel.unary_unary(
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/GetSSDProcedureByProcedureFID",
            request_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureByProcedureFIDRequest.SerializeToString,
            response_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureByProcedureFIDResponse.FromString,
        )
        self.GetSSDProcedureOfTypeForTopic = channel.unary_unary(
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/GetSSDProcedureOfTypeForTopic",
            request_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureOfTypeForTopicRequest.SerializeToString,
            response_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureOfTypeForTopicResponse.FromString,
        )
        self.CreateSSDProcedure = channel.unary_unary(
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/CreateSSDProcedure",
            request_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.CreateSSDProcedureRequest.SerializeToString,
            response_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.CreateSSDProcedureResponse.FromString,
        )
        self.DestroySSDProcedure = channel.unary_unary(
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/DestroySSDProcedure",
            request_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.DestroySSDProcedureRequest.SerializeToString,
            response_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.DestroySSDProcedureResponse.FromString,
        )
        self.UpdateSSDProcedure = channel.unary_unary(
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/UpdateSSDProcedure",
            request_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.UpdateSSDProcedureRequest.SerializeToString,
            response_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.UpdateSSDProcedureResponse.FromString,
        )
        self.GetMatchingConfiguration = channel.unary_unary(
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/GetMatchingConfiguration",
            request_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetMatchingConfigurationRequest.SerializeToString,
            response_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetMatchingConfigurationResponse.FromString,
        )


class ProcedureAPIServicer:
    """Missing associated documentation comment in .proto file."""

    def GetSSDProcedureByProcedureFID(self, request, context):
        """Retrieves a procedure by its procedure FID"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetSSDProcedureOfTypeForTopic(self, request, context):
        """Retrieves the matching procedure for a given client and type"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateSSDProcedure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DestroySSDProcedure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateSSDProcedure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetMatchingConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ProcedureAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetSSDProcedureByProcedureFID": grpc.unary_unary_rpc_method_handler(
            servicer.GetSSDProcedureByProcedureFID,
            request_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureByProcedureFIDRequest.FromString,
            response_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureByProcedureFIDResponse.SerializeToString,
        ),
        "GetSSDProcedureOfTypeForTopic": grpc.unary_unary_rpc_method_handler(
            servicer.GetSSDProcedureOfTypeForTopic,
            request_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureOfTypeForTopicRequest.FromString,
            response_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureOfTypeForTopicResponse.SerializeToString,
        ),
        "CreateSSDProcedure": grpc.unary_unary_rpc_method_handler(
            servicer.CreateSSDProcedure,
            request_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.CreateSSDProcedureRequest.FromString,
            response_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.CreateSSDProcedureResponse.SerializeToString,
        ),
        "DestroySSDProcedure": grpc.unary_unary_rpc_method_handler(
            servicer.DestroySSDProcedure,
            request_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.DestroySSDProcedureRequest.FromString,
            response_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.DestroySSDProcedureResponse.SerializeToString,
        ),
        "UpdateSSDProcedure": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateSSDProcedure,
            request_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.UpdateSSDProcedureRequest.FromString,
            response_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.UpdateSSDProcedureResponse.SerializeToString,
        ),
        "GetMatchingConfiguration": grpc.unary_unary_rpc_method_handler(
            servicer.GetMatchingConfiguration,
            request_deserializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetMatchingConfigurationRequest.FromString,
            response_serializer=flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetMatchingConfigurationResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ProcedureAPI:
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSSDProcedureByProcedureFID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/GetSSDProcedureByProcedureFID",
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureByProcedureFIDRequest.SerializeToString,
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureByProcedureFIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetSSDProcedureOfTypeForTopic(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/GetSSDProcedureOfTypeForTopic",
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureOfTypeForTopicRequest.SerializeToString,
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetSSDProcedureOfTypeForTopicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateSSDProcedure(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/CreateSSDProcedure",
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.CreateSSDProcedureRequest.SerializeToString,
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.CreateSSDProcedureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DestroySSDProcedure(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/DestroySSDProcedure",
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.DestroySSDProcedureRequest.SerializeToString,
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.DestroySSDProcedureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateSSDProcedure(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/UpdateSSDProcedure",
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.UpdateSSDProcedureRequest.SerializeToString,
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.UpdateSSDProcedureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetMatchingConfiguration(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.operatingprocedures.procedures.v4beta1.ProcedureAPI/GetMatchingConfiguration",
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetMatchingConfigurationRequest.SerializeToString,
            flexport_dot_operatingprocedures_dot_procedures_dot_v4beta1_dot_procedure__api__pb2.GetMatchingConfigurationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
