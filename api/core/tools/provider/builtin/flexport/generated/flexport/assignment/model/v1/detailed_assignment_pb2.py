# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/assignment/model/v1/detailed_assignment.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n6flexport/assignment/model/v1/detailed_assignment.proto\x12\x1c\x66lexport.assignment.model.v1\x1a)flexport/assignment/enums/v1/reason.proto\x1a\x31\x66lexport/assignment/enums/v1/responsibility.proto"\xbe\x01\n\x12\x44\x65tailedAssignment\x12\x16\n\x0e\x61ssignable_fid\x18\x01 \x01(\t\x12\x14\n\x0c\x61ssignee_fid\x18\x02 \x01(\t\x12\x44\n\x0eresponsibility\x18\x03 \x01(\x0e\x32,.flexport.assignment.enums.v1.Responsibility\x12\x34\n\x06reason\x18\x04 \x01(\x0e\x32$.flexport.assignment.enums.v1.ReasonB_\n com.flexport.assignment.model.v1B\x17\x44\x65tailedAssignmentProtoP\x01\xea\x02\x1f\x46lexport::Assignment::Model::V1b\x06proto3'
)


_DETAILEDASSIGNMENT = DESCRIPTOR.message_types_by_name["DetailedAssignment"]
DetailedAssignment = _reflection.GeneratedProtocolMessageType(
    "DetailedAssignment",
    (_message.Message,),
    {
        "DESCRIPTOR": _DETAILEDASSIGNMENT,
        "__module__": "flexport.assignment.model.v1.detailed_assignment_pb2",
        # @@protoc_insertion_point(class_scope:flexport.assignment.model.v1.DetailedAssignment)
    },
)
_sym_db.RegisterMessage(DetailedAssignment)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n com.flexport.assignment.model.v1B\027DetailedAssignmentProtoP\001\352\002\037Flexport::Assignment::Model::V1"
    _DETAILEDASSIGNMENT._serialized_start = 183
    _DETAILEDASSIGNMENT._serialized_end = 373
# @@protoc_insertion_point(module_scope)
