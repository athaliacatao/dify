# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/rulesengine/decisiontable/v1/decision_table.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n:flexport/rulesengine/decisiontable/v1/decision_table.proto\x12%flexport.rulesengine.decisiontable.v1"y\n\rDecisionTable\x12\x10\n\x08\x66unction\x18\x01 \x01(\t\x12\x1a\n\x0e\x66ile_object_id\x18\x02 \x01(\tB\x02\x18\x01\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\x12\x17\n\x0f\x66ile_object_fid\x18\x05 \x01(\tBl\n)com.flexport.rulesengine.decisiontable.v1B\x12\x44\x65\x63isionTableProtoP\x01\xea\x02(Flexport::RulesEngine::DecisionTable::V1b\x06proto3'
)


_DECISIONTABLE = DESCRIPTOR.message_types_by_name["DecisionTable"]
DecisionTable = _reflection.GeneratedProtocolMessageType(
    "DecisionTable",
    (_message.Message,),
    {
        "DESCRIPTOR": _DECISIONTABLE,
        "__module__": "flexport.rulesengine.decisiontable.v1.decision_table_pb2",
        # @@protoc_insertion_point(class_scope:flexport.rulesengine.decisiontable.v1.DecisionTable)
    },
)
_sym_db.RegisterMessage(DecisionTable)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n)com.flexport.rulesengine.decisiontable.v1B\022DecisionTableProtoP\001\352\002(Flexport::RulesEngine::DecisionTable::V1"
    _DECISIONTABLE.fields_by_name["file_object_id"]._options = None
    _DECISIONTABLE.fields_by_name["file_object_id"]._serialized_options = b"\030\001"
    _DECISIONTABLE._serialized_start = 101
    _DECISIONTABLE._serialized_end = 222
# @@protoc_insertion_point(module_scope)
