# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.serviceplatform.grpctest.v1beta1 import (
    grpc_test_api_pb2 as flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2,
)


class GrpcTestAPIStub:
    """This service is used internally by Service Platform team to experiment with gRPC."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DoNothing = channel.unary_unary(
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/DoNothing",
            request_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.DoNothingRequest.SerializeToString,
            response_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.DoNothingResponse.FromString,
        )
        self.Sleep = channel.unary_unary(
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/Sleep",
            request_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.SleepRequest.SerializeToString,
            response_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.SleepResponse.FromString,
        )
        self.Fail = channel.unary_unary(
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/Fail",
            request_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.FailRequest.SerializeToString,
            response_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.FailResponse.FromString,
        )
        self.Recurse = channel.unary_unary(
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/Recurse",
            request_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.RecurseRequest.SerializeToString,
            response_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.RecurseResponse.FromString,
        )
        self.HealthProbe = channel.unary_unary(
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/HealthProbe",
            request_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.HealthProbeRequest.SerializeToString,
            response_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.HealthProbeResponse.FromString,
        )
        self.WorkHard = channel.unary_unary(
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/WorkHard",
            request_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.WorkHardRequest.SerializeToString,
            response_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.WorkHardResponse.FromString,
        )


class GrpcTestAPIServicer:
    """This service is used internally by Service Platform team to experiment with gRPC."""

    def DoNothing(self, request, context):
        """Does nothing, used for load testing."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Sleep(self, request, context):
        """Sleeps before returning."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Fail(self, request, context):
        """Fails the request."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def Recurse(self, request, context):
        """Recurses between two gRPC services."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def HealthProbe(self, request, context):
        """Checks the health of another service."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def WorkHard(self, request, context):
        """Unlike the slackers who Sleep, the motivated ones WorkHard!
        This is mainly used to benchmark servers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_GrpcTestAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "DoNothing": grpc.unary_unary_rpc_method_handler(
            servicer.DoNothing,
            request_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.DoNothingRequest.FromString,
            response_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.DoNothingResponse.SerializeToString,
        ),
        "Sleep": grpc.unary_unary_rpc_method_handler(
            servicer.Sleep,
            request_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.SleepRequest.FromString,
            response_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.SleepResponse.SerializeToString,
        ),
        "Fail": grpc.unary_unary_rpc_method_handler(
            servicer.Fail,
            request_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.FailRequest.FromString,
            response_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.FailResponse.SerializeToString,
        ),
        "Recurse": grpc.unary_unary_rpc_method_handler(
            servicer.Recurse,
            request_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.RecurseRequest.FromString,
            response_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.RecurseResponse.SerializeToString,
        ),
        "HealthProbe": grpc.unary_unary_rpc_method_handler(
            servicer.HealthProbe,
            request_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.HealthProbeRequest.FromString,
            response_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.HealthProbeResponse.SerializeToString,
        ),
        "WorkHard": grpc.unary_unary_rpc_method_handler(
            servicer.WorkHard,
            request_deserializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.WorkHardRequest.FromString,
            response_serializer=flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.WorkHardResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class GrpcTestAPI:
    """This service is used internally by Service Platform team to experiment with gRPC."""

    @staticmethod
    def DoNothing(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/DoNothing",
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.DoNothingRequest.SerializeToString,
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.DoNothingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Sleep(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/Sleep",
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.SleepRequest.SerializeToString,
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.SleepResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Fail(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/Fail",
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.FailRequest.SerializeToString,
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.FailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def Recurse(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/Recurse",
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.RecurseRequest.SerializeToString,
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.RecurseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def HealthProbe(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/HealthProbe",
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.HealthProbeRequest.SerializeToString,
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.HealthProbeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def WorkHard(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.serviceplatform.grpctest.v1beta1.GrpcTestAPI/WorkHard",
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.WorkHardRequest.SerializeToString,
            flexport_dot_serviceplatform_dot_grpctest_dot_v1beta1_dot_grpc__test__api__pb2.WorkHardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
