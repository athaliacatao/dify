# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.funnelmanagementgateway.rmis.v1 import rmis_api_pb2 as flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2


class RmisAPIStub(object):
    """RMIS API Service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCarrier = channel.unary_unary(
                '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/GetCarrier',
                request_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierRequest.SerializeToString,
                response_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierResponse.FromString,
                )
        self.AttachCarrier = channel.unary_unary(
                '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/AttachCarrier',
                request_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIAttachCarrierRequest.SerializeToString,
                response_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIAttachCarrierResponse.FromString,
                )
        self.GetCarrierDocument = channel.unary_unary(
                '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/GetCarrierDocument',
                request_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierDocumentRequest.SerializeToString,
                response_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierDocumentResponse.FromString,
                )
        self.FetchCarriersWithUpdates = channel.unary_unary(
                '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/FetchCarriersWithUpdates',
                request_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIFetchCarriersWithUpdatesRequest.SerializeToString,
                response_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIFetchCarriersWithUpdatesResponse.FromString,
                )
        self.ClearCarriersWithUpdates = channel.unary_unary(
                '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/ClearCarriersWithUpdates',
                request_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIClearCarriersWithUpdatesRequest.SerializeToString,
                response_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIClearCarriersWithUpdatesResponse.FromString,
                )


class RmisAPIServicer(object):
    """RMIS API Service.
    """

    def GetCarrier(self, request, context):
        """Get a carrier from RMIS.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AttachCarrier(self, request, context):
        """Attach or detach a carrier from our RMIS account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCarrierDocument(self, request, context):
        """Gets the contents of documents linked to a carrier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchCarriersWithUpdates(self, request, context):
        """Fetch carriers with updates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearCarriersWithUpdates(self, request, context):
        """Clear delta API of updates that have been processed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RmisAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCarrier': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCarrier,
                    request_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierRequest.FromString,
                    response_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierResponse.SerializeToString,
            ),
            'AttachCarrier': grpc.unary_unary_rpc_method_handler(
                    servicer.AttachCarrier,
                    request_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIAttachCarrierRequest.FromString,
                    response_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIAttachCarrierResponse.SerializeToString,
            ),
            'GetCarrierDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCarrierDocument,
                    request_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierDocumentRequest.FromString,
                    response_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierDocumentResponse.SerializeToString,
            ),
            'FetchCarriersWithUpdates': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchCarriersWithUpdates,
                    request_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIFetchCarriersWithUpdatesRequest.FromString,
                    response_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIFetchCarriersWithUpdatesResponse.SerializeToString,
            ),
            'ClearCarriersWithUpdates': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearCarriersWithUpdates,
                    request_deserializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIClearCarriersWithUpdatesRequest.FromString,
                    response_serializer=flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIClearCarriersWithUpdatesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.funnelmanagementgateway.rmis.v1.RmisAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RmisAPI(object):
    """RMIS API Service.
    """

    @staticmethod
    def GetCarrier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/GetCarrier',
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierRequest.SerializeToString,
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AttachCarrier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/AttachCarrier',
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIAttachCarrierRequest.SerializeToString,
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIAttachCarrierResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCarrierDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/GetCarrierDocument',
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierDocumentRequest.SerializeToString,
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIGetCarrierDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchCarriersWithUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/FetchCarriersWithUpdates',
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIFetchCarriersWithUpdatesRequest.SerializeToString,
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIFetchCarriersWithUpdatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearCarriersWithUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.funnelmanagementgateway.rmis.v1.RmisAPI/ClearCarriersWithUpdates',
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIClearCarriersWithUpdatesRequest.SerializeToString,
            flexport_dot_funnelmanagementgateway_dot_rmis_dot_v1_dot_rmis__api__pb2.RmisAPIClearCarriersWithUpdatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
