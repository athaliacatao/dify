# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.oceanplanning.carrierpremium.v1 import carrier_premium_api_pb2 as flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2


class CarrierPremiumAPIStub(object):
    """Retrieve information on ocean carrier premium services.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetByFid = channel.unary_unary(
                '/flexport.monolith.oceanplanning.carrierpremium.v1.CarrierPremiumAPI/GetByFid',
                request_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByFidRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByFidResponse.FromString,
                )
        self.GetByCarrier = channel.unary_unary(
                '/flexport.monolith.oceanplanning.carrierpremium.v1.CarrierPremiumAPI/GetByCarrier',
                request_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByCarrierRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByCarrierResponse.FromString,
                )


class CarrierPremiumAPIServicer(object):
    """Retrieve information on ocean carrier premium services.
    """

    def GetByFid(self, request, context):
        """Fetches premium information for a given list of FIDs.

        Only FIDs that were found will be returned as results.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByCarrier(self, request, context):
        """Look up the list of premium services for a given carrier.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CarrierPremiumAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetByFid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByFid,
                    request_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByFidRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByFidResponse.SerializeToString,
            ),
            'GetByCarrier': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByCarrier,
                    request_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByCarrierRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByCarrierResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.oceanplanning.carrierpremium.v1.CarrierPremiumAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CarrierPremiumAPI(object):
    """Retrieve information on ocean carrier premium services.
    """

    @staticmethod
    def GetByFid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.oceanplanning.carrierpremium.v1.CarrierPremiumAPI/GetByFid',
            flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByFidRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByFidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByCarrier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.oceanplanning.carrierpremium.v1.CarrierPremiumAPI/GetByCarrier',
            flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByCarrierRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanplanning_dot_carrierpremium_dot_v1_dot_carrier__premium__api__pb2.GetByCarrierResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
