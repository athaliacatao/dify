# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/clientfreightdata/trackingonlyorder/v1beta1/client_order_creation_message_payload.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b"\n`flexport/clientfreightdata/trackingonlyorder/v1beta1/client_order_creation_message_payload.proto\x12\x34\x66lexport.clientfreightdata.trackingonlyorder.v1beta1\"\x8f\x02\n\x18\x43reateClientOrderRequest\x12\x12\n\nclient_fid\x18\x01 \x01(\t\x12\x19\n\x11\x63ontainer_numbers\x18\x02 \x03(\t\x12\x12\n\nmbl_number\x18\x03 \x01(\t\x12\x12\n\nhbl_number\x18\x04 \x01(\t\x12\x18\n\x10global_scac_code\x18\x05 \x01(\t\x12/\n'tracking_only_order_tracking_request_id\x18\x06 \x01(\x03\x12\x15\n\rshipment_tags\x18\x07 \x01(\t\x12\x1a\n\x12\x63lient_company_fid\x18\x08 \x01(\t\x12\x1e\n\x16\x66reight_forwarder_scac\x18\t \x01(\tb\x06proto3"
)


_CREATECLIENTORDERREQUEST = DESCRIPTOR.message_types_by_name["CreateClientOrderRequest"]
CreateClientOrderRequest = _reflection.GeneratedProtocolMessageType(
    "CreateClientOrderRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _CREATECLIENTORDERREQUEST,
        "__module__": "flexport.clientfreightdata.trackingonlyorder.v1beta1.client_order_creation_message_payload_pb2",
        # @@protoc_insertion_point(class_scope:flexport.clientfreightdata.trackingonlyorder.v1beta1.CreateClientOrderRequest)
    },
)
_sym_db.RegisterMessage(CreateClientOrderRequest)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    _CREATECLIENTORDERREQUEST._serialized_start = 155
    _CREATECLIENTORDERREQUEST._serialized_end = 426
# @@protoc_insertion_point(module_scope)
