# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.monolith.booking.client.v1beta1 import (
    client_api_pb2 as flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2,
)


class ClientAPIStub:
    """This service is used internally by Booking to
    * look up client fids associated with users and company entities.
    * look up primary company entities fid associated with the clients.
    Production readiness: https://docs.google.com/document/d/1j6cUMtEFXOCX5ZoGFn0YElhfJjq-R5bDA9T_YkheBLw/edit
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClientForUser = channel.unary_unary(
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/ClientForUser",
            request_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForUserRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForUserResponse.FromString,
        )
        self.ClientForCompanyEntity = channel.unary_unary(
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/ClientForCompanyEntity",
            request_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForCompanyEntityRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForCompanyEntityResponse.FromString,
        )
        self.PrimaryCompanyEntityForClient = channel.unary_unary(
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/PrimaryCompanyEntityForClient",
            request_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.PrimaryCompanyEntityForClientRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.PrimaryCompanyEntityForClientResponse.FromString,
        )
        self.ClientsForCompanyEntities = channel.unary_unary(
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/ClientsForCompanyEntities",
            request_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientsForCompanyEntitiesRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientsForCompanyEntitiesResponse.FromString,
        )


class ClientAPIServicer:
    """This service is used internally by Booking to
    * look up client fids associated with users and company entities.
    * look up primary company entities fid associated with the clients.
    Production readiness: https://docs.google.com/document/d/1j6cUMtEFXOCX5ZoGFn0YElhfJjq-R5bDA9T_YkheBLw/edit
    """

    def ClientForUser(self, request, context):
        """Find the client associated with the given user."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ClientForCompanyEntity(self, request, context):
        """Find the client associated with the given company entity."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PrimaryCompanyEntityForClient(self, request, context):
        """Find the primary company entity associated with the given client."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ClientsForCompanyEntities(self, request, context):
        """Find the clients associated with the given company entities."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ClientAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ClientForUser": grpc.unary_unary_rpc_method_handler(
            servicer.ClientForUser,
            request_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForUserRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForUserResponse.SerializeToString,
        ),
        "ClientForCompanyEntity": grpc.unary_unary_rpc_method_handler(
            servicer.ClientForCompanyEntity,
            request_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForCompanyEntityRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForCompanyEntityResponse.SerializeToString,
        ),
        "PrimaryCompanyEntityForClient": grpc.unary_unary_rpc_method_handler(
            servicer.PrimaryCompanyEntityForClient,
            request_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.PrimaryCompanyEntityForClientRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.PrimaryCompanyEntityForClientResponse.SerializeToString,
        ),
        "ClientsForCompanyEntities": grpc.unary_unary_rpc_method_handler(
            servicer.ClientsForCompanyEntities,
            request_deserializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientsForCompanyEntitiesRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientsForCompanyEntitiesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.monolith.booking.client.v1beta1.ClientAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ClientAPI:
    """This service is used internally by Booking to
    * look up client fids associated with users and company entities.
    * look up primary company entities fid associated with the clients.
    Production readiness: https://docs.google.com/document/d/1j6cUMtEFXOCX5ZoGFn0YElhfJjq-R5bDA9T_YkheBLw/edit
    """

    @staticmethod
    def ClientForUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/ClientForUser",
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForUserRequest.SerializeToString,
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ClientForCompanyEntity(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/ClientForCompanyEntity",
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForCompanyEntityRequest.SerializeToString,
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientForCompanyEntityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PrimaryCompanyEntityForClient(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/PrimaryCompanyEntityForClient",
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.PrimaryCompanyEntityForClientRequest.SerializeToString,
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.PrimaryCompanyEntityForClientResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ClientsForCompanyEntities(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.booking.client.v1beta1.ClientAPI/ClientsForCompanyEntities",
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientsForCompanyEntitiesRequest.SerializeToString,
            flexport_dot_monolith_dot_booking_dot_client_dot_v1beta1_dot_client__api__pb2.ClientsForCompanyEntitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
