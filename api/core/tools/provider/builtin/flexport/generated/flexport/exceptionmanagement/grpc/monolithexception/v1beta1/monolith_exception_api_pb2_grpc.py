# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.exceptionmanagement.grpc.monolithexception.v1beta1 import monolith_exception_api_pb2 as flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2


class MonolithExceptionAPIStub(object):
    """An API for fetching DomainAgnostic related data to NIS
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubstituteShipmentInfo = channel.unary_unary(
                '/flexport.exceptionmanagement.grpc.monolithexception.v1beta1.MonolithExceptionAPI/SubstituteShipmentInfo',
                request_serializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.SubstituteShipmentInfoRequest.SerializeToString,
                response_deserializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.SubstituteShipmentInfoResponse.FromString,
                )
        self.VisibleParties = channel.unary_unary(
                '/flexport.exceptionmanagement.grpc.monolithexception.v1beta1.MonolithExceptionAPI/VisibleParties',
                request_serializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.VisiblePartiesRequest.SerializeToString,
                response_deserializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.VisiblePartiesResponse.FromString,
                )
        self.ExceptionEventCallback = channel.unary_unary(
                '/flexport.exceptionmanagement.grpc.monolithexception.v1beta1.MonolithExceptionAPI/ExceptionEventCallback',
                request_serializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.ExceptionEventCallbackRequest.SerializeToString,
                response_deserializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.ExceptionEventCallbackResponse.FromString,
                )


class MonolithExceptionAPIServicer(object):
    """An API for fetching DomainAgnostic related data to NIS
    """

    def SubstituteShipmentInfo(self, request, context):
        """Get the first quote accepted at times for a list of shipment fids.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VisibleParties(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExceptionEventCallback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MonolithExceptionAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubstituteShipmentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.SubstituteShipmentInfo,
                    request_deserializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.SubstituteShipmentInfoRequest.FromString,
                    response_serializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.SubstituteShipmentInfoResponse.SerializeToString,
            ),
            'VisibleParties': grpc.unary_unary_rpc_method_handler(
                    servicer.VisibleParties,
                    request_deserializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.VisiblePartiesRequest.FromString,
                    response_serializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.VisiblePartiesResponse.SerializeToString,
            ),
            'ExceptionEventCallback': grpc.unary_unary_rpc_method_handler(
                    servicer.ExceptionEventCallback,
                    request_deserializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.ExceptionEventCallbackRequest.FromString,
                    response_serializer=flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.ExceptionEventCallbackResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.exceptionmanagement.grpc.monolithexception.v1beta1.MonolithExceptionAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MonolithExceptionAPI(object):
    """An API for fetching DomainAgnostic related data to NIS
    """

    @staticmethod
    def SubstituteShipmentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.exceptionmanagement.grpc.monolithexception.v1beta1.MonolithExceptionAPI/SubstituteShipmentInfo',
            flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.SubstituteShipmentInfoRequest.SerializeToString,
            flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.SubstituteShipmentInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VisibleParties(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.exceptionmanagement.grpc.monolithexception.v1beta1.MonolithExceptionAPI/VisibleParties',
            flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.VisiblePartiesRequest.SerializeToString,
            flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.VisiblePartiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExceptionEventCallback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.exceptionmanagement.grpc.monolithexception.v1beta1.MonolithExceptionAPI/ExceptionEventCallback',
            flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.ExceptionEventCallbackRequest.SerializeToString,
            flexport_dot_exceptionmanagement_dot_grpc_dot_monolithexception_dot_v1beta1_dot_monolith__exception__api__pb2.ExceptionEventCallbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
