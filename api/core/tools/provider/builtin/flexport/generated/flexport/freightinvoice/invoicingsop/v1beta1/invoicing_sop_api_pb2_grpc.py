# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.freightinvoice.invoicingsop.v1beta1 import invoicing_sop_api_pb2 as flexport_dot_freightinvoice_dot_invoicingsop_dot_v1beta1_dot_invoicing__sop__api__pb2


class InvoicingSopAPIStub(object):
    """API for the invoicing sop product.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInvoicingSop = channel.unary_unary(
                '/flexport.freightinvoice.invoicingsop.v1beta1.InvoicingSopAPI/GetInvoicingSop',
                request_serializer=flexport_dot_freightinvoice_dot_invoicingsop_dot_v1beta1_dot_invoicing__sop__api__pb2.GetInvoicingSopRequest.SerializeToString,
                response_deserializer=flexport_dot_freightinvoice_dot_invoicingsop_dot_v1beta1_dot_invoicing__sop__api__pb2.GetInvoicingSopResponse.FromString,
                )


class InvoicingSopAPIServicer(object):
    """API for the invoicing sop product.
    """

    def GetInvoicingSop(self, request, context):
        """Fetch a invoicing sop.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InvoicingSopAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInvoicingSop': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInvoicingSop,
                    request_deserializer=flexport_dot_freightinvoice_dot_invoicingsop_dot_v1beta1_dot_invoicing__sop__api__pb2.GetInvoicingSopRequest.FromString,
                    response_serializer=flexport_dot_freightinvoice_dot_invoicingsop_dot_v1beta1_dot_invoicing__sop__api__pb2.GetInvoicingSopResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.freightinvoice.invoicingsop.v1beta1.InvoicingSopAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InvoicingSopAPI(object):
    """API for the invoicing sop product.
    """

    @staticmethod
    def GetInvoicingSop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.freightinvoice.invoicingsop.v1beta1.InvoicingSopAPI/GetInvoicingSop',
            flexport_dot_freightinvoice_dot_invoicingsop_dot_v1beta1_dot_invoicing__sop__api__pb2.GetInvoicingSopRequest.SerializeToString,
            flexport_dot_freightinvoice_dot_invoicingsop_dot_v1beta1_dot_invoicing__sop__api__pb2.GetInvoicingSopResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
