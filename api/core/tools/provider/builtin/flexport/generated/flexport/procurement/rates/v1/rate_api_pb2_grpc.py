# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.procurement.rates.v1 import rate_api_pb2 as flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2


class RateAPIStub:
    """Read API for Procurement Rates."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FindRates = channel.unary_unary(
            "/flexport.procurement.rates.v1.RateAPI/FindRates",
            request_serializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRatesRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRatesResponse.FromString,
        )
        self.FindRate = channel.unary_unary(
            "/flexport.procurement.rates.v1.RateAPI/FindRate",
            request_serializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRateRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRateResponse.FromString,
        )


class RateAPIServicer:
    """Read API for Procurement Rates."""

    def FindRates(self, request, context):
        """Find Rates whose rate terms are valid for the given search criteria."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindRate(self, request, context):
        """Find a Rate whose terms match the requested values. The more information
        that is provided in the request, the more specific the Rate's terms will
        be. Likewise, if minimal search parameters are provided, this will return a
        "standard rate" with the bare minimum terms and restrictions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_RateAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "FindRates": grpc.unary_unary_rpc_method_handler(
            servicer.FindRates,
            request_deserializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRatesRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRatesResponse.SerializeToString,
        ),
        "FindRate": grpc.unary_unary_rpc_method_handler(
            servicer.FindRate,
            request_deserializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRateRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRateResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("flexport.procurement.rates.v1.RateAPI", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class RateAPI:
    """Read API for Procurement Rates."""

    @staticmethod
    def FindRates(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.rates.v1.RateAPI/FindRates",
            flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRatesRequest.SerializeToString,
            flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRatesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindRate(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.rates.v1.RateAPI/FindRate",
            flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRateRequest.SerializeToString,
            flexport_dot_procurement_dot_rates_dot_v1_dot_rate__api__pb2.FindRateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
