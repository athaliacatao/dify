# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.monolith.container.v1 import (
    container_api_pb2 as flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2,
)


class ContainerAPIStub:
    """Retrieve container information from the monolith.
    Note that this only gets static information about a physical container,
    without any shipment specific information.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetContainer = channel.unary_unary(
            "/flexport.monolith.container.v1.ContainerAPI/GetContainer",
            request_serializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerResponse.FromString,
        )
        self.GetContainerByContainerNumber = channel.unary_unary(
            "/flexport.monolith.container.v1.ContainerAPI/GetContainerByContainerNumber",
            request_serializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerByContainerNumberRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerByContainerNumberResponse.FromString,
        )
        self.CreateContainer = channel.unary_unary(
            "/flexport.monolith.container.v1.ContainerAPI/CreateContainer",
            request_serializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.CreateContainerRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.CreateContainerResponse.FromString,
        )


class ContainerAPIServicer:
    """Retrieve container information from the monolith.
    Note that this only gets static information about a physical container,
    without any shipment specific information.
    """

    def GetContainer(self, request, context):
        """Get information for a given fid."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetContainerByContainerNumber(self, request, context):
        """Get information for a given container number."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateContainer(self, request, context):
        """Create a new physical container."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ContainerAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetContainer": grpc.unary_unary_rpc_method_handler(
            servicer.GetContainer,
            request_deserializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerResponse.SerializeToString,
        ),
        "GetContainerByContainerNumber": grpc.unary_unary_rpc_method_handler(
            servicer.GetContainerByContainerNumber,
            request_deserializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerByContainerNumberRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerByContainerNumberResponse.SerializeToString,
        ),
        "CreateContainer": grpc.unary_unary_rpc_method_handler(
            servicer.CreateContainer,
            request_deserializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.CreateContainerRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.CreateContainerResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.monolith.container.v1.ContainerAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ContainerAPI:
    """Retrieve container information from the monolith.
    Note that this only gets static information about a physical container,
    without any shipment specific information.
    """

    @staticmethod
    def GetContainer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.container.v1.ContainerAPI/GetContainer",
            flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerRequest.SerializeToString,
            flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetContainerByContainerNumber(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.container.v1.ContainerAPI/GetContainerByContainerNumber",
            flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerByContainerNumberRequest.SerializeToString,
            flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.GetContainerByContainerNumberResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateContainer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.container.v1.ContainerAPI/CreateContainer",
            flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.CreateContainerRequest.SerializeToString,
            flexport_dot_monolith_dot_container_dot_v1_dot_container__api__pb2.CreateContainerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
