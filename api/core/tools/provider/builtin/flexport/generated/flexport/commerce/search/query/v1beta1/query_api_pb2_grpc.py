# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.commerce.search.query.v1beta1 import (
    query_api_pb2 as flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2,
)


class QueryAPIStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Query = channel.unary_unary(
            "/flexport.commerce.search.query.v1beta1.QueryAPI/Query",
            request_serializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryRequest.SerializeToString,
            response_deserializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryResponse.FromString,
        )
        self.QueryCollection = channel.unary_unary(
            "/flexport.commerce.search.query.v1beta1.QueryAPI/QueryCollection",
            request_serializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryCollectionRequest.SerializeToString,
            response_deserializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryCollectionResponse.FromString,
        )
        self.QueryAddresses = channel.unary_unary(
            "/flexport.commerce.search.query.v1beta1.QueryAPI/QueryAddresses",
            request_serializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryAddressesRequest.SerializeToString,
            response_deserializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryAddressesResponse.FromString,
        )


class QueryAPIServicer:
    """Missing associated documentation comment in .proto file."""

    def Query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def QueryCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def QueryAddresses(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_QueryAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Query": grpc.unary_unary_rpc_method_handler(
            servicer.Query,
            request_deserializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryRequest.FromString,
            response_serializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryResponse.SerializeToString,
        ),
        "QueryCollection": grpc.unary_unary_rpc_method_handler(
            servicer.QueryCollection,
            request_deserializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryCollectionRequest.FromString,
            response_serializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryCollectionResponse.SerializeToString,
        ),
        "QueryAddresses": grpc.unary_unary_rpc_method_handler(
            servicer.QueryAddresses,
            request_deserializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryAddressesRequest.FromString,
            response_serializer=flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryAddressesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.commerce.search.query.v1beta1.QueryAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class QueryAPI:
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Query(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.commerce.search.query.v1beta1.QueryAPI/Query",
            flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryRequest.SerializeToString,
            flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def QueryCollection(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.commerce.search.query.v1beta1.QueryAPI/QueryCollection",
            flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryCollectionRequest.SerializeToString,
            flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryCollectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def QueryAddresses(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.commerce.search.query.v1beta1.QueryAPI/QueryAddresses",
            flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryAddressesRequest.SerializeToString,
            flexport_dot_commerce_dot_search_dot_query_dot_v1beta1_dot_query__api__pb2.QueryAddressesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
