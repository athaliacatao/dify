# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1 import (
    fmt_assignment_api_pb2 as flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2,
)


class FmtAssignmentAPIStub:
    """Api to allow ocean_supply and ocean_planning to work with Fmt Assignment info."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListFmtAssignments = channel.unary_unary(
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/ListFmtAssignments",
            request_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsResponse.FromString,
        )
        self.GetFmtAssignment = channel.unary_unary(
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/GetFmtAssignment",
            request_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentResponse.FromString,
        )
        self.GetFmtAssignmentEligibilityForShipmentRoute = channel.unary_unary(
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/GetFmtAssignmentEligibilityForShipmentRoute",
            request_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentEligibilityForShipmentRouteRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentEligibilityForShipmentRouteResponse.FromString,
        )
        self.CreateFmtAssignments = channel.unary_unary(
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/CreateFmtAssignments",
            request_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.CreateFmtAssignmentsRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.CreateFmtAssignmentsResponse.FromString,
        )
        self.ListFmtAssignmentsByLoadingAndDischargePorts = channel.unary_unary(
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/ListFmtAssignmentsByLoadingAndDischargePorts",
            request_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsByLoadingAndDischargePortsRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsByLoadingAndDischargePortsResponse.FromString,
        )
        self.DeleteFmtAssignments = channel.unary_unary(
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/DeleteFmtAssignments",
            request_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.DeleteFmtAssignmentsRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.DeleteFmtAssignmentsResponse.FromString,
        )


class FmtAssignmentAPIServicer:
    """Api to allow ocean_supply and ocean_planning to work with Fmt Assignment info."""

    def ListFmtAssignments(self, request, context):
        """Return a list of FmtAssignments for a given Contract Fid."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetFmtAssignment(self, request, context):
        """Return an FmtAssignment for a given Shipment Fid."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetFmtAssignmentEligibilityForShipmentRoute(self, request, context):
        """Return the eligibility of shipment route for fmt assignment."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateFmtAssignments(self, request, context):
        """CreateFmtAssignment is a legacy endpoint intended only for synchronizing the
        Ocean Planning NIS assignment with the deprecated FmtAssignment until BAE/FMT
        in Core are fully deprecated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListFmtAssignmentsByLoadingAndDischargePorts(self, request, context):
        """Return a list of recent FmtAssignments for the given loading and discharge port. Will only fetch assignments
        where the proforma ETD is either for a future departure or occurred in the last 30 days.
        NOTE: We will ONLY return assignments with the given ports_of_loading and ports_of_discharge, if no loading ports
        or discharge ports are given we will throw an invalid argument error.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteFmtAssignments(self, request, context):
        """Deletes the assignments associated with the given Shipment Fids."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_FmtAssignmentAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListFmtAssignments": grpc.unary_unary_rpc_method_handler(
            servicer.ListFmtAssignments,
            request_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsResponse.SerializeToString,
        ),
        "GetFmtAssignment": grpc.unary_unary_rpc_method_handler(
            servicer.GetFmtAssignment,
            request_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentResponse.SerializeToString,
        ),
        "GetFmtAssignmentEligibilityForShipmentRoute": grpc.unary_unary_rpc_method_handler(
            servicer.GetFmtAssignmentEligibilityForShipmentRoute,
            request_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentEligibilityForShipmentRouteRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentEligibilityForShipmentRouteResponse.SerializeToString,
        ),
        "CreateFmtAssignments": grpc.unary_unary_rpc_method_handler(
            servicer.CreateFmtAssignments,
            request_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.CreateFmtAssignmentsRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.CreateFmtAssignmentsResponse.SerializeToString,
        ),
        "ListFmtAssignmentsByLoadingAndDischargePorts": grpc.unary_unary_rpc_method_handler(
            servicer.ListFmtAssignmentsByLoadingAndDischargePorts,
            request_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsByLoadingAndDischargePortsRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsByLoadingAndDischargePortsResponse.SerializeToString,
        ),
        "DeleteFmtAssignments": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteFmtAssignments,
            request_deserializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.DeleteFmtAssignmentsRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.DeleteFmtAssignmentsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class FmtAssignmentAPI:
    """Api to allow ocean_supply and ocean_planning to work with Fmt Assignment info."""

    @staticmethod
    def ListFmtAssignments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/ListFmtAssignments",
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetFmtAssignment(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/GetFmtAssignment",
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetFmtAssignmentEligibilityForShipmentRoute(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/GetFmtAssignmentEligibilityForShipmentRoute",
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentEligibilityForShipmentRouteRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.GetFmtAssignmentEligibilityForShipmentRouteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateFmtAssignments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/CreateFmtAssignments",
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.CreateFmtAssignmentsRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.CreateFmtAssignmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListFmtAssignmentsByLoadingAndDischargePorts(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/ListFmtAssignmentsByLoadingAndDischargePorts",
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsByLoadingAndDischargePortsRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.ListFmtAssignmentsByLoadingAndDischargePortsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteFmtAssignments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.oceanfmtassignment.fmtassignment.v1beta1.FmtAssignmentAPI/DeleteFmtAssignments",
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.DeleteFmtAssignmentsRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanfmtassignment_dot_fmtassignment_dot_v1beta1_dot_fmt__assignment__api__pb2.DeleteFmtAssignmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
