# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/wmscell/userwarehouse/entity/v1/user_warehouse.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n=flexport/wmscell/userwarehouse/entity/v1/user_warehouse.proto\x12(flexport.wmscell.userwarehouse.entity.v1\x1a\x1fgoogle/protobuf/timestamp.proto"\xd4\x01\n\x13UserWarehouseEntity\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x16\n\x0ewarehouse_code\x18\x02 \x01(\t\x12.\n\ncreated_at\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\ncreated_by\x18\x04 \x01(\t\x12.\n\nupdated_at\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x12\n\nupdated_by\x18\x06 \x01(\t\x12\x0c\n\x04role\x18\x07 \x01(\tBJ\n,com.flexport.wmscell.userwarehouse.entity.v1B\x18UserWarehouseEntityProtoP\x01\x62\x06proto3'
)


_USERWAREHOUSEENTITY = DESCRIPTOR.message_types_by_name["UserWarehouseEntity"]
UserWarehouseEntity = _reflection.GeneratedProtocolMessageType(
    "UserWarehouseEntity",
    (_message.Message,),
    {
        "DESCRIPTOR": _USERWAREHOUSEENTITY,
        "__module__": "flexport.wmscell.userwarehouse.entity.v1.user_warehouse_pb2",
        # @@protoc_insertion_point(class_scope:flexport.wmscell.userwarehouse.entity.v1.UserWarehouseEntity)
    },
)
_sym_db.RegisterMessage(UserWarehouseEntity)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = (
        b"\n,com.flexport.wmscell.userwarehouse.entity.v1B\030UserWarehouseEntityProtoP\001"
    )
    _USERWAREHOUSEENTITY._serialized_start = 141
    _USERWAREHOUSEENTITY._serialized_end = 353
# @@protoc_insertion_point(module_scope)
