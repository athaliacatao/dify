# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.schedulemanager.manageschedule.v1 import (
    manage_schedule_api_pb2 as flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2,
)


class ManageScheduleAPIStub:
    """APIs for proposing and/or requesting schedules changes and fetching outcomes/metadata from those processes."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateScheduleDates = channel.unary_unary(
            "/flexport.schedulemanager.manageschedule.v1.ManageScheduleAPI/UpdateScheduleDates",
            request_serializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.UpdateScheduleDatesRequest.SerializeToString,
            response_deserializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.UpdateScheduleDatesResponse.FromString,
        )
        self.EvaluateScheduleDates = channel.unary_unary(
            "/flexport.schedulemanager.manageschedule.v1.ManageScheduleAPI/EvaluateScheduleDates",
            request_serializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.EvaluateScheduleDatesRequest.SerializeToString,
            response_deserializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.EvaluateScheduleDatesResponse.FromString,
        )


class ManageScheduleAPIServicer:
    """APIs for proposing and/or requesting schedules changes and fetching outcomes/metadata from those processes."""

    def UpdateScheduleDates(self, request, context):
        """PRIMARY endpoints for persisting & evaluating dates:
        WRITE. Propose a set of date changes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def EvaluateScheduleDates(self, request, context):
        """READ-ONLY. Evaluate the resulting schedule that would result from applying a proposed a set of date changes."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ManageScheduleAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "UpdateScheduleDates": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateScheduleDates,
            request_deserializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.UpdateScheduleDatesRequest.FromString,
            response_serializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.UpdateScheduleDatesResponse.SerializeToString,
        ),
        "EvaluateScheduleDates": grpc.unary_unary_rpc_method_handler(
            servicer.EvaluateScheduleDates,
            request_deserializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.EvaluateScheduleDatesRequest.FromString,
            response_serializer=flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.EvaluateScheduleDatesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.schedulemanager.manageschedule.v1.ManageScheduleAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ManageScheduleAPI:
    """APIs for proposing and/or requesting schedules changes and fetching outcomes/metadata from those processes."""

    @staticmethod
    def UpdateScheduleDates(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.schedulemanager.manageschedule.v1.ManageScheduleAPI/UpdateScheduleDates",
            flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.UpdateScheduleDatesRequest.SerializeToString,
            flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.UpdateScheduleDatesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def EvaluateScheduleDates(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.schedulemanager.manageschedule.v1.ManageScheduleAPI/EvaluateScheduleDates",
            flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.EvaluateScheduleDatesRequest.SerializeToString,
            flexport_dot_schedulemanager_dot_manageschedule_dot_v1_dot_manage__schedule__api__pb2.EvaluateScheduleDatesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
