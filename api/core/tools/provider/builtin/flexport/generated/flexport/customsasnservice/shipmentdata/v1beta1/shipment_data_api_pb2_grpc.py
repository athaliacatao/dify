# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.customsasnservice.shipmentdata.v1beta1 import shipment_data_api_pb2 as flexport_dot_customsasnservice_dot_shipmentdata_dot_v1beta1_dot_shipment__data__api__pb2


class ShipmentDataAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpsertShipmentData = channel.unary_unary(
                '/flexport.customsasnservice.shipmentdata.v1beta1.ShipmentDataAPI/UpsertShipmentData',
                request_serializer=flexport_dot_customsasnservice_dot_shipmentdata_dot_v1beta1_dot_shipment__data__api__pb2.UpsertShipmentDataRequest.SerializeToString,
                response_deserializer=flexport_dot_customsasnservice_dot_shipmentdata_dot_v1beta1_dot_shipment__data__api__pb2.UpsertShipmentDataResponse.FromString,
                )


class ShipmentDataAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpsertShipmentData(self, request, context):
        """This endpoint is responsible for creating or updating a customs order with the shipment data. This also acts as the endpoint to keep ASN up to date with all the latest shipment related information.
        Please refer to the gRPC contract for additional details - https://docs.google.com/document/d/1JRQMfDAZrfgiBopgbbbx0CX7PyLriZfPhBw67PZqLJ8/edit?usp=sharing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ShipmentDataAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpsertShipmentData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertShipmentData,
                    request_deserializer=flexport_dot_customsasnservice_dot_shipmentdata_dot_v1beta1_dot_shipment__data__api__pb2.UpsertShipmentDataRequest.FromString,
                    response_serializer=flexport_dot_customsasnservice_dot_shipmentdata_dot_v1beta1_dot_shipment__data__api__pb2.UpsertShipmentDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.customsasnservice.shipmentdata.v1beta1.ShipmentDataAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ShipmentDataAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpsertShipmentData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customsasnservice.shipmentdata.v1beta1.ShipmentDataAPI/UpsertShipmentData',
            flexport_dot_customsasnservice_dot_shipmentdata_dot_v1beta1_dot_shipment__data__api__pb2.UpsertShipmentDataRequest.SerializeToString,
            flexport_dot_customsasnservice_dot_shipmentdata_dot_v1beta1_dot_shipment__data__api__pb2.UpsertShipmentDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
