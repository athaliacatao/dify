# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.catalog.standingrate.v1 import standing_rate_api_pb2 as flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2


class StandingRateAPIStub(object):
    """The standing rate service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RefreshStandingRates = channel.unary_unary(
                '/flexport.catalog.standingrate.v1.StandingRateAPI/RefreshStandingRates',
                request_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesRequest.SerializeToString,
                response_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesResponse.FromString,
                )
        self.RefreshStandingRatesAsync = channel.unary_unary(
                '/flexport.catalog.standingrate.v1.StandingRateAPI/RefreshStandingRatesAsync',
                request_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesAsyncRequest.SerializeToString,
                response_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesAsyncResponse.FromString,
                )
        self.GetOceanFCLCostStandingRates = channel.unary_unary(
                '/flexport.catalog.standingrate.v1.StandingRateAPI/GetOceanFCLCostStandingRates',
                request_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLCostStandingRatesRequest.SerializeToString,
                response_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLCostStandingRatesResponse.FromString,
                )
        self.GetOceanFCLSellStandingRates = channel.unary_unary(
                '/flexport.catalog.standingrate.v1.StandingRateAPI/GetOceanFCLSellStandingRates',
                request_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLSellStandingRatesRequest.SerializeToString,
                response_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLSellStandingRatesResponse.FromString,
                )


class StandingRateAPIServicer(object):
    """The standing rate service definition.
    """

    def RefreshStandingRates(self, request, context):
        """Refresh the standing rates from the google sheet.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshStandingRatesAsync(self, request, context):
        """Refresh the standing rates from the google sheet via asynchronous task.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOceanFCLCostStandingRates(self, request, context):
        """Get the cost standing rates for ocean FCL services.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOceanFCLSellStandingRates(self, request, context):
        """Get the sell standing rates for ocean FCL services.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StandingRateAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RefreshStandingRates': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshStandingRates,
                    request_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesRequest.FromString,
                    response_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesResponse.SerializeToString,
            ),
            'RefreshStandingRatesAsync': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshStandingRatesAsync,
                    request_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesAsyncRequest.FromString,
                    response_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesAsyncResponse.SerializeToString,
            ),
            'GetOceanFCLCostStandingRates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOceanFCLCostStandingRates,
                    request_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLCostStandingRatesRequest.FromString,
                    response_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLCostStandingRatesResponse.SerializeToString,
            ),
            'GetOceanFCLSellStandingRates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOceanFCLSellStandingRates,
                    request_deserializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLSellStandingRatesRequest.FromString,
                    response_serializer=flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLSellStandingRatesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.catalog.standingrate.v1.StandingRateAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StandingRateAPI(object):
    """The standing rate service definition.
    """

    @staticmethod
    def RefreshStandingRates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.catalog.standingrate.v1.StandingRateAPI/RefreshStandingRates',
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesRequest.SerializeToString,
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshStandingRatesAsync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.catalog.standingrate.v1.StandingRateAPI/RefreshStandingRatesAsync',
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesAsyncRequest.SerializeToString,
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.RefreshStandingRatesAsyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOceanFCLCostStandingRates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.catalog.standingrate.v1.StandingRateAPI/GetOceanFCLCostStandingRates',
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLCostStandingRatesRequest.SerializeToString,
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLCostStandingRatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOceanFCLSellStandingRates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.catalog.standingrate.v1.StandingRateAPI/GetOceanFCLSellStandingRates',
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLSellStandingRatesRequest.SerializeToString,
            flexport_dot_catalog_dot_standingrate_dot_v1_dot_standing__rate__api__pb2.GetOceanFCLSellStandingRatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
