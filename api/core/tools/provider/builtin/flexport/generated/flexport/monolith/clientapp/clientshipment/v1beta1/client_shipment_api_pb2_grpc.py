# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.clientapp.clientshipment.v1beta1 import client_shipment_api_pb2 as flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2


class ClientShipmentAPIStub(object):
    """This API sync the client shipment data back to monorail.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpsertClientShipmentFidCache = channel.unary_unary(
                '/flexport.monolith.clientapp.clientshipment.v1beta1.ClientShipmentAPI/UpsertClientShipmentFidCache',
                request_serializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.UpsertClientShipmentFidCacheRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.UpsertClientShipmentFidCacheResponse.FromString,
                )
        self.CheckForMonorailShipment = channel.unary_unary(
                '/flexport.monolith.clientapp.clientshipment.v1beta1.ClientShipmentAPI/CheckForMonorailShipment',
                request_serializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.CheckForMonorailShipmentRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.CheckForMonorailShipmentResponse.FromString,
                )
        self.DeleteClientShipment = channel.unary_unary(
                '/flexport.monolith.clientapp.clientshipment.v1beta1.ClientShipmentAPI/DeleteClientShipment',
                request_serializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.DeleteClientShipmentRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.DeleteClientShipmentResponse.FromString,
                )


class ClientShipmentAPIServicer(object):
    """This API sync the client shipment data back to monorail.
    """

    def UpsertClientShipmentFidCache(self, request, context):
        """Upsert the flex_id to client_shipment_fid mapping in the monorail client_shipment_cache table.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckForMonorailShipment(self, request, context):
        """Check if an mbl corresponds to an existing active 3PL shipment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClientShipment(self, request, context):
        """Delete the archived/deleted shipments in monorail.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientShipmentAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpsertClientShipmentFidCache': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertClientShipmentFidCache,
                    request_deserializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.UpsertClientShipmentFidCacheRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.UpsertClientShipmentFidCacheResponse.SerializeToString,
            ),
            'CheckForMonorailShipment': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckForMonorailShipment,
                    request_deserializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.CheckForMonorailShipmentRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.CheckForMonorailShipmentResponse.SerializeToString,
            ),
            'DeleteClientShipment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClientShipment,
                    request_deserializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.DeleteClientShipmentRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.DeleteClientShipmentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.clientapp.clientshipment.v1beta1.ClientShipmentAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientShipmentAPI(object):
    """This API sync the client shipment data back to monorail.
    """

    @staticmethod
    def UpsertClientShipmentFidCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.clientapp.clientshipment.v1beta1.ClientShipmentAPI/UpsertClientShipmentFidCache',
            flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.UpsertClientShipmentFidCacheRequest.SerializeToString,
            flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.UpsertClientShipmentFidCacheResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckForMonorailShipment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.clientapp.clientshipment.v1beta1.ClientShipmentAPI/CheckForMonorailShipment',
            flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.CheckForMonorailShipmentRequest.SerializeToString,
            flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.CheckForMonorailShipmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteClientShipment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.clientapp.clientshipment.v1beta1.ClientShipmentAPI/DeleteClientShipment',
            flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.DeleteClientShipmentRequest.SerializeToString,
            flexport_dot_monolith_dot_clientapp_dot_clientshipment_dot_v1beta1_dot_client__shipment__api__pb2.DeleteClientShipmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
