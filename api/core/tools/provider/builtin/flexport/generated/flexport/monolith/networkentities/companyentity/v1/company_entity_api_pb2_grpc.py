# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.networkentities.companyentity.v1 import company_entity_api_pb2 as flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2


class CompanyEntityAPIStub(object):
    """This service is used by any NIS to retrieve CompanyEntity from monolith DB.
    Initially it will be used by Finance team's lately extracted NIS.
    Production readiness: https://docs.google.com/document/d/1u5ps7A5tS-Mj-hd3AT8A_tH4U5L1uNOzVQb-UdoFen0/edit#
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCompanyEntity = channel.unary_unary(
                '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetCompanyEntity',
                request_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityResponse.FromString,
                )
        self.GetAllCompanyEntities = channel.unary_unary(
                '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetAllCompanyEntities',
                request_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetAllCompanyEntitiesRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetAllCompanyEntitiesResponse.FromString,
                )
        self.GetCompanyEntityByExternalRef = channel.unary_unary(
                '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetCompanyEntityByExternalRef',
                request_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByExternalRefRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByExternalRefResponse.FromString,
                )
        self.GetCompanyEntityByClient = channel.unary_unary(
                '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetCompanyEntityByClient',
                request_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByClientRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByClientResponse.FromString,
                )


class CompanyEntityAPIServicer(object):
    """This service is used by any NIS to retrieve CompanyEntity from monolith DB.
    Initially it will be used by Finance team's lately extracted NIS.
    Production readiness: https://docs.google.com/document/d/1u5ps7A5tS-Mj-hd3AT8A_tH4U5L1uNOzVQb-UdoFen0/edit#
    """

    def GetCompanyEntity(self, request, context):
        """Get company entity for a given fid (Flexport Resource Identifiers).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCompanyEntities(self, request, context):
        """Get all company entity for a given company_fid (Flexport Resource Identifiers).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompanyEntityByExternalRef(self, request, context):
        """Get company entity for a given external reference, account_id. Auto token is a place holder right now
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCompanyEntityByClient(self, request, context):
        """Get company entities for a list of client FIDs.

        The primary operating company entity is returned for each client.
        The returned entities are in no particular order, and can be matched to the request using
        the [client_fid] field. Clients that were not found will not have a matching return entry.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CompanyEntityAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCompanyEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompanyEntity,
                    request_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityResponse.SerializeToString,
            ),
            'GetAllCompanyEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCompanyEntities,
                    request_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetAllCompanyEntitiesRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetAllCompanyEntitiesResponse.SerializeToString,
            ),
            'GetCompanyEntityByExternalRef': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompanyEntityByExternalRef,
                    request_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByExternalRefRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByExternalRefResponse.SerializeToString,
            ),
            'GetCompanyEntityByClient': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompanyEntityByClient,
                    request_deserializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByClientRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByClientResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CompanyEntityAPI(object):
    """This service is used by any NIS to retrieve CompanyEntity from monolith DB.
    Initially it will be used by Finance team's lately extracted NIS.
    Production readiness: https://docs.google.com/document/d/1u5ps7A5tS-Mj-hd3AT8A_tH4U5L1uNOzVQb-UdoFen0/edit#
    """

    @staticmethod
    def GetCompanyEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetCompanyEntity',
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityRequest.SerializeToString,
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCompanyEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetAllCompanyEntities',
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetAllCompanyEntitiesRequest.SerializeToString,
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetAllCompanyEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompanyEntityByExternalRef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetCompanyEntityByExternalRef',
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByExternalRefRequest.SerializeToString,
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByExternalRefResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCompanyEntityByClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.networkentities.companyentity.v1.CompanyEntityAPI/GetCompanyEntityByClient',
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByClientRequest.SerializeToString,
            flexport_dot_monolith_dot_networkentities_dot_companyentity_dot_v1_dot_company__entity__api__pb2.GetCompanyEntityByClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
