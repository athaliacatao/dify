# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.dotorg.carboncalculationhelper.v1beta1 import carbon_calculation_helper_api_pb2 as flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2


class CarbonCalculationHelperAPIStub(object):
    """DotOrg API to provide data from the monolith to feed to NIS carbon calculator
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BuildRequestLegsForShipment = channel.unary_unary(
                '/flexport.monolith.dotorg.carboncalculationhelper.v1beta1.CarbonCalculationHelperAPI/BuildRequestLegsForShipment',
                request_serializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.BuildRequestLegsForShipmentRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.BuildRequestLegsForShipmentResponse.FromString,
                )
        self.GetPortCoordinates = channel.unary_unary(
                '/flexport.monolith.dotorg.carboncalculationhelper.v1beta1.CarbonCalculationHelperAPI/GetPortCoordinates',
                request_serializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetPortCoordinatesRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetPortCoordinatesResponse.FromString,
                )
        self.GetNearestPort = channel.unary_unary(
                '/flexport.monolith.dotorg.carboncalculationhelper.v1beta1.CarbonCalculationHelperAPI/GetNearestPort',
                request_serializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetNearestPortRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetNearestPortResponse.FromString,
                )


class CarbonCalculationHelperAPIServicer(object):
    """DotOrg API to provide data from the monolith to feed to NIS carbon calculator
    """

    def BuildRequestLegsForShipment(self, request, context):
        """Returns request legs for a shipment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPortCoordinates(self, request, context):
        """Returns coordinates for a port
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNearestPort(self, request, context):
        """Returns coordinates for a port
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CarbonCalculationHelperAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BuildRequestLegsForShipment': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildRequestLegsForShipment,
                    request_deserializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.BuildRequestLegsForShipmentRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.BuildRequestLegsForShipmentResponse.SerializeToString,
            ),
            'GetPortCoordinates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPortCoordinates,
                    request_deserializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetPortCoordinatesRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetPortCoordinatesResponse.SerializeToString,
            ),
            'GetNearestPort': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNearestPort,
                    request_deserializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetNearestPortRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetNearestPortResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.dotorg.carboncalculationhelper.v1beta1.CarbonCalculationHelperAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CarbonCalculationHelperAPI(object):
    """DotOrg API to provide data from the monolith to feed to NIS carbon calculator
    """

    @staticmethod
    def BuildRequestLegsForShipment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.dotorg.carboncalculationhelper.v1beta1.CarbonCalculationHelperAPI/BuildRequestLegsForShipment',
            flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.BuildRequestLegsForShipmentRequest.SerializeToString,
            flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.BuildRequestLegsForShipmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPortCoordinates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.dotorg.carboncalculationhelper.v1beta1.CarbonCalculationHelperAPI/GetPortCoordinates',
            flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetPortCoordinatesRequest.SerializeToString,
            flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetPortCoordinatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNearestPort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.dotorg.carboncalculationhelper.v1beta1.CarbonCalculationHelperAPI/GetNearestPort',
            flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetNearestPortRequest.SerializeToString,
            flexport_dot_monolith_dot_dotorg_dot_carboncalculationhelper_dot_v1beta1_dot_carbon__calculation__helper__api__pb2.GetNearestPortResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
