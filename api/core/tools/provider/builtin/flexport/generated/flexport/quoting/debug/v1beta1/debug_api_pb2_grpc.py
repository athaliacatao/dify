# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.quoting.debug.v1beta1 import debug_api_pb2 as flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2


class DebugAPIStub(object):
    """Services only needed for testing/debugging.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCarriers = channel.unary_unary(
                '/flexport.quoting.debug.v1beta1.DebugAPI/GetCarriers',
                request_serializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.GetCarriersRequest.SerializeToString,
                response_deserializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.GetCarriersResponse.FromString,
                )
        self.TestStuff = channel.unary_unary(
                '/flexport.quoting.debug.v1beta1.DebugAPI/TestStuff',
                request_serializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.TestStuffRequest.SerializeToString,
                response_deserializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.TestStuffResponse.FromString,
                )


class DebugAPIServicer(object):
    """Services only needed for testing/debugging.
    """

    def GetCarriers(self, request, context):
        """Calls `CoreNetworkDataClient` to pull carriers from core's internal-api.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestStuff(self, request, context):
        """Endpoint that can be used to test anything.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DebugAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCarriers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCarriers,
                    request_deserializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.GetCarriersRequest.FromString,
                    response_serializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.GetCarriersResponse.SerializeToString,
            ),
            'TestStuff': grpc.unary_unary_rpc_method_handler(
                    servicer.TestStuff,
                    request_deserializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.TestStuffRequest.FromString,
                    response_serializer=flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.TestStuffResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.quoting.debug.v1beta1.DebugAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DebugAPI(object):
    """Services only needed for testing/debugging.
    """

    @staticmethod
    def GetCarriers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.quoting.debug.v1beta1.DebugAPI/GetCarriers',
            flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.GetCarriersRequest.SerializeToString,
            flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.GetCarriersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TestStuff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.quoting.debug.v1beta1.DebugAPI/TestStuff',
            flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.TestStuffRequest.SerializeToString,
            flexport_dot_quoting_dot_debug_dot_v1beta1_dot_debug__api__pb2.TestStuffResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
