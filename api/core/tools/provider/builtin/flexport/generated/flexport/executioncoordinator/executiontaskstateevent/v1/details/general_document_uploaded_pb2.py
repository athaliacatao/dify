# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/executioncoordinator/executiontaskstateevent/v1/details/general_document_uploaded.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n`flexport/executioncoordinator/executiontaskstateevent/v1/details/general_document_uploaded.proto\x12\x38\x66lexport.executioncoordinator.executiontaskstateevent.v1"/\n\x17GeneralDocumentUploaded\x12\x14\n\x0c\x64ocument_fid\x18\x01 \x01(\tB\x9c\x01\n<com.flexport.executioncoordinator.executiontaskstateevent.v1B\x1cGeneralDocumentUploadedProtoP\x01\xea\x02;Flexport::ExecutionCoordinator::ExecutionTaskStateEvent::V1b\x06proto3'
)


_GENERALDOCUMENTUPLOADED = DESCRIPTOR.message_types_by_name["GeneralDocumentUploaded"]
GeneralDocumentUploaded = _reflection.GeneratedProtocolMessageType(
    "GeneralDocumentUploaded",
    (_message.Message,),
    {
        "DESCRIPTOR": _GENERALDOCUMENTUPLOADED,
        "__module__": "flexport.executioncoordinator.executiontaskstateevent.v1.details.general_document_uploaded_pb2",
        # @@protoc_insertion_point(class_scope:flexport.executioncoordinator.executiontaskstateevent.v1.GeneralDocumentUploaded)
    },
)
_sym_db.RegisterMessage(GeneralDocumentUploaded)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n<com.flexport.executioncoordinator.executiontaskstateevent.v1B\034GeneralDocumentUploadedProtoP\001\352\002;Flexport::ExecutionCoordinator::ExecutionTaskStateEvent::V1"
    _GENERALDOCUMENTUPLOADED._serialized_start = 158
    _GENERALDOCUMENTUPLOADED._serialized_end = 205
# @@protoc_insertion_point(module_scope)
