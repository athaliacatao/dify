# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.executioncoordinator.executiontask.v1 import execution_task_api_pb2 as flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2


class ExecutionTaskAPIStub(object):
    """An API for interacting with ExecutionTask entities.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetExecutionTask = channel.unary_unary(
                '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/GetExecutionTask',
                request_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.GetExecutionTaskRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.GetExecutionTaskResponse.FromString,
                )
        self.ListExecutionTasks = channel.unary_unary(
                '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/ListExecutionTasks',
                request_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTasksRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTasksResponse.FromString,
                )
        self.ListExecutionTaskRevisions = channel.unary_unary(
                '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/ListExecutionTaskRevisions',
                request_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTaskRevisionsRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTaskRevisionsResponse.FromString,
                )
        self.BatchGetExecutionTasks = channel.unary_unary(
                '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/BatchGetExecutionTasks',
                request_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.BatchGetExecutionTasksRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.BatchGetExecutionTasksResponse.FromString,
                )


class ExecutionTaskAPIServicer(object):
    """An API for interacting with ExecutionTask entities.
    """

    def GetExecutionTask(self, request, context):
        """Retrieves an ExecutionTask.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExecutionTasks(self, request, context):
        """Retrieves ExecutionTasks for a provided query.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExecutionTaskRevisions(self, request, context):
        """Retrieves all revisions of an ExecutionTask, sorted in chronological order (earliest revision first).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetExecutionTasks(self, request, context):
        """Retrieves a batch of ExecutionTasks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExecutionTaskAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetExecutionTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExecutionTask,
                    request_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.GetExecutionTaskRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.GetExecutionTaskResponse.SerializeToString,
            ),
            'ListExecutionTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExecutionTasks,
                    request_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTasksRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTasksResponse.SerializeToString,
            ),
            'ListExecutionTaskRevisions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExecutionTaskRevisions,
                    request_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTaskRevisionsRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTaskRevisionsResponse.SerializeToString,
            ),
            'BatchGetExecutionTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetExecutionTasks,
                    request_deserializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.BatchGetExecutionTasksRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.BatchGetExecutionTasksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExecutionTaskAPI(object):
    """An API for interacting with ExecutionTask entities.
    """

    @staticmethod
    def GetExecutionTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/GetExecutionTask',
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.GetExecutionTaskRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.GetExecutionTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExecutionTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/ListExecutionTasks',
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTasksRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExecutionTaskRevisions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/ListExecutionTaskRevisions',
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTaskRevisionsRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.ListExecutionTaskRevisionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetExecutionTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.executiontask.v1.ExecutionTaskAPI/BatchGetExecutionTasks',
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.BatchGetExecutionTasksRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_executiontask_dot_v1_dot_execution__task__api__pb2.BatchGetExecutionTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
