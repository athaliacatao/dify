# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.oceanplanning.carrier.v1 import carrier_api_pb2 as flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2


class CarrierAPIStub(object):
    """Retrieve carrier information
    Carriers are vessel operators for eg. air, ocean or trucking.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetByFid = channel.unary_unary(
                '/flexport.monolith.oceanplanning.carrier.v1.CarrierAPI/GetByFid',
                request_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByFidRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByFidResponse.FromString,
                )
        self.GetByScacCode = channel.unary_unary(
                '/flexport.monolith.oceanplanning.carrier.v1.CarrierAPI/GetByScacCode',
                request_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByScacCodeRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByScacCodeResponse.FromString,
                )
        self.GetByIataCode = channel.unary_unary(
                '/flexport.monolith.oceanplanning.carrier.v1.CarrierAPI/GetByIataCode',
                request_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByIataCodeRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByIataCodeResponse.FromString,
                )


class CarrierAPIServicer(object):
    """Retrieve carrier information
    Carriers are vessel operators for eg. air, ocean or trucking.
    """

    def GetByFid(self, request, context):
        """Fetches carrier information for the given FIDs.

        FIDs that weren't found will be returned as an empty proto message. The carriers are
        returned in the same order they were requested.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByScacCode(self, request, context):
        """Look up carriers by their scac code. If carriers were not found for scac codes, there
        will be no carrier returned for those scac codes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByIataCode(self, request, context):
        """Look up carriers by their iata code. If carriers were not found for iata codes, there
        will be no carrier returned for those iata codes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CarrierAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetByFid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByFid,
                    request_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByFidRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByFidResponse.SerializeToString,
            ),
            'GetByScacCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByScacCode,
                    request_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByScacCodeRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByScacCodeResponse.SerializeToString,
            ),
            'GetByIataCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByIataCode,
                    request_deserializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByIataCodeRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByIataCodeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.oceanplanning.carrier.v1.CarrierAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CarrierAPI(object):
    """Retrieve carrier information
    Carriers are vessel operators for eg. air, ocean or trucking.
    """

    @staticmethod
    def GetByFid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.oceanplanning.carrier.v1.CarrierAPI/GetByFid',
            flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByFidRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByFidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByScacCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.oceanplanning.carrier.v1.CarrierAPI/GetByScacCode',
            flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByScacCodeRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByScacCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByIataCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.oceanplanning.carrier.v1.CarrierAPI/GetByIataCode',
            flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByIataCodeRequest.SerializeToString,
            flexport_dot_monolith_dot_oceanplanning_dot_carrier_dot_v1_dot_carrier__api__pb2.GetByIataCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
