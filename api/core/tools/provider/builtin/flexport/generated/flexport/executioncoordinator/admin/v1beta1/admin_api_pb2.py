# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/executioncoordinator/admin/v1beta1/admin_api.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n;flexport/executioncoordinator/admin/v1beta1/admin_api.proto\x12+flexport.executioncoordinator.admin.v1beta1\x1a\x45\x66lexport/executioncoordinator/executioncargo/v1/execution_cargo.proto\x1a\x43\x66lexport/executioncoordinator/executionplan/v1/execution_plan.proto" \n\x1eGetApproximateRowCountsRequest"\xff\x04\n\x1fGetApproximateRowCountsResponse\x12)\n!approximate_execution_order_count\x18\x01 \x01(\x05\x12\x32\n*approximate_execution_order_revision_count\x18\x02 \x01(\x05\x12(\n approximate_execution_task_count\x18\x03 \x01(\x05\x12\x31\n)approximate_execution_task_revision_count\x18\x04 \x01(\x05\x12\x36\n.approximate_execution_task_derived_cargo_count\x18\x0b \x01(\x05\x12\x31\n)approximate_execution_plan_revision_count\x18\x05 \x01(\x05\x12\x34\n,approximate_execution_task_state_event_count\x18\x06 \x01(\x05\x12)\n!approximate_execution_cargo_count\x18\x07 \x01(\x05\x12\x32\n*approximate_execution_cargo_revision_count\x18\x08 \x01(\x05\x12\x35\n-approximate_execution_order_state_event_count\x18\t \x01(\x05\x12*\n"approximate_derived_shipment_count\x18\n \x01(\x05\x12=\n5approximate_execution_task_state_event_rejected_count\x18\x0c \x01(\x05" \n\x1eGetLatestExecutionPlansRequest"s\n\x1fGetLatestExecutionPlansResponse\x12P\n\trevisions\x18\x01 \x03(\x0b\x32=.flexport.executioncoordinator.executionplan.v1.ExecutionPlan"!\n\x1fGetLatestExecutionCargosRequest"}\n GetLatestExecutionCargosResponse\x12Y\n\x10latest_revisions\x18\x01 \x03(\x0b\x32?.flexport.executioncoordinator.executioncargo.v1.ExecutionCargo"#\n!ThrowErrorForSentryTestingRequest"$\n"ThrowErrorForSentryTestingResponse"%\n#CaptureErrorForSentryTestingRequest"&\n$CaptureErrorForSentryTestingResponse"\x1f\n\x1dSignalForPubNubTestingRequest" \n\x1eSignalForPubNubTestingResponse2\xec\x08\n\x08\x41\x64minAPI\x12\xb4\x01\n\x17GetApproximateRowCounts\x12K.flexport.executioncoordinator.admin.v1beta1.GetApproximateRowCountsRequest\x1aL.flexport.executioncoordinator.admin.v1beta1.GetApproximateRowCountsResponse\x12\xb4\x01\n\x17GetLatestExecutionPlans\x12K.flexport.executioncoordinator.admin.v1beta1.GetLatestExecutionPlansRequest\x1aL.flexport.executioncoordinator.admin.v1beta1.GetLatestExecutionPlansResponse\x12\xb7\x01\n\x18GetLatestExecutionCargos\x12L.flexport.executioncoordinator.admin.v1beta1.GetLatestExecutionCargosRequest\x1aM.flexport.executioncoordinator.admin.v1beta1.GetLatestExecutionCargosResponse\x12\xbd\x01\n\x1aThrowErrorForSentryTesting\x12N.flexport.executioncoordinator.admin.v1beta1.ThrowErrorForSentryTestingRequest\x1aO.flexport.executioncoordinator.admin.v1beta1.ThrowErrorForSentryTestingResponse\x12\xc3\x01\n\x1c\x43\x61ptureErrorForSentryTesting\x12P.flexport.executioncoordinator.admin.v1beta1.CaptureErrorForSentryTestingRequest\x1aQ.flexport.executioncoordinator.admin.v1beta1.CaptureErrorForSentryTestingResponse\x12\xb1\x01\n\x16SignalForPubNubTesting\x12J.flexport.executioncoordinator.admin.v1beta1.SignalForPubNubTestingRequest\x1aK.flexport.executioncoordinator.admin.v1beta1.SignalForPubNubTestingResponseBs\n/com.flexport.executioncoordinator.admin.v1beta1B\rAdminApiProtoP\x01\xea\x02.Flexport::ExecutionCoordinator::Admin::V1Beta1b\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(
    DESCRIPTOR, "flexport.executioncoordinator.admin.v1beta1.admin_api_pb2", _globals
)
if _descriptor._USE_C_DESCRIPTORS == False:
    _globals["DESCRIPTOR"]._options = None
    _globals[
        "DESCRIPTOR"
    ]._serialized_options = b"\n/com.flexport.executioncoordinator.admin.v1beta1B\rAdminApiProtoP\001\352\002.Flexport::ExecutionCoordinator::Admin::V1Beta1"
    _globals["_GETAPPROXIMATEROWCOUNTSREQUEST"]._serialized_start = 248
    _globals["_GETAPPROXIMATEROWCOUNTSREQUEST"]._serialized_end = 280
    _globals["_GETAPPROXIMATEROWCOUNTSRESPONSE"]._serialized_start = 283
    _globals["_GETAPPROXIMATEROWCOUNTSRESPONSE"]._serialized_end = 922
    _globals["_GETLATESTEXECUTIONPLANSREQUEST"]._serialized_start = 924
    _globals["_GETLATESTEXECUTIONPLANSREQUEST"]._serialized_end = 956
    _globals["_GETLATESTEXECUTIONPLANSRESPONSE"]._serialized_start = 958
    _globals["_GETLATESTEXECUTIONPLANSRESPONSE"]._serialized_end = 1073
    _globals["_GETLATESTEXECUTIONCARGOSREQUEST"]._serialized_start = 1075
    _globals["_GETLATESTEXECUTIONCARGOSREQUEST"]._serialized_end = 1108
    _globals["_GETLATESTEXECUTIONCARGOSRESPONSE"]._serialized_start = 1110
    _globals["_GETLATESTEXECUTIONCARGOSRESPONSE"]._serialized_end = 1235
    _globals["_THROWERRORFORSENTRYTESTINGREQUEST"]._serialized_start = 1237
    _globals["_THROWERRORFORSENTRYTESTINGREQUEST"]._serialized_end = 1272
    _globals["_THROWERRORFORSENTRYTESTINGRESPONSE"]._serialized_start = 1274
    _globals["_THROWERRORFORSENTRYTESTINGRESPONSE"]._serialized_end = 1310
    _globals["_CAPTUREERRORFORSENTRYTESTINGREQUEST"]._serialized_start = 1312
    _globals["_CAPTUREERRORFORSENTRYTESTINGREQUEST"]._serialized_end = 1349
    _globals["_CAPTUREERRORFORSENTRYTESTINGRESPONSE"]._serialized_start = 1351
    _globals["_CAPTUREERRORFORSENTRYTESTINGRESPONSE"]._serialized_end = 1389
    _globals["_SIGNALFORPUBNUBTESTINGREQUEST"]._serialized_start = 1391
    _globals["_SIGNALFORPUBNUBTESTINGREQUEST"]._serialized_end = 1422
    _globals["_SIGNALFORPUBNUBTESTINGRESPONSE"]._serialized_start = 1424
    _globals["_SIGNALFORPUBNUBTESTINGRESPONSE"]._serialized_end = 1456
    _globals["_ADMINAPI"]._serialized_start = 1459
    _globals["_ADMINAPI"]._serialized_end = 2591
# @@protoc_insertion_point(module_scope)
