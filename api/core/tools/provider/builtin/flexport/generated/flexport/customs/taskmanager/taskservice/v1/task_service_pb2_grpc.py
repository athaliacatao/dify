# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.customs.taskmanager.taskservice.v1 import task_service_pb2 as flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2


class TaskServiceAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpsertTask = channel.unary_unary(
                '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/UpsertTask',
                request_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.UpsertTaskRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.UpsertTaskResponse.FromString,
                )
        self.CompleteTask = channel.unary_unary(
                '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/CompleteTask',
                request_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTaskRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTaskResponse.FromString,
                )
        self.CompleteTasks = channel.unary_unary(
                '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/CompleteTasks',
                request_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTasksRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTasksResponse.FromString,
                )
        self.GetTaskByFid = channel.unary_unary(
                '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/GetTaskByFid',
                request_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTaskByFidRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTaskByFidResponse.FromString,
                )
        self.GetTasksByFids = channel.unary_unary(
                '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/GetTasksByFids',
                request_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTasksByFidsRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTasksByFidsResponse.FromString,
                )


class TaskServiceAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpsertTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskByFid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTasksByFids(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskServiceAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpsertTask': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertTask,
                    request_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.UpsertTaskRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.UpsertTaskResponse.SerializeToString,
            ),
            'CompleteTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteTask,
                    request_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTaskRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTaskResponse.SerializeToString,
            ),
            'CompleteTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteTasks,
                    request_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTasksRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTasksResponse.SerializeToString,
            ),
            'GetTaskByFid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskByFid,
                    request_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTaskByFidRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTaskByFidResponse.SerializeToString,
            ),
            'GetTasksByFids': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTasksByFids,
                    request_deserializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTasksByFidsRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTasksByFidsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaskServiceAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpsertTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/UpsertTask',
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.UpsertTaskRequest.SerializeToString,
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.UpsertTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompleteTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/CompleteTask',
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTaskRequest.SerializeToString,
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompleteTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/CompleteTasks',
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTasksRequest.SerializeToString,
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.CompleteTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskByFid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/GetTaskByFid',
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTaskByFidRequest.SerializeToString,
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTaskByFidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTasksByFids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.taskmanager.taskservice.v1.TaskServiceAPI/GetTasksByFids',
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTasksByFidsRequest.SerializeToString,
            flexport_dot_customs_dot_taskmanager_dot_taskservice_dot_v1_dot_task__service__pb2.GetTasksByFidsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
