# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.customsciservice.commercialinvoice.v1beta1 import commercial_invoice_api_pb2 as flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2


class CommercialInvoiceAPIStub(object):
    """Provides the CommercialInvoice document
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCommercialInvoice = channel.unary_unary(
                '/flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceAPI/GetCommercialInvoice',
                request_serializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.GetCommercialInvoiceRequest.SerializeToString,
                response_deserializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.GetCommercialInvoiceResponse.FromString,
                )
        self.CreateCommercialInvoice = channel.unary_unary(
                '/flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceAPI/CreateCommercialInvoice',
                request_serializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.CreateCommercialInvoiceRequest.SerializeToString,
                response_deserializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.CreateCommercialInvoiceResponse.FromString,
                )
        self.UpdateProcessingStatus = channel.unary_unary(
                '/flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceAPI/UpdateProcessingStatus',
                request_serializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.UpdateProcessingStatusRequest.SerializeToString,
                response_deserializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.UpdateProcessingStatusResponse.FromString,
                )


class CommercialInvoiceAPIServicer(object):
    """Provides the CommercialInvoice document
    """

    def GetCommercialInvoice(self, request, context):
        """Returns the CommercialInvoice, see the proto definition for more details.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCommercialInvoice(self, request, context):
        """Creates a Commercial Invoice in the Customs CI Service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProcessingStatus(self, request, context):
        """Updates the processing status of a Raw Commercial Invoice
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommercialInvoiceAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCommercialInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommercialInvoice,
                    request_deserializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.GetCommercialInvoiceRequest.FromString,
                    response_serializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.GetCommercialInvoiceResponse.SerializeToString,
            ),
            'CreateCommercialInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCommercialInvoice,
                    request_deserializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.CreateCommercialInvoiceRequest.FromString,
                    response_serializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.CreateCommercialInvoiceResponse.SerializeToString,
            ),
            'UpdateProcessingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProcessingStatus,
                    request_deserializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.UpdateProcessingStatusRequest.FromString,
                    response_serializer=flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.UpdateProcessingStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CommercialInvoiceAPI(object):
    """Provides the CommercialInvoice document
    """

    @staticmethod
    def GetCommercialInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceAPI/GetCommercialInvoice',
            flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.GetCommercialInvoiceRequest.SerializeToString,
            flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.GetCommercialInvoiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCommercialInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceAPI/CreateCommercialInvoice',
            flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.CreateCommercialInvoiceRequest.SerializeToString,
            flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.CreateCommercialInvoiceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProcessingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceAPI/UpdateProcessingStatus',
            flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.UpdateProcessingStatusRequest.SerializeToString,
            flexport_dot_customsciservice_dot_commercialinvoice_dot_v1beta1_dot_commercial__invoice__api__pb2.UpdateProcessingStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
