# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/storage/tag/v1beta1/tag.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n&flexport/storage/tag/v1beta1/tag.proto\x12\x1c\x66lexport.storage.tag.v1beta1"?\n\x03Tag\x12\x10\n\x08tag_type\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x17\n\x0f\x66ile_object_fid\x18\x03 \x01(\t"\xcd\x01\n\x07TagType\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04slug\x18\x03 \x01(\t\x12=\n\x04type\x18\x04 \x01(\x0e\x32/.flexport.storage.tag.v1beta1.TagType.ValueType\x12\x0c\n\x04team\x18\x05 \x01(\t\x12\x11\n\tnamespace\x18\x06 \x01(\t":\n\tValueType\x12\x16\n\x12VALUE_TYPE_INVALID\x10\x00\x12\x15\n\x11VALUE_TYPE_STRING\x10\x01\x42P\n com.flexport.storage.tag.v1beta1B\x08TagProtoP\x01\xea\x02\x1f\x46lexport::Storage::Tag::V1Beta1b\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "flexport.storage.tag.v1beta1.tag_pb2", _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
    _globals["DESCRIPTOR"]._options = None
    _globals[
        "DESCRIPTOR"
    ]._serialized_options = (
        b"\n com.flexport.storage.tag.v1beta1B\010TagProtoP\001\352\002\037Flexport::Storage::Tag::V1Beta1"
    )
    _globals["_TAG"]._serialized_start = 72
    _globals["_TAG"]._serialized_end = 135
    _globals["_TAGTYPE"]._serialized_start = 138
    _globals["_TAGTYPE"]._serialized_end = 343
    _globals["_TAGTYPE_VALUETYPE"]._serialized_start = 285
    _globals["_TAGTYPE_VALUETYPE"]._serialized_end = 343
# @@protoc_insertion_point(module_scope)
