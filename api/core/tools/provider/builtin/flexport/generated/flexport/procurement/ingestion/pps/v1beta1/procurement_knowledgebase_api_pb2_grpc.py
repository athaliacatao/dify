# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.procurement.ingestion.pps.v1beta1 import (
    procurement_knowledgebase_api_pb2 as flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2,
)


class ProcurementKnowledgeBaseAPIStub:
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RefreshKnowledgeBase = channel.unary_unary(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/RefreshKnowledgeBase",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.RefreshKnowledgeBaseRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.RefreshKnowledgeBaseResponse.FromString,
        )
        self.GetSurchargeApplicability = channel.unary_unary(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetSurchargeApplicability",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetSurchargeApplicabilityRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetSurchargeApplicabilityResponse.FromString,
        )
        self.ListSurchargeApplicabilities = channel.unary_stream(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/ListSurchargeApplicabilities",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.ListSurchargeApplicabilitiesRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.ListSurchargeApplicabilitiesResponse.FromString,
        )
        self.GetCostOffsets = channel.unary_unary(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetCostOffsets",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetCostOffsetsRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetCostOffsetsResponse.FromString,
        )
        self.GetDetentionAndDemurrage = channel.unary_unary(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetDetentionAndDemurrage",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetDetentionAndDemurrageRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetDetentionAndDemurrageResponse.FromString,
        )
        self.GetLocodesFromNames = channel.unary_unary(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetLocodesFromNames",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetLocodesFromNamesRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetLocodesFromNamesResponse.FromString,
        )
        self.GetPartnerRates = channel.unary_unary(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetPartnerRates",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartnerRatesRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartnerRatesResponse.FromString,
        )
        self.GetPartOfFreightEstimations = channel.unary_unary(
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetPartOfFreightEstimations",
            request_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartOfFreightEstimationsRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartOfFreightEstimationsResponse.FromString,
        )


class ProcurementKnowledgeBaseAPIServicer:
    """Missing associated documentation comment in .proto file."""

    def RefreshKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetSurchargeApplicability(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListSurchargeApplicabilities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetCostOffsets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetDetentionAndDemurrage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetLocodesFromNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetPartnerRates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetPartOfFreightEstimations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ProcurementKnowledgeBaseAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "RefreshKnowledgeBase": grpc.unary_unary_rpc_method_handler(
            servicer.RefreshKnowledgeBase,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.RefreshKnowledgeBaseRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.RefreshKnowledgeBaseResponse.SerializeToString,
        ),
        "GetSurchargeApplicability": grpc.unary_unary_rpc_method_handler(
            servicer.GetSurchargeApplicability,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetSurchargeApplicabilityRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetSurchargeApplicabilityResponse.SerializeToString,
        ),
        "ListSurchargeApplicabilities": grpc.unary_stream_rpc_method_handler(
            servicer.ListSurchargeApplicabilities,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.ListSurchargeApplicabilitiesRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.ListSurchargeApplicabilitiesResponse.SerializeToString,
        ),
        "GetCostOffsets": grpc.unary_unary_rpc_method_handler(
            servicer.GetCostOffsets,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetCostOffsetsRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetCostOffsetsResponse.SerializeToString,
        ),
        "GetDetentionAndDemurrage": grpc.unary_unary_rpc_method_handler(
            servicer.GetDetentionAndDemurrage,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetDetentionAndDemurrageRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetDetentionAndDemurrageResponse.SerializeToString,
        ),
        "GetLocodesFromNames": grpc.unary_unary_rpc_method_handler(
            servicer.GetLocodesFromNames,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetLocodesFromNamesRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetLocodesFromNamesResponse.SerializeToString,
        ),
        "GetPartnerRates": grpc.unary_unary_rpc_method_handler(
            servicer.GetPartnerRates,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartnerRatesRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartnerRatesResponse.SerializeToString,
        ),
        "GetPartOfFreightEstimations": grpc.unary_unary_rpc_method_handler(
            servicer.GetPartOfFreightEstimations,
            request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartOfFreightEstimationsRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartOfFreightEstimationsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ProcurementKnowledgeBaseAPI:
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RefreshKnowledgeBase(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/RefreshKnowledgeBase",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.RefreshKnowledgeBaseRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.RefreshKnowledgeBaseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetSurchargeApplicability(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetSurchargeApplicability",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetSurchargeApplicabilityRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetSurchargeApplicabilityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListSurchargeApplicabilities(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/ListSurchargeApplicabilities",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.ListSurchargeApplicabilitiesRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.ListSurchargeApplicabilitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetCostOffsets(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetCostOffsets",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetCostOffsetsRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetCostOffsetsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetDetentionAndDemurrage(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetDetentionAndDemurrage",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetDetentionAndDemurrageRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetDetentionAndDemurrageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetLocodesFromNames(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetLocodesFromNames",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetLocodesFromNamesRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetLocodesFromNamesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetPartnerRates(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetPartnerRates",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartnerRatesRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartnerRatesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetPartOfFreightEstimations(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.ingestion.pps.v1beta1.ProcurementKnowledgeBaseAPI/GetPartOfFreightEstimations",
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartOfFreightEstimationsRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pps_dot_v1beta1_dot_procurement__knowledgebase__api__pb2.GetPartOfFreightEstimationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
