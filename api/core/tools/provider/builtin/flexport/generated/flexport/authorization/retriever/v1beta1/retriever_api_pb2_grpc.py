# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.authorization.retriever.v1beta1 import retriever_api_pb2 as flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2


class RetrieverAPIStub(object):
    """Retrieve operations and resources relevant to permissions.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOperations = channel.unary_unary(
                '/flexport.authorization.retriever.v1beta1.RetrieverAPI/GetOperations',
                request_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetOperationsRequest.SerializeToString,
                response_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetOperationsResponse.FromString,
                )
        self.GetResourcesForOperation = channel.unary_unary(
                '/flexport.authorization.retriever.v1beta1.RetrieverAPI/GetResourcesForOperation',
                request_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetResourcesForOperationRequest.SerializeToString,
                response_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetResourcesForOperationResponse.FromString,
                )
        self.FilterResourcesForOperation = channel.unary_unary(
                '/flexport.authorization.retriever.v1beta1.RetrieverAPI/FilterResourcesForOperation',
                request_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterResourcesForOperationRequest.SerializeToString,
                response_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterResourcesForOperationResponse.FromString,
                )
        self.FilterPermissionsForActor = channel.unary_unary(
                '/flexport.authorization.retriever.v1beta1.RetrieverAPI/FilterPermissionsForActor',
                request_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterPermissionsForActorRequest.SerializeToString,
                response_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterPermissionsForActorResponse.FromString,
                )


class RetrieverAPIServicer(object):
    """Retrieve operations and resources relevant to permissions.
    """

    def GetOperations(self, request, context):
        """Returns all permitted operations not tied to a resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResourcesForOperation(self, request, context):
        """Returns all resources that the actor can perform the given operation on.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FilterResourcesForOperation(self, request, context):
        """Returns all resources in the passed-in list that the actor can perform the given operation on.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FilterPermissionsForActor(self, request, context):
        """Returns all permissions in the passed-in list that the actor has access to.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RetrieverAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOperations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperations,
                    request_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetOperationsRequest.FromString,
                    response_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetOperationsResponse.SerializeToString,
            ),
            'GetResourcesForOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResourcesForOperation,
                    request_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetResourcesForOperationRequest.FromString,
                    response_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetResourcesForOperationResponse.SerializeToString,
            ),
            'FilterResourcesForOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.FilterResourcesForOperation,
                    request_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterResourcesForOperationRequest.FromString,
                    response_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterResourcesForOperationResponse.SerializeToString,
            ),
            'FilterPermissionsForActor': grpc.unary_unary_rpc_method_handler(
                    servicer.FilterPermissionsForActor,
                    request_deserializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterPermissionsForActorRequest.FromString,
                    response_serializer=flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterPermissionsForActorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.authorization.retriever.v1beta1.RetrieverAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RetrieverAPI(object):
    """Retrieve operations and resources relevant to permissions.
    """

    @staticmethod
    def GetOperations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.authorization.retriever.v1beta1.RetrieverAPI/GetOperations',
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetOperationsRequest.SerializeToString,
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetOperationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResourcesForOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.authorization.retriever.v1beta1.RetrieverAPI/GetResourcesForOperation',
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetResourcesForOperationRequest.SerializeToString,
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.GetResourcesForOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FilterResourcesForOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.authorization.retriever.v1beta1.RetrieverAPI/FilterResourcesForOperation',
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterResourcesForOperationRequest.SerializeToString,
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterResourcesForOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FilterPermissionsForActor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.authorization.retriever.v1beta1.RetrieverAPI/FilterPermissionsForActor',
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterPermissionsForActorRequest.SerializeToString,
            flexport_dot_authorization_dot_retriever_dot_v1beta1_dot_retriever__api__pb2.FilterPermissionsForActorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
