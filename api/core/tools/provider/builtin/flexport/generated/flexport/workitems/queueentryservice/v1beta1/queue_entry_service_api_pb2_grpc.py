# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.workitems.queueentryservice.v1beta1 import queue_entry_service_api_pb2 as flexport_dot_workitems_dot_queueentryservice_dot_v1beta1_dot_queue__entry__service__api__pb2


class QueueEntryServiceAPIStub(object):
    """DO NOT USE !!
    This is a temporary service API for missing assignment report,
    and will be removed after migration.

    Service API for queue entry.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetQueueEntries = channel.unary_unary(
                '/flexport.workitems.queueentryservice.v1beta1.QueueEntryServiceAPI/GetQueueEntries',
                request_serializer=flexport_dot_workitems_dot_queueentryservice_dot_v1beta1_dot_queue__entry__service__api__pb2.GetQueueEntriesRequest.SerializeToString,
                response_deserializer=flexport_dot_workitems_dot_queueentryservice_dot_v1beta1_dot_queue__entry__service__api__pb2.GetQueueEntriesResponse.FromString,
                )


class QueueEntryServiceAPIServicer(object):
    """DO NOT USE !!
    This is a temporary service API for missing assignment report,
    and will be removed after migration.

    Service API for queue entry.
    """

    def GetQueueEntries(self, request, context):
        """Fetches queue entries from a work queue.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueueEntryServiceAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetQueueEntries': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQueueEntries,
                    request_deserializer=flexport_dot_workitems_dot_queueentryservice_dot_v1beta1_dot_queue__entry__service__api__pb2.GetQueueEntriesRequest.FromString,
                    response_serializer=flexport_dot_workitems_dot_queueentryservice_dot_v1beta1_dot_queue__entry__service__api__pb2.GetQueueEntriesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.workitems.queueentryservice.v1beta1.QueueEntryServiceAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueueEntryServiceAPI(object):
    """DO NOT USE !!
    This is a temporary service API for missing assignment report,
    and will be removed after migration.

    Service API for queue entry.
    """

    @staticmethod
    def GetQueueEntries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.workitems.queueentryservice.v1beta1.QueueEntryServiceAPI/GetQueueEntries',
            flexport_dot_workitems_dot_queueentryservice_dot_v1beta1_dot_queue__entry__service__api__pb2.GetQueueEntriesRequest.SerializeToString,
            flexport_dot_workitems_dot_queueentryservice_dot_v1beta1_dot_queue__entry__service__api__pb2.GetQueueEntriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
