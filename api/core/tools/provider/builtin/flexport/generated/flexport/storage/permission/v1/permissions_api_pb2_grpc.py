# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.storage.permission.v1 import permissions_api_pb2 as flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2


class PermissionsAPIStub(object):
    """Operations to perform on storage permissions.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPermissions = channel.unary_unary(
                '/flexport.storage.permission.v1.PermissionsAPI/GetPermissions',
                request_serializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.GetPermissionsRequest.SerializeToString,
                response_deserializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.GetPermissionsResponse.FromString,
                )
        self.UpdatePermissions = channel.unary_unary(
                '/flexport.storage.permission.v1.PermissionsAPI/UpdatePermissions',
                request_serializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.UpdatePermissionsRequest.SerializeToString,
                response_deserializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.UpdatePermissionsResponse.FromString,
                )


class PermissionsAPIServicer(object):
    """Operations to perform on storage permissions.
    """

    def GetPermissions(self, request, context):
        """Get permissions associated with a File Object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePermissions(self, request, context):
        """Update permissions associated with a File Object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PermissionsAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPermissions,
                    request_deserializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.GetPermissionsRequest.FromString,
                    response_serializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.GetPermissionsResponse.SerializeToString,
            ),
            'UpdatePermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePermissions,
                    request_deserializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.UpdatePermissionsRequest.FromString,
                    response_serializer=flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.UpdatePermissionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.storage.permission.v1.PermissionsAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PermissionsAPI(object):
    """Operations to perform on storage permissions.
    """

    @staticmethod
    def GetPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.storage.permission.v1.PermissionsAPI/GetPermissions',
            flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.GetPermissionsRequest.SerializeToString,
            flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.GetPermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.storage.permission.v1.PermissionsAPI/UpdatePermissions',
            flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.UpdatePermissionsRequest.SerializeToString,
            flexport_dot_storage_dot_permission_dot_v1_dot_permissions__api__pb2.UpdatePermissionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
