# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.executioncoordinator.admin.v1beta1 import admin_api_pb2 as flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2


class AdminAPIStub(object):
    """Provides data for a read-only admin dashboard for the ExecutionCoordinator service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetApproximateRowCounts = channel.unary_unary(
                '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/GetApproximateRowCounts',
                request_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetApproximateRowCountsRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetApproximateRowCountsResponse.FromString,
                )
        self.GetLatestExecutionPlans = channel.unary_unary(
                '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/GetLatestExecutionPlans',
                request_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionPlansRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionPlansResponse.FromString,
                )
        self.GetLatestExecutionCargos = channel.unary_unary(
                '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/GetLatestExecutionCargos',
                request_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionCargosRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionCargosResponse.FromString,
                )
        self.ThrowErrorForSentryTesting = channel.unary_unary(
                '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/ThrowErrorForSentryTesting',
                request_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.ThrowErrorForSentryTestingRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.ThrowErrorForSentryTestingResponse.FromString,
                )
        self.CaptureErrorForSentryTesting = channel.unary_unary(
                '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/CaptureErrorForSentryTesting',
                request_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.CaptureErrorForSentryTestingRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.CaptureErrorForSentryTestingResponse.FromString,
                )
        self.SignalForPubNubTesting = channel.unary_unary(
                '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/SignalForPubNubTesting',
                request_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.SignalForPubNubTestingRequest.SerializeToString,
                response_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.SignalForPubNubTestingResponse.FromString,
                )


class AdminAPIServicer(object):
    """Provides data for a read-only admin dashboard for the ExecutionCoordinator service.
    """

    def GetApproximateRowCounts(self, request, context):
        """Returns *approximate* (and cheap to compute) row counts for database tables.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestExecutionPlans(self, request, context):
        """Returns the latest revisions for all ExecutionPlans.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestExecutionCargos(self, request, context):
        """Returns the most recent ExecutionCargos.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ThrowErrorForSentryTesting(self, request, context):
        """For testing that a thrown error gets sent to Sentry.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CaptureErrorForSentryTesting(self, request, context):
        """For testing that a manually captured error gets sent to Sentry.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignalForPubNubTesting(self, request, context):
        """For testing a manual signal to PubNub.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetApproximateRowCounts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApproximateRowCounts,
                    request_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetApproximateRowCountsRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetApproximateRowCountsResponse.SerializeToString,
            ),
            'GetLatestExecutionPlans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestExecutionPlans,
                    request_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionPlansRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionPlansResponse.SerializeToString,
            ),
            'GetLatestExecutionCargos': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestExecutionCargos,
                    request_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionCargosRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionCargosResponse.SerializeToString,
            ),
            'ThrowErrorForSentryTesting': grpc.unary_unary_rpc_method_handler(
                    servicer.ThrowErrorForSentryTesting,
                    request_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.ThrowErrorForSentryTestingRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.ThrowErrorForSentryTestingResponse.SerializeToString,
            ),
            'CaptureErrorForSentryTesting': grpc.unary_unary_rpc_method_handler(
                    servicer.CaptureErrorForSentryTesting,
                    request_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.CaptureErrorForSentryTestingRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.CaptureErrorForSentryTestingResponse.SerializeToString,
            ),
            'SignalForPubNubTesting': grpc.unary_unary_rpc_method_handler(
                    servicer.SignalForPubNubTesting,
                    request_deserializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.SignalForPubNubTestingRequest.FromString,
                    response_serializer=flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.SignalForPubNubTestingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.executioncoordinator.admin.v1beta1.AdminAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminAPI(object):
    """Provides data for a read-only admin dashboard for the ExecutionCoordinator service.
    """

    @staticmethod
    def GetApproximateRowCounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/GetApproximateRowCounts',
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetApproximateRowCountsRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetApproximateRowCountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestExecutionPlans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/GetLatestExecutionPlans',
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionPlansRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionPlansResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestExecutionCargos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/GetLatestExecutionCargos',
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionCargosRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.GetLatestExecutionCargosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ThrowErrorForSentryTesting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/ThrowErrorForSentryTesting',
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.ThrowErrorForSentryTestingRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.ThrowErrorForSentryTestingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CaptureErrorForSentryTesting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/CaptureErrorForSentryTesting',
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.CaptureErrorForSentryTestingRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.CaptureErrorForSentryTestingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignalForPubNubTesting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.executioncoordinator.admin.v1beta1.AdminAPI/SignalForPubNubTesting',
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.SignalForPubNubTestingRequest.SerializeToString,
            flexport_dot_executioncoordinator_dot_admin_dot_v1beta1_dot_admin__api__pb2.SignalForPubNubTestingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
