# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.catalog.offering.v2beta1 import (
    offering_api_pb2 as flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2,
)


class OfferingAPIStub:
    """The offering service definition."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ClientQueryOfferings = channel.unary_unary(
            "/flexport.catalog.offering.v2beta1.OfferingAPI/ClientQueryOfferings",
            request_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientQueryOfferingsRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientQueryOfferingsResponse.FromString,
        )
        self.CountClientOfferings = channel.unary_unary(
            "/flexport.catalog.offering.v2beta1.OfferingAPI/CountClientOfferings",
            request_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountClientOfferingsRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountClientOfferingsResponse.FromString,
        )
        self.CountApproximateClientOfferings = channel.unary_unary(
            "/flexport.catalog.offering.v2beta1.OfferingAPI/CountApproximateClientOfferings",
            request_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountApproximateClientOfferingsRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountApproximateClientOfferingsResponse.FromString,
        )
        self.ClientRepriceOffering = channel.unary_unary(
            "/flexport.catalog.offering.v2beta1.OfferingAPI/ClientRepriceOffering",
            request_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientRepriceOfferingRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientRepriceOfferingResponse.FromString,
        )
        self.FindSuccessorOfferings = channel.unary_unary(
            "/flexport.catalog.offering.v2beta1.OfferingAPI/FindSuccessorOfferings",
            request_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.FindSuccessorOfferingsRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.FindSuccessorOfferingsResponse.FromString,
        )


class OfferingAPIServicer:
    """The offering service definition."""

    def ClientQueryOfferings(self, request, context):
        """Search for offerings for a specific client.
        This will only ever include active offerings and offerings which this client can use. The
        charges on the offerings are all tailored to the client (i.e. the sell rate is the sell rate
        for the client).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CountClientOfferings(self, request, context):
        """Count the number of offerings for a specific client."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CountApproximateClientOfferings(self, request, context):
        """Approximate the count of offerings for a specific client (accepts wide searches)."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ClientRepriceOffering(self, request, context):
        """Endpoint for re-pricing an offering by uuid."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindSuccessorOfferings(self, request, context):
        """Endpoint for find successor offerings for re-quoting."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_OfferingAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ClientQueryOfferings": grpc.unary_unary_rpc_method_handler(
            servicer.ClientQueryOfferings,
            request_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientQueryOfferingsRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientQueryOfferingsResponse.SerializeToString,
        ),
        "CountClientOfferings": grpc.unary_unary_rpc_method_handler(
            servicer.CountClientOfferings,
            request_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountClientOfferingsRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountClientOfferingsResponse.SerializeToString,
        ),
        "CountApproximateClientOfferings": grpc.unary_unary_rpc_method_handler(
            servicer.CountApproximateClientOfferings,
            request_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountApproximateClientOfferingsRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountApproximateClientOfferingsResponse.SerializeToString,
        ),
        "ClientRepriceOffering": grpc.unary_unary_rpc_method_handler(
            servicer.ClientRepriceOffering,
            request_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientRepriceOfferingRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientRepriceOfferingResponse.SerializeToString,
        ),
        "FindSuccessorOfferings": grpc.unary_unary_rpc_method_handler(
            servicer.FindSuccessorOfferings,
            request_deserializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.FindSuccessorOfferingsRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.FindSuccessorOfferingsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.catalog.offering.v2beta1.OfferingAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class OfferingAPI:
    """The offering service definition."""

    @staticmethod
    def ClientQueryOfferings(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.offering.v2beta1.OfferingAPI/ClientQueryOfferings",
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientQueryOfferingsRequest.SerializeToString,
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientQueryOfferingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CountClientOfferings(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.offering.v2beta1.OfferingAPI/CountClientOfferings",
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountClientOfferingsRequest.SerializeToString,
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountClientOfferingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CountApproximateClientOfferings(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.offering.v2beta1.OfferingAPI/CountApproximateClientOfferings",
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountApproximateClientOfferingsRequest.SerializeToString,
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.CountApproximateClientOfferingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ClientRepriceOffering(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.offering.v2beta1.OfferingAPI/ClientRepriceOffering",
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientRepriceOfferingRequest.SerializeToString,
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.ClientRepriceOfferingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindSuccessorOfferings(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.offering.v2beta1.OfferingAPI/FindSuccessorOfferings",
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.FindSuccessorOfferingsRequest.SerializeToString,
            flexport_dot_catalog_dot_offering_dot_v2beta1_dot_offering__api__pb2.FindSuccessorOfferingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
