# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/oex/mismatch/v1beta1/carrier_booking_mismatch_api.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n@flexport/oex/mismatch/v1beta1/carrier_booking_mismatch_api.proto\x12\x1d\x66lexport.oex.mismatch.v1beta1\x1a<flexport/oex/mismatch/v1beta1/carrier_booking_mismatch.proto">\n&FetchAllMismatchesByShipmentFidRequest\x12\x14\n\x0cshipment_fid\x18\x01 \x01(\t"i\n\'FetchAllMismatchesByShipmentFidResponse\x12>\n\x07results\x18\x01 \x03(\x0b\x32-.flexport.oex.mismatch.v1beta1.MismatchResult"\x7f\n\x0eMismatchResult\x12U\n\rmismatch_type\x18\x01 \x01(\x0e\x32>.flexport.oex.mismatch.v1beta1.OceanCarrierBookingMismatchType\x12\x16\n\x0ehas_mismatches\x18\x02 \x01(\x08\x32\xce\x01\n\x19\x43\x61rrierBookingMismatchAPI\x12\xb0\x01\n\x1f\x46\x65tchAllMismatchesByShipmentFid\x12\x45.flexport.oex.mismatch.v1beta1.FetchAllMismatchesByShipmentFidRequest\x1a\x46.flexport.oex.mismatch.v1beta1.FetchAllMismatchesByShipmentFidResponseBs\n!com.flexport.oex.mismatch.v1beta1B\x1e\x43\x61rrierBookingMismatchApiProtoP\x01\xea\x02+Flexport::OceanExecution::Mismatch::V1Beta1b\x06proto3'
)


_FETCHALLMISMATCHESBYSHIPMENTFIDREQUEST = DESCRIPTOR.message_types_by_name["FetchAllMismatchesByShipmentFidRequest"]
_FETCHALLMISMATCHESBYSHIPMENTFIDRESPONSE = DESCRIPTOR.message_types_by_name["FetchAllMismatchesByShipmentFidResponse"]
_MISMATCHRESULT = DESCRIPTOR.message_types_by_name["MismatchResult"]
FetchAllMismatchesByShipmentFidRequest = _reflection.GeneratedProtocolMessageType(
    "FetchAllMismatchesByShipmentFidRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _FETCHALLMISMATCHESBYSHIPMENTFIDREQUEST,
        "__module__": "flexport.oex.mismatch.v1beta1.carrier_booking_mismatch_api_pb2",
        # @@protoc_insertion_point(class_scope:flexport.oex.mismatch.v1beta1.FetchAllMismatchesByShipmentFidRequest)
    },
)
_sym_db.RegisterMessage(FetchAllMismatchesByShipmentFidRequest)

FetchAllMismatchesByShipmentFidResponse = _reflection.GeneratedProtocolMessageType(
    "FetchAllMismatchesByShipmentFidResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _FETCHALLMISMATCHESBYSHIPMENTFIDRESPONSE,
        "__module__": "flexport.oex.mismatch.v1beta1.carrier_booking_mismatch_api_pb2",
        # @@protoc_insertion_point(class_scope:flexport.oex.mismatch.v1beta1.FetchAllMismatchesByShipmentFidResponse)
    },
)
_sym_db.RegisterMessage(FetchAllMismatchesByShipmentFidResponse)

MismatchResult = _reflection.GeneratedProtocolMessageType(
    "MismatchResult",
    (_message.Message,),
    {
        "DESCRIPTOR": _MISMATCHRESULT,
        "__module__": "flexport.oex.mismatch.v1beta1.carrier_booking_mismatch_api_pb2",
        # @@protoc_insertion_point(class_scope:flexport.oex.mismatch.v1beta1.MismatchResult)
    },
)
_sym_db.RegisterMessage(MismatchResult)

_CARRIERBOOKINGMISMATCHAPI = DESCRIPTOR.services_by_name["CarrierBookingMismatchAPI"]
if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n!com.flexport.oex.mismatch.v1beta1B\036CarrierBookingMismatchApiProtoP\001\352\002+Flexport::OceanExecution::Mismatch::V1Beta1"
    _FETCHALLMISMATCHESBYSHIPMENTFIDREQUEST._serialized_start = 161
    _FETCHALLMISMATCHESBYSHIPMENTFIDREQUEST._serialized_end = 223
    _FETCHALLMISMATCHESBYSHIPMENTFIDRESPONSE._serialized_start = 225
    _FETCHALLMISMATCHESBYSHIPMENTFIDRESPONSE._serialized_end = 330
    _MISMATCHRESULT._serialized_start = 332
    _MISMATCHRESULT._serialized_end = 459
    _CARRIERBOOKINGMISMATCHAPI._serialized_start = 462
    _CARRIERBOOKINGMISMATCHAPI._serialized_end = 668
# @@protoc_insertion_point(module_scope)
