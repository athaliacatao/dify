# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.catalog.v1beta1 import core_service_api_pb2 as flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2


class CoreServiceAPIStub(object):
    """This service is used internally by the Catalog service to retrieve Core models.
    https://docs.google.com/document/d/1nvpu17HliH1az84I-naUs7Xdjv2SIVzXp48NXEkvBT0/edit?usp=sharing
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClients = channel.unary_unary(
                '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetClients',
                request_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetClientsRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetClientsResponse.FromString,
                )
        self.GetAddresses = channel.unary_unary(
                '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetAddresses',
                request_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetAddressesRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetAddressesResponse.FromString,
                )
        self.GetChargeCodeCategories = channel.unary_unary(
                '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetChargeCodeCategories',
                request_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeCategoriesRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeCategoriesResponse.FromString,
                )
        self.GetChargeCodeModes = channel.unary_unary(
                '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetChargeCodeModes',
                request_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeModesRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeModesResponse.FromString,
                )
        self.GetServiceItemTemplate = channel.unary_unary(
                '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetServiceItemTemplate',
                request_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceItemTemplateRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceItemTemplateResponse.FromString,
                )
        self.GetServiceConfig = channel.unary_unary(
                '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetServiceConfig',
                request_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceConfigRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceConfigResponse.FromString,
                )
        self.GetServiceChargeToTemplateTable = channel.unary_unary(
                '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetServiceChargeToTemplateTable',
                request_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceChargeToTemplateTableRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceChargeToTemplateTableResponse.FromString,
                )


class CoreServiceAPIServicer(object):
    """This service is used internally by the Catalog service to retrieve Core models.
    https://docs.google.com/document/d/1nvpu17HliH1az84I-naUs7Xdjv2SIVzXp48NXEkvBT0/edit?usp=sharing
    """

    def GetClients(self, request, context):
        """Get Clients by fids. (Flexport Resource Identifiers)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAddresses(self, request, context):
        """Get Addresses by fids. (Flexport Resource Identifiers)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChargeCodeCategories(self, request, context):
        """Get a list of allowable Categories for a specific charge code by fid .
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChargeCodeModes(self, request, context):
        """Get a list of allowable Modes for a specific charge code by fid .
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceItemTemplate(self, request, context):
        """Get Service_item_templates by tier, service_type, and service_charge_type_id
        This approach is part of an existing core logic that maintains a mapping
        between service_charges and service_item_templates. This is why we initially needed to retrieve the slug
        by finding the ServiceChargeType by its ID.
        code reference: engines/catalog/app/models/catalog/service_charge_to_template_map.rb
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceConfig(self, request, context):
        """Get currently enabled service config by offering_type (e.g.: cartage, ocean_fcl, origin_booking)
        config page: https://core.flexport.com/marketplace/service_offerings/configure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceChargeToTemplateTable(self, request, context):
        """Get a list of object for service charge to template mappings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoreServiceAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClients': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClients,
                    request_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetClientsRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetClientsResponse.SerializeToString,
            ),
            'GetAddresses': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAddresses,
                    request_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetAddressesRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetAddressesResponse.SerializeToString,
            ),
            'GetChargeCodeCategories': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChargeCodeCategories,
                    request_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeCategoriesRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeCategoriesResponse.SerializeToString,
            ),
            'GetChargeCodeModes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChargeCodeModes,
                    request_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeModesRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeModesResponse.SerializeToString,
            ),
            'GetServiceItemTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceItemTemplate,
                    request_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceItemTemplateRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceItemTemplateResponse.SerializeToString,
            ),
            'GetServiceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceConfig,
                    request_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceConfigRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceConfigResponse.SerializeToString,
            ),
            'GetServiceChargeToTemplateTable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceChargeToTemplateTable,
                    request_deserializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceChargeToTemplateTableRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceChargeToTemplateTableResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.catalog.v1beta1.CoreServiceAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoreServiceAPI(object):
    """This service is used internally by the Catalog service to retrieve Core models.
    https://docs.google.com/document/d/1nvpu17HliH1az84I-naUs7Xdjv2SIVzXp48NXEkvBT0/edit?usp=sharing
    """

    @staticmethod
    def GetClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetClients',
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetClientsRequest.SerializeToString,
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetClientsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAddresses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetAddresses',
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetAddressesRequest.SerializeToString,
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetAddressesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChargeCodeCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetChargeCodeCategories',
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeCategoriesRequest.SerializeToString,
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeCategoriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChargeCodeModes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetChargeCodeModes',
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeModesRequest.SerializeToString,
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetChargeCodeModesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceItemTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetServiceItemTemplate',
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceItemTemplateRequest.SerializeToString,
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceItemTemplateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetServiceConfig',
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceConfigRequest.SerializeToString,
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceChargeToTemplateTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.catalog.v1beta1.CoreServiceAPI/GetServiceChargeToTemplateTable',
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceChargeToTemplateTableRequest.SerializeToString,
            flexport_dot_monolith_dot_catalog_dot_v1beta1_dot_core__service__api__pb2.GetServiceChargeToTemplateTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
