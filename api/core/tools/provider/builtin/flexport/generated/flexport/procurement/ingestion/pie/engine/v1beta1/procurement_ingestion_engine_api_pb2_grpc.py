# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.procurement.ingestion.pie.engine.v1beta1 import procurement_ingestion_engine_api_pb2 as flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2


class PieAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPipelines = channel.unary_unary(
                '/flexport.procurement.ingestion.pie.engine.v1beta1.PieAPI/GetPipelines',
                request_serializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelinesRequest.SerializeToString,
                response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelinesResponse.FromString,
                )
        self.GetPipelineStatus = channel.unary_unary(
                '/flexport.procurement.ingestion.pie.engine.v1beta1.PieAPI/GetPipelineStatus',
                request_serializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelineStatusRequest.SerializeToString,
                response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelineStatusResponse.FromString,
                )
        self.SendToPipeline = channel.unary_unary(
                '/flexport.procurement.ingestion.pie.engine.v1beta1.PieAPI/SendToPipeline',
                request_serializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.SendToPipelineRequest.SerializeToString,
                response_deserializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.SendToPipelineResponse.FromString,
                )


class PieAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPipelines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPipelineStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendToPipeline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PieAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipelines,
                    request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelinesRequest.FromString,
                    response_serializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelinesResponse.SerializeToString,
            ),
            'GetPipelineStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipelineStatus,
                    request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelineStatusRequest.FromString,
                    response_serializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelineStatusResponse.SerializeToString,
            ),
            'SendToPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.SendToPipeline,
                    request_deserializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.SendToPipelineRequest.FromString,
                    response_serializer=flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.SendToPipelineResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.procurement.ingestion.pie.engine.v1beta1.PieAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PieAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.procurement.ingestion.pie.engine.v1beta1.PieAPI/GetPipelines',
            flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelinesRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPipelineStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.procurement.ingestion.pie.engine.v1beta1.PieAPI/GetPipelineStatus',
            flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelineStatusRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.GetPipelineStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendToPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.procurement.ingestion.pie.engine.v1beta1.PieAPI/SendToPipeline',
            flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.SendToPipelineRequest.SerializeToString,
            flexport_dot_procurement_dot_ingestion_dot_pie_dot_engine_dot_v1beta1_dot_procurement__ingestion__engine__api__pb2.SendToPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
