# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/executioncoordinator/autotagger/v1beta1/core_derived_param.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\nIflexport/executioncoordinator/autotagger/v1beta1/core_derived_param.proto\x12\x30\x66lexport.executioncoordinator.autotagger.v1beta1"\x90\x01\n\x10\x43oreDerivedParam\x12\x1c\n\x14\x63onsolidation_cfs_id\x18\x01 \x01(\t\x12\x1e\n\x16\x64\x65\x63onsolidation_cfs_id\x18\x02 \x01(\t\x12\x1c\n\x14place_of_delivery_id\x18\x03 \x01(\t\x12 \n\x18shipment_freight_service\x18\x04 \x01(\tB\x85\x01\n4com.flexport.executioncoordinator.autotagger.v1beta1B\x15\x43oreDerivedParamProtoP\x01\xea\x02\x33\x46lexport::ExecutionCoordinator::AutoTagger::V1Beta1b\x06proto3'
)


_COREDERIVEDPARAM = DESCRIPTOR.message_types_by_name["CoreDerivedParam"]
CoreDerivedParam = _reflection.GeneratedProtocolMessageType(
    "CoreDerivedParam",
    (_message.Message,),
    {
        "DESCRIPTOR": _COREDERIVEDPARAM,
        "__module__": "flexport.executioncoordinator.autotagger.v1beta1.core_derived_param_pb2",
        # @@protoc_insertion_point(class_scope:flexport.executioncoordinator.autotagger.v1beta1.CoreDerivedParam)
    },
)
_sym_db.RegisterMessage(CoreDerivedParam)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n4com.flexport.executioncoordinator.autotagger.v1beta1B\025CoreDerivedParamProtoP\001\352\0023Flexport::ExecutionCoordinator::AutoTagger::V1Beta1"
    _COREDERIVEDPARAM._serialized_start = 128
    _COREDERIVEDPARAM._serialized_end = 272
# @@protoc_insertion_point(module_scope)
