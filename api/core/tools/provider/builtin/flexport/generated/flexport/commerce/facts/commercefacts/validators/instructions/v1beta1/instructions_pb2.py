# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/commerce/facts/commercefacts/validators/instructions/v1beta1/instructions.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\nXflexport/commerce/facts/commercefacts/validators/instructions/v1beta1/instructions.proto\x12\x45\x66lexport.commerce.facts.commercefacts.validators.instructions.v1beta1",\n\x14\x41uthorizeInstruction\x12\x14\n\x0coffering_ids\x18\x01 \x03(\tB\xae\x01\nIcom.flexport.commerce.facts.commercefacts.validators.instructions.v1beta1B\x11InstructionsProtoP\x01\xea\x02KFlexport::Commerce::Facts::CommerceFacts::Validators::Instructions::V1Beta1b\x06proto3'
)


_AUTHORIZEINSTRUCTION = DESCRIPTOR.message_types_by_name["AuthorizeInstruction"]
AuthorizeInstruction = _reflection.GeneratedProtocolMessageType(
    "AuthorizeInstruction",
    (_message.Message,),
    {
        "DESCRIPTOR": _AUTHORIZEINSTRUCTION,
        "__module__": "flexport.commerce.facts.commercefacts.validators.instructions.v1beta1.instructions_pb2",
        # @@protoc_insertion_point(class_scope:flexport.commerce.facts.commercefacts.validators.instructions.v1beta1.AuthorizeInstruction)
    },
)
_sym_db.RegisterMessage(AuthorizeInstruction)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\nIcom.flexport.commerce.facts.commercefacts.validators.instructions.v1beta1B\021InstructionsProtoP\001\352\002KFlexport::Commerce::Facts::CommerceFacts::Validators::Instructions::V1Beta1"
    _AUTHORIZEINSTRUCTION._serialized_start = 163
    _AUTHORIZEINSTRUCTION._serialized_end = 207
# @@protoc_insertion_point(module_scope)
