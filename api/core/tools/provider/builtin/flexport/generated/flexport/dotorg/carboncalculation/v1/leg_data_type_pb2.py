# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/dotorg/carboncalculation/v1/leg_data_type.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import enum_type_wrapper

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b"\n8flexport/dotorg/carboncalculation/v1/leg_data_type.proto\x12$flexport.dotorg.carboncalculation.v1\x1a\x39\x66lexport/os/v1/types/walltimedate/v1/wall_time_date.proto\"\xbf\x07\n\x0bLegDataType\x12\x1e\n\x14unique_identifier_id\x18\x01 \x01(\tH\x00\x12\x11\n\x07leg_fid\x18\x02 \x01(\tH\x00\x12\x66\n\x13transportation_mode\x18\x03 \x01(\x0e\x32I.flexport.dotorg.carboncalculation.v1.CarbonCalculationTransportationMode\x12\x0f\n\x07version\x18\x05 \x01(\t\x12\x0b\n\x03tkm\x18\x06 \x01(\t\x12I\n\rdelivery_date\x18\x07 \x01(\x0b\x32\x32.flexport.os.v1.types.walltimedate.v1.WallTimeDate\x12\x12\n\norigin_fid\x18\x08 \x01(\t\x12\x17\n\x0f\x64\x65stination_fid\x18\t \x01(\t\x12 \n\x18\x61pproximate_distance_gcd\x18\n \x01(\t\x12\x11\n\tleg_order\x18\x0b \x01(\x05\x12\x13\n\x0borigin_city\x18p \x01(\t\x12\x18\n\x10\x64\x65stination_city\x18\r \x01(\t\x12\x12\n\norigin_zip\x18\x0e \x01(\t\x12\x17\n\x0f\x64\x65stination_zip\x18\x0f \x01(\t\x12\x13\n\x0borigin_port\x18\x10 \x01(\t\x12\x18\n\x10\x64\x65stination_port\x18\x11 \x01(\t\x12\x16\n\x0eorigin_country\x18\x12 \x01(\t\x12\x1b\n\x13\x64\x65stination_country\x18\x13 \x01(\t\x12\x16\n\x0e\x64istance_in_km\x18\x14 \x01(\t\x12\x0c\n\x04teus\x18\x15 \x01(\x01\x12\x18\n\x10weight_in_tonnes\x18\x16 \x01(\x01\x12\x0c\n\x04skus\x18\x17 \x03(\t\x12\x10\n\x08supplier\x18\x18 \x01(\t\x12\x0f\n\x07\x63\x61rrier\x18\x19 \x01(\t\x12\x11\n\tis_inland\x18\x1a \x01(\x08\x12\x11\n\tis_reefer\x18\x1b \x01(\x08\x12X\n\x15trucking_service_type\x18\x1c \x01(\x0e\x32\x39.flexport.dotorg.carboncalculation.v1.TruckingServiceType\x12\x11\n\tfuel_type\x18\x1d \x01(\t\x12\x45\n\x0b\x66light_type\x18\x1e \x01(\x0e\x32\x30.flexport.dotorg.carboncalculation.v1.FlightType\x12\x15\n\rtonnes_of_co2\x18\x1f \x01(\t\x12\x0e\n\x06is_lcl\x18  \x01(\x08\x12\x12\n\nrow_number\x18! \x01(\tB\x04\n\x02id*\x9e\x02\n#CarbonCalculationTransportationMode\x12\x32\n.CARBON_CALCULATION_TRANSPORTATION_MODE_INVALID\x10\x00\x12\x30\n,CARBON_CALCULATION_TRANSPORTATION_MODE_OCEAN\x10\x01\x12.\n*CARBON_CALCULATION_TRANSPORTATION_MODE_AIR\x10\x02\x12\x30\n,CARBON_CALCULATION_TRANSPORTATION_MODE_TRUCK\x10\x03\x12/\n+CARBON_CALCULATION_TRANSPORTATION_MODE_RAIL\x10\x04*z\n\nFlightType\x12\x17\n\x13\x46LIGHT_TYPE_INVALID\x10\x00\x12\x19\n\x15\x46LIGHT_TYPE_FREIGHTER\x10\x01\x12\x1f\n\x1b\x46LIGHT_TYPE_BELLY_FREIGHTER\x10\x02\x12\x17\n\x13\x46LIGHT_TYPE_UNKNOWN\x10\x03*\xd6\x02\n\x13TruckingServiceType\x12!\n\x1dTRUCKING_SERVICE_TYPE_INVALID\x10\x00\x12\x1d\n\x19TRUCKING_SERVICE_TYPE_FTL\x10\x01\x12\x1d\n\x19TRUCKING_SERVICE_TYPE_LTL\x10\x02\x12!\n\x1dTRUCKING_SERVICE_TYPE_DRAYAGE\x10\x03\x12!\n\x1dTRUCKING_SERVICE_TYPE_CARTAGE\x10\x04\x12#\n\x1fTRUCKING_SERVICE_TYPE_LAST_MILE\x10\x05\x12*\n&TRUCKING_SERVICE_TYPE_AIRPORT_TRANSFER\x10\x06\x12%\n!TRUCKING_SERVICE_TYPE_AIR_CARTAGE\x10\x07\x12 \n\x1cTRUCKING_SERVICE_TYPE_REEFER\x10\x08\x42h\n(com.flexport.dotorg.carboncalculation.v1B\x10LegDataTypeProtoP\x01\xea\x02'Flexport::DotOrg::CarbonCalculation::V1b\x06proto3"
)

_CARBONCALCULATIONTRANSPORTATIONMODE = DESCRIPTOR.enum_types_by_name["CarbonCalculationTransportationMode"]
CarbonCalculationTransportationMode = enum_type_wrapper.EnumTypeWrapper(_CARBONCALCULATIONTRANSPORTATIONMODE)
_FLIGHTTYPE = DESCRIPTOR.enum_types_by_name["FlightType"]
FlightType = enum_type_wrapper.EnumTypeWrapper(_FLIGHTTYPE)
_TRUCKINGSERVICETYPE = DESCRIPTOR.enum_types_by_name["TruckingServiceType"]
TruckingServiceType = enum_type_wrapper.EnumTypeWrapper(_TRUCKINGSERVICETYPE)
CARBON_CALCULATION_TRANSPORTATION_MODE_INVALID = 0
CARBON_CALCULATION_TRANSPORTATION_MODE_OCEAN = 1
CARBON_CALCULATION_TRANSPORTATION_MODE_AIR = 2
CARBON_CALCULATION_TRANSPORTATION_MODE_TRUCK = 3
CARBON_CALCULATION_TRANSPORTATION_MODE_RAIL = 4
FLIGHT_TYPE_INVALID = 0
FLIGHT_TYPE_FREIGHTER = 1
FLIGHT_TYPE_BELLY_FREIGHTER = 2
FLIGHT_TYPE_UNKNOWN = 3
TRUCKING_SERVICE_TYPE_INVALID = 0
TRUCKING_SERVICE_TYPE_FTL = 1
TRUCKING_SERVICE_TYPE_LTL = 2
TRUCKING_SERVICE_TYPE_DRAYAGE = 3
TRUCKING_SERVICE_TYPE_CARTAGE = 4
TRUCKING_SERVICE_TYPE_LAST_MILE = 5
TRUCKING_SERVICE_TYPE_AIRPORT_TRANSFER = 6
TRUCKING_SERVICE_TYPE_AIR_CARTAGE = 7
TRUCKING_SERVICE_TYPE_REEFER = 8


_LEGDATATYPE = DESCRIPTOR.message_types_by_name["LegDataType"]
LegDataType = _reflection.GeneratedProtocolMessageType(
    "LegDataType",
    (_message.Message,),
    {
        "DESCRIPTOR": _LEGDATATYPE,
        "__module__": "flexport.dotorg.carboncalculation.v1.leg_data_type_pb2",
        # @@protoc_insertion_point(class_scope:flexport.dotorg.carboncalculation.v1.LegDataType)
    },
)
_sym_db.RegisterMessage(LegDataType)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n(com.flexport.dotorg.carboncalculation.v1B\020LegDataTypeProtoP\001\352\002'Flexport::DotOrg::CarbonCalculation::V1"
    _CARBONCALCULATIONTRANSPORTATIONMODE._serialized_start = 1120
    _CARBONCALCULATIONTRANSPORTATIONMODE._serialized_end = 1406
    _FLIGHTTYPE._serialized_start = 1408
    _FLIGHTTYPE._serialized_end = 1530
    _TRUCKINGSERVICETYPE._serialized_start = 1533
    _TRUCKINGSERVICETYPE._serialized_end = 1875
    _LEGDATATYPE._serialized_start = 158
    _LEGDATATYPE._serialized_end = 1117
# @@protoc_insertion_point(module_scope)
