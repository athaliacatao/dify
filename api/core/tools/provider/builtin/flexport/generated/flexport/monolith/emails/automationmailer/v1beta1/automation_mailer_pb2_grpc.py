# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.emails.automationmailer.v1beta1 import automation_mailer_pb2 as flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2


class AutomationMailerAPIStub(object):
    """This API wrapper is used to get default email fields such default CCs.
    Relevant automated emails sent to both a partner and broker, broker only will be included here.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSendPreAlertDefaultCc = channel.unary_unary(
                '/flexport.monolith.emails.automationmailer.v1beta1.AutomationMailerAPI/GetSendPreAlertDefaultCc',
                request_serializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendPreAlertDefaultCcRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendPreAlertDefaultCcResponse.FromString,
                )
        self.GetSendArrivalNoticeDefaultCc = channel.unary_unary(
                '/flexport.monolith.emails.automationmailer.v1beta1.AutomationMailerAPI/GetSendArrivalNoticeDefaultCc',
                request_serializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendArrivalNoticeDefaultCcRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendArrivalNoticeDefaultCcResponse.FromString,
                )


class AutomationMailerAPIServicer(object):
    """This API wrapper is used to get default email fields such default CCs.
    Relevant automated emails sent to both a partner and broker, broker only will be included here.

    """

    def GetSendPreAlertDefaultCc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSendArrivalNoticeDefaultCc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AutomationMailerAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSendPreAlertDefaultCc': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSendPreAlertDefaultCc,
                    request_deserializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendPreAlertDefaultCcRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendPreAlertDefaultCcResponse.SerializeToString,
            ),
            'GetSendArrivalNoticeDefaultCc': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSendArrivalNoticeDefaultCc,
                    request_deserializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendArrivalNoticeDefaultCcRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendArrivalNoticeDefaultCcResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.emails.automationmailer.v1beta1.AutomationMailerAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AutomationMailerAPI(object):
    """This API wrapper is used to get default email fields such default CCs.
    Relevant automated emails sent to both a partner and broker, broker only will be included here.

    """

    @staticmethod
    def GetSendPreAlertDefaultCc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.emails.automationmailer.v1beta1.AutomationMailerAPI/GetSendPreAlertDefaultCc',
            flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendPreAlertDefaultCcRequest.SerializeToString,
            flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendPreAlertDefaultCcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSendArrivalNoticeDefaultCc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.emails.automationmailer.v1beta1.AutomationMailerAPI/GetSendArrivalNoticeDefaultCc',
            flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendArrivalNoticeDefaultCcRequest.SerializeToString,
            flexport_dot_monolith_dot_emails_dot_automationmailer_dot_v1beta1_dot_automation__mailer__pb2.GetSendArrivalNoticeDefaultCcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
