# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.customs.productlibrary.productclassification.v1beta1 import product_classification_api_pb2 as flexport_dot_customs_dot_productlibrary_dot_productclassification_dot_v1beta1_dot_product__classification__api__pb2


class ProductClassificationAPIStub(object):
    """Service to CREATE/UPDATE/DELETE product classifications.
    API to update product classification (hs_code) in PPC and Classification State
    note: This API is a more general API which is not needed as of now
    rpc UpdateProductClassificationAndState(UpdateProductClassificationAndStateRequest) returns (UpdateProductClassificationAndStateResponse);
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateClassificationWithClassificationAdapterResult = channel.unary_unary(
                '/flexport.customs.productlibrary.productclassification.v1beta1.ProductClassificationAPI/UpdateClassificationWithClassificationAdapterResult',
                request_serializer=flexport_dot_customs_dot_productlibrary_dot_productclassification_dot_v1beta1_dot_product__classification__api__pb2.UpdateClassificationWithClassificationAdapterResultRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_productlibrary_dot_productclassification_dot_v1beta1_dot_product__classification__api__pb2.UpdateClassificationWithClassificationAdapterResultResponse.FromString,
                )


class ProductClassificationAPIServicer(object):
    """Service to CREATE/UPDATE/DELETE product classifications.
    API to update product classification (hs_code) in PPC and Classification State
    note: This API is a more general API which is not needed as of now
    rpc UpdateProductClassificationAndState(UpdateProductClassificationAndStateRequest) returns (UpdateProductClassificationAndStateResponse);
    """

    def UpdateClassificationWithClassificationAdapterResult(self, request, context):
        """API to update a product's classification (hs_code) in PPC and Classification State to "ReadyForReview" and
        Actor to "FLEXPORT_INTERNAL" when Classification_Adapter NIS receives a successful classification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductClassificationAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateClassificationWithClassificationAdapterResult': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClassificationWithClassificationAdapterResult,
                    request_deserializer=flexport_dot_customs_dot_productlibrary_dot_productclassification_dot_v1beta1_dot_product__classification__api__pb2.UpdateClassificationWithClassificationAdapterResultRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_productlibrary_dot_productclassification_dot_v1beta1_dot_product__classification__api__pb2.UpdateClassificationWithClassificationAdapterResultResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.customs.productlibrary.productclassification.v1beta1.ProductClassificationAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductClassificationAPI(object):
    """Service to CREATE/UPDATE/DELETE product classifications.
    API to update product classification (hs_code) in PPC and Classification State
    note: This API is a more general API which is not needed as of now
    rpc UpdateProductClassificationAndState(UpdateProductClassificationAndStateRequest) returns (UpdateProductClassificationAndStateResponse);
    """

    @staticmethod
    def UpdateClassificationWithClassificationAdapterResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.productlibrary.productclassification.v1beta1.ProductClassificationAPI/UpdateClassificationWithClassificationAdapterResult',
            flexport_dot_customs_dot_productlibrary_dot_productclassification_dot_v1beta1_dot_product__classification__api__pb2.UpdateClassificationWithClassificationAdapterResultRequest.SerializeToString,
            flexport_dot_customs_dot_productlibrary_dot_productclassification_dot_v1beta1_dot_product__classification__api__pb2.UpdateClassificationWithClassificationAdapterResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
