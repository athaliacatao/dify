# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.quoting.quoteshare.v1beta1 import (
    quote_share_api_pb2 as flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2,
)


class QuoteShareAPIStub:
    """Methods concerning client-facing quote lifecycle."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ShareQuotesForRfq = channel.unary_unary(
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/ShareQuotesForRfq",
            request_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.ShareQuotesForRfqRequest.SerializeToString,
            response_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.ShareQuotesForRfqResponse.FromString,
        )
        self.VoidQuoteByFID = channel.unary_unary(
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/VoidQuoteByFID",
            request_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByFIDRequest.SerializeToString,
            response_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByFIDResponse.FromString,
        )
        self.FetchQuoteByFID = channel.unary_unary(
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/FetchQuoteByFID",
            request_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByFIDRequest.SerializeToString,
            response_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByFIDResponse.FromString,
        )
        self.AcceptQuoteByFID = channel.unary_unary(
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/AcceptQuoteByFID",
            request_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByFIDRequest.SerializeToString,
            response_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByFIDResponse.FromString,
        )
        self.VoidQuoteByDBID = channel.unary_unary(
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/VoidQuoteByDBID",
            request_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByDBIDRequest.SerializeToString,
            response_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByDBIDResponse.FromString,
        )
        self.FetchQuoteByDBID = channel.unary_unary(
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/FetchQuoteByDBID",
            request_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByDBIDRequest.SerializeToString,
            response_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByDBIDResponse.FromString,
        )
        self.AcceptQuoteByDBID = channel.unary_unary(
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/AcceptQuoteByDBID",
            request_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByDBIDRequest.SerializeToString,
            response_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByDBIDResponse.FromString,
        )


class QuoteShareAPIServicer:
    """Methods concerning client-facing quote lifecycle."""

    def ShareQuotesForRfq(self, request, context):
        """Share a `Quote` for external use."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def VoidQuoteByFID(self, request, context):
        """Void a `Quote` by FID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FetchQuoteByFID(self, request, context):
        """Fetch a `Quote` by FID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AcceptQuoteByFID(self, request, context):
        """Accept a `Quote` by FID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def VoidQuoteByDBID(self, request, context):
        """Void a `Quote` by DBID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FetchQuoteByDBID(self, request, context):
        """Fetch a `Quote` by DBID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AcceptQuoteByDBID(self, request, context):
        """Accept a `Quote` by DBID."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_QuoteShareAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ShareQuotesForRfq": grpc.unary_unary_rpc_method_handler(
            servicer.ShareQuotesForRfq,
            request_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.ShareQuotesForRfqRequest.FromString,
            response_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.ShareQuotesForRfqResponse.SerializeToString,
        ),
        "VoidQuoteByFID": grpc.unary_unary_rpc_method_handler(
            servicer.VoidQuoteByFID,
            request_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByFIDRequest.FromString,
            response_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByFIDResponse.SerializeToString,
        ),
        "FetchQuoteByFID": grpc.unary_unary_rpc_method_handler(
            servicer.FetchQuoteByFID,
            request_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByFIDRequest.FromString,
            response_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByFIDResponse.SerializeToString,
        ),
        "AcceptQuoteByFID": grpc.unary_unary_rpc_method_handler(
            servicer.AcceptQuoteByFID,
            request_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByFIDRequest.FromString,
            response_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByFIDResponse.SerializeToString,
        ),
        "VoidQuoteByDBID": grpc.unary_unary_rpc_method_handler(
            servicer.VoidQuoteByDBID,
            request_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByDBIDRequest.FromString,
            response_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByDBIDResponse.SerializeToString,
        ),
        "FetchQuoteByDBID": grpc.unary_unary_rpc_method_handler(
            servicer.FetchQuoteByDBID,
            request_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByDBIDRequest.FromString,
            response_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByDBIDResponse.SerializeToString,
        ),
        "AcceptQuoteByDBID": grpc.unary_unary_rpc_method_handler(
            servicer.AcceptQuoteByDBID,
            request_deserializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByDBIDRequest.FromString,
            response_serializer=flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByDBIDResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.quoting.quoteshare.v1beta1.QuoteShareAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class QuoteShareAPI:
    """Methods concerning client-facing quote lifecycle."""

    @staticmethod
    def ShareQuotesForRfq(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/ShareQuotesForRfq",
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.ShareQuotesForRfqRequest.SerializeToString,
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.ShareQuotesForRfqResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def VoidQuoteByFID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/VoidQuoteByFID",
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByFIDRequest.SerializeToString,
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByFIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FetchQuoteByFID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/FetchQuoteByFID",
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByFIDRequest.SerializeToString,
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByFIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AcceptQuoteByFID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/AcceptQuoteByFID",
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByFIDRequest.SerializeToString,
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByFIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def VoidQuoteByDBID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/VoidQuoteByDBID",
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByDBIDRequest.SerializeToString,
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.VoidQuoteByDBIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FetchQuoteByDBID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/FetchQuoteByDBID",
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByDBIDRequest.SerializeToString,
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.FetchQuoteByDBIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AcceptQuoteByDBID(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.quoting.quoteshare.v1beta1.QuoteShareAPI/AcceptQuoteByDBID",
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByDBIDRequest.SerializeToString,
            flexport_dot_quoting_dot_quoteshare_dot_v1beta1_dot_quote__share__api__pb2.AcceptQuoteByDBIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
