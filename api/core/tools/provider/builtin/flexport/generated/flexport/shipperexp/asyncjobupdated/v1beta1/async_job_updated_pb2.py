# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/shipperexp/asyncjobupdated/v1beta1/async_job_updated.proto
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\nCflexport/shipperexp/asyncjobupdated/v1beta1/async_job_updated.proto\x12+flexport.shipperexp.asyncjobupdated.v1beta1\x1a\x41\x66lexport/shipperexp/asyncjobvalues/v1beta1/async_job_values.proto\x1a\x1fgoogle/protobuf/timestamp.proto"\x92\x01\n\x0f\x41syncJobUpdated\x12\x33\n\x0fupdated_at_time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12J\n\x06values\x18\x02 \x01(\x0b\x32:.flexport.shipperexp.asyncjobvalues.v1beta1.AsyncJobValuesBz\n/com.flexport.shipperexp.asyncjobupdated.v1beta1B\x14\x41syncJobUpdatedProtoP\x01\xea\x02.Flexport::ShipperExp::AsyncJobUpdated::V1Beta1b\x06proto3'
)


_ASYNCJOBUPDATED = DESCRIPTOR.message_types_by_name["AsyncJobUpdated"]
AsyncJobUpdated = _reflection.GeneratedProtocolMessageType(
    "AsyncJobUpdated",
    (_message.Message,),
    {
        "DESCRIPTOR": _ASYNCJOBUPDATED,
        "__module__": "flexport.shipperexp.asyncjobupdated.v1beta1.async_job_updated_pb2",
        # @@protoc_insertion_point(class_scope:flexport.shipperexp.asyncjobupdated.v1beta1.AsyncJobUpdated)
    },
)
_sym_db.RegisterMessage(AsyncJobUpdated)

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"\n/com.flexport.shipperexp.asyncjobupdated.v1beta1B\024AsyncJobUpdatedProtoP\001\352\002.Flexport::ShipperExp::AsyncJobUpdated::V1Beta1"
    _ASYNCJOBUPDATED._serialized_start = 217
    _ASYNCJOBUPDATED._serialized_end = 363
# @@protoc_insertion_point(module_scope)
