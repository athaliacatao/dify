# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/executioncoordinator/executiontask/v1/params/carbon_services_task_params.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nWflexport/executioncoordinator/executiontask/v1/params/carbon_services_task_params.proto\x12.flexport.executioncoordinator.executiontask.v1\x1a\x1egoogle/protobuf/wrappers.proto\"\xae\x01\n\x18\x43\x61rbonServicesTaskParams\x12O\n\x0boffset_type\x18\x03 \x01(\x0e\x32:.flexport.executioncoordinator.executiontask.v1.OffsetType\x12\x41\n\x04legs\x18\x04 \x03(\x0b\x32\x33.flexport.executioncoordinator.executiontask.v1.Leg\"{\n\x03Leg\x12\x1b\n\x13route_shape_leg_fid\x18\x14 \x01(\t\x12W\n\x0fservice_details\x18\x16 \x03(\x0b\x32>.flexport.executioncoordinator.executiontask.v1.ServiceDetails\"{\n\x0eServiceDetails\x12^\n\x0eoffset_details\x18\x1e \x01(\x0b\x32\x44.flexport.executioncoordinator.executiontask.v1.OffsetServiceDetailsH\x00\x42\t\n\x07\x64\x65tails\"\xe1\x01\n\x14OffsetServiceDetails\x12*\n\x04rate\x18! \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12L\n\x06vendor\x18\" \x01(\x0e\x32<.flexport.executioncoordinator.executiontask.v1.OffsetVendor\x12O\n\x0boffset_type\x18# \x01(\x0e\x32:.flexport.executioncoordinator.executiontask.v1.OffsetType*\x80\x01\n\x0cOffsetStatus\x12\x19\n\x15OFFSET_STATUS_INVALID\x10\x00\x12\x1c\n\x18OFFSET_STATUS_NOT_OFFSET\x10\x01\x12\x1b\n\x17OFFSET_STATUS_REQUESTED\x10\x02\x12\x1a\n\x16OFFSET_STATUS_COMPLETE\x10\x03*b\n\x0cOffsetVendor\x12\x19\n\x15OFFSET_VENDOR_INVALID\x10\x00\x12\x1c\n\x18OFFSET_VENDOR_CARBONFUND\x10\x01\x12\x19\n\x15OFFSET_VENDOR_PACHAMA\x10\x02*\xd3\x02\n\nOffsetType\x12\x17\n\x13OFFSET_TYPE_INVALID\x10\x00\x12 \n\x1cOFFSET_TYPE_FLEXPORT_FREIGHT\x10\x01\x12\x1a\n\x16OFFSET_TYPE_VISIBILITY\x10\x02\x12\x15\n\x11OFFSET_TYPE_BATCH\x10\x03\x12\x1b\n\x17OFFSET_TYPE_TIMED_BATCH\x10\x04\x12 \n\x1cOFFSET_TYPE_HISTORICAL_BATCH\x10\x05\x12\x1c\n\x18OFFSET_TYPE_FLEXPORT_LCL\x10\x06\x12\x1a\n\x16OFFSET_TYPE_OCEANMATCH\x10\x07\x12\x1f\n\x1bOFFSET_TYPE_DISASTER_RELIEF\x10\x08\x12\x1d\n\x19OFFSET_TYPE_OCEAN_PREMIUM\x10\t\x12\x1e\n\x1aOFFSET_TYPE_MULTIPLE_BATCH\x10\nB\x89\x01\n2com.flexport.executioncoordinator.executiontask.v1B\x1d\x43\x61rbonServicesTaskParamsProtoP\x01\xea\x02\x31\x46lexport::ExecutionCoordinator::ExecutionTask::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'flexport.executioncoordinator.executiontask.v1.params.carbon_services_task_params_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n2com.flexport.executioncoordinator.executiontask.v1B\035CarbonServicesTaskParamsProtoP\001\352\0021Flexport::ExecutionCoordinator::ExecutionTask::V1'
  _globals['_OFFSETSTATUS']._serialized_start=827
  _globals['_OFFSETSTATUS']._serialized_end=955
  _globals['_OFFSETVENDOR']._serialized_start=957
  _globals['_OFFSETVENDOR']._serialized_end=1055
  _globals['_OFFSETTYPE']._serialized_start=1058
  _globals['_OFFSETTYPE']._serialized_end=1397
  _globals['_CARBONSERVICESTASKPARAMS']._serialized_start=172
  _globals['_CARBONSERVICESTASKPARAMS']._serialized_end=346
  _globals['_LEG']._serialized_start=348
  _globals['_LEG']._serialized_end=471
  _globals['_SERVICEDETAILS']._serialized_start=473
  _globals['_SERVICEDETAILS']._serialized_end=596
  _globals['_OFFSETSERVICEDETAILS']._serialized_start=599
  _globals['_OFFSETSERVICEDETAILS']._serialized_end=824
# @@protoc_insertion_point(module_scope)
