# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.messaging.v1beta1 import messaging_api_pb2 as flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2


class MessagingAPIStub(object):
    """This is the API for services to interact with Messaging.
    Production readiness: https://docs.google.com/document/d/1czU07Han9W-h3ZUlmnBalPf-8Mw3MzFNXxGLsISicxk
    PLEASE read API developer guide: https://flexport.atlassian.net/wiki/spaces/EN/pages/2252407401/Messaging+API+Developer+Guide
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMessage = channel.unary_unary(
                '/flexport.monolith.messaging.v1beta1.MessagingAPI/CreateMessage',
                request_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.CreateMessageRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.CreateMessageResponse.FromString,
                )
        self.UpdateMessage = channel.unary_unary(
                '/flexport.monolith.messaging.v1beta1.MessagingAPI/UpdateMessage',
                request_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.UpdateMessageRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.UpdateMessageResponse.FromString,
                )
        self.DeleteMessage = channel.unary_unary(
                '/flexport.monolith.messaging.v1beta1.MessagingAPI/DeleteMessage',
                request_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.DeleteMessageRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.DeleteMessageResponse.FromString,
                )
        self.GetMessage = channel.unary_unary(
                '/flexport.monolith.messaging.v1beta1.MessagingAPI/GetMessage',
                request_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.GetMessageRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.GetMessageResponse.FromString,
                )
        self.ListMessages = channel.unary_unary(
                '/flexport.monolith.messaging.v1beta1.MessagingAPI/ListMessages',
                request_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.ListMessagesRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.ListMessagesResponse.FromString,
                )


class MessagingAPIServicer(object):
    """This is the API for services to interact with Messaging.
    Production readiness: https://docs.google.com/document/d/1czU07Han9W-h3ZUlmnBalPf-8Mw3MzFNXxGLsISicxk
    PLEASE read API developer guide: https://flexport.atlassian.net/wiki/spaces/EN/pages/2252407401/Messaging+API+Developer+Guide
    """

    def CreateMessage(self, request, context):
        """Create a message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMessage(self, request, context):
        """Update a message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessage(self, request, context):
        """Delete a message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessage(self, request, context):
        """Get a message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMessages(self, request, context):
        """List messages.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessagingAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessage,
                    request_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.CreateMessageRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.CreateMessageResponse.SerializeToString,
            ),
            'UpdateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMessage,
                    request_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.UpdateMessageRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.UpdateMessageResponse.SerializeToString,
            ),
            'DeleteMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessage,
                    request_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.DeleteMessageRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.DeleteMessageResponse.SerializeToString,
            ),
            'GetMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessage,
                    request_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.GetMessageRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.GetMessageResponse.SerializeToString,
            ),
            'ListMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMessages,
                    request_deserializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.ListMessagesRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.ListMessagesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.messaging.v1beta1.MessagingAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessagingAPI(object):
    """This is the API for services to interact with Messaging.
    Production readiness: https://docs.google.com/document/d/1czU07Han9W-h3ZUlmnBalPf-8Mw3MzFNXxGLsISicxk
    PLEASE read API developer guide: https://flexport.atlassian.net/wiki/spaces/EN/pages/2252407401/Messaging+API+Developer+Guide
    """

    @staticmethod
    def CreateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.messaging.v1beta1.MessagingAPI/CreateMessage',
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.CreateMessageRequest.SerializeToString,
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.CreateMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.messaging.v1beta1.MessagingAPI/UpdateMessage',
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.UpdateMessageRequest.SerializeToString,
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.UpdateMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.messaging.v1beta1.MessagingAPI/DeleteMessage',
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.DeleteMessageRequest.SerializeToString,
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.DeleteMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.messaging.v1beta1.MessagingAPI/GetMessage',
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.GetMessageRequest.SerializeToString,
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.GetMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.messaging.v1beta1.MessagingAPI/ListMessages',
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.ListMessagesRequest.SerializeToString,
            flexport_dot_monolith_dot_messaging_dot_v1beta1_dot_messaging__api__pb2.ListMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
