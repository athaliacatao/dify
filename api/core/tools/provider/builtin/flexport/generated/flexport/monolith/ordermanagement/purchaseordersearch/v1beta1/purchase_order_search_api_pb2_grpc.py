# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.ordermanagement.purchaseordersearch.v1beta1 import purchase_order_search_api_pb2 as flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2


class PurchaseOrderSearchAPIStub(object):
    """An API to search for purchase orders based on their identifiers.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPurchaseOrdersByName = channel.unary_unary(
                '/flexport.monolith.ordermanagement.purchaseordersearch.v1beta1.PurchaseOrderSearchAPI/ListPurchaseOrdersByName',
                request_serializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByNameRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByNameResponse.FromString,
                )
        self.ListPurchaseOrdersByShipment = channel.unary_unary(
                '/flexport.monolith.ordermanagement.purchaseordersearch.v1beta1.PurchaseOrderSearchAPI/ListPurchaseOrdersByShipment',
                request_serializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByShipmentRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByShipmentResponse.FromString,
                )


class PurchaseOrderSearchAPIServicer(object):
    """An API to search for purchase orders based on their identifiers.
    """

    def ListPurchaseOrdersByName(self, request, context):
        """Retrieves purchase order by their name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPurchaseOrdersByShipment(self, request, context):
        """Retrieves purchase orders by their shipment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PurchaseOrderSearchAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPurchaseOrdersByName': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPurchaseOrdersByName,
                    request_deserializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByNameRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByNameResponse.SerializeToString,
            ),
            'ListPurchaseOrdersByShipment': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPurchaseOrdersByShipment,
                    request_deserializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByShipmentRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByShipmentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.ordermanagement.purchaseordersearch.v1beta1.PurchaseOrderSearchAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PurchaseOrderSearchAPI(object):
    """An API to search for purchase orders based on their identifiers.
    """

    @staticmethod
    def ListPurchaseOrdersByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.ordermanagement.purchaseordersearch.v1beta1.PurchaseOrderSearchAPI/ListPurchaseOrdersByName',
            flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByNameRequest.SerializeToString,
            flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPurchaseOrdersByShipment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.ordermanagement.purchaseordersearch.v1beta1.PurchaseOrderSearchAPI/ListPurchaseOrdersByShipment',
            flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByShipmentRequest.SerializeToString,
            flexport_dot_monolith_dot_ordermanagement_dot_purchaseordersearch_dot_v1beta1_dot_purchase__order__search__api__pb2.ListPurchaseOrdersByShipmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
