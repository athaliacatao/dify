# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.customs.productlibrary.regulations.v1beta1 import special_tariffs_api_pb2 as flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2


class SpecialTariffsAPIStub(object):
    """Service that provides Special Tariffs for given HS code/s.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSpecialTariffsForHsCode = channel.unary_unary(
                '/flexport.customs.productlibrary.regulations.v1beta1.SpecialTariffsAPI/GetSpecialTariffsForHsCode',
                request_serializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.GetSpecialTariffsForHsCodeRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.GetSpecialTariffsForHsCodeResponse.FromString,
                )
        self.BatchListSpecialTariffsForHsCodes = channel.unary_unary(
                '/flexport.customs.productlibrary.regulations.v1beta1.SpecialTariffsAPI/BatchListSpecialTariffsForHsCodes',
                request_serializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.BatchListSpecialTariffsForHsCodesRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.BatchListSpecialTariffsForHsCodesResponse.FromString,
                )
        self.UpdateSpecialTariffCodeCache = channel.unary_unary(
                '/flexport.customs.productlibrary.regulations.v1beta1.SpecialTariffsAPI/UpdateSpecialTariffCodeCache',
                request_serializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.UpdateSpecialTariffCodeCacheRequest.SerializeToString,
                response_deserializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.UpdateSpecialTariffCodeCacheResponse.FromString,
                )


class SpecialTariffsAPIServicer(object):
    """Service that provides Special Tariffs for given HS code/s.
    """

    def GetSpecialTariffsForHsCode(self, request, context):
        """API to return Special Tariff details given a hs_code
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchListSpecialTariffsForHsCodes(self, request, context):
        """
        API to return SpecialTariff details for all given hs_codes.
        The details will contain information about code, section_type, is exclusion code, effective date and deactivated dates
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSpecialTariffCodeCache(self, request, context):
        """API to update special tariff codes in Core
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpecialTariffsAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSpecialTariffsForHsCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpecialTariffsForHsCode,
                    request_deserializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.GetSpecialTariffsForHsCodeRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.GetSpecialTariffsForHsCodeResponse.SerializeToString,
            ),
            'BatchListSpecialTariffsForHsCodes': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchListSpecialTariffsForHsCodes,
                    request_deserializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.BatchListSpecialTariffsForHsCodesRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.BatchListSpecialTariffsForHsCodesResponse.SerializeToString,
            ),
            'UpdateSpecialTariffCodeCache': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSpecialTariffCodeCache,
                    request_deserializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.UpdateSpecialTariffCodeCacheRequest.FromString,
                    response_serializer=flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.UpdateSpecialTariffCodeCacheResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.customs.productlibrary.regulations.v1beta1.SpecialTariffsAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SpecialTariffsAPI(object):
    """Service that provides Special Tariffs for given HS code/s.
    """

    @staticmethod
    def GetSpecialTariffsForHsCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.productlibrary.regulations.v1beta1.SpecialTariffsAPI/GetSpecialTariffsForHsCode',
            flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.GetSpecialTariffsForHsCodeRequest.SerializeToString,
            flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.GetSpecialTariffsForHsCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchListSpecialTariffsForHsCodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.productlibrary.regulations.v1beta1.SpecialTariffsAPI/BatchListSpecialTariffsForHsCodes',
            flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.BatchListSpecialTariffsForHsCodesRequest.SerializeToString,
            flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.BatchListSpecialTariffsForHsCodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSpecialTariffCodeCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.customs.productlibrary.regulations.v1beta1.SpecialTariffsAPI/UpdateSpecialTariffCodeCache',
            flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.UpdateSpecialTariffCodeCacheRequest.SerializeToString,
            flexport_dot_customs_dot_productlibrary_dot_regulations_dot_v1beta1_dot_special__tariffs__api__pb2.UpdateSpecialTariffCodeCacheResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
