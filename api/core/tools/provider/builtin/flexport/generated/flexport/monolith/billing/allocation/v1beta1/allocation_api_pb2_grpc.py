# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.monolith.billing.allocation.v1beta1 import (
    allocation_api_pb2 as flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2,
)


class AllocationAPIStub:
    """An API to retrieve Bill allocations."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetShipmentAllocation = channel.unary_unary(
            "/flexport.monolith.billing.allocation.v1beta1.AllocationAPI/GetShipmentAllocation",
            request_serializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.GetShipmentAllocationRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.GetShipmentAllocationResponse.FromString,
        )
        self.ExpandConsolShipments = channel.unary_unary(
            "/flexport.monolith.billing.allocation.v1beta1.AllocationAPI/ExpandConsolShipments",
            request_serializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.ExpandConsolShipmentsRequest.SerializeToString,
            response_deserializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.ExpandConsolShipmentsResponse.FromString,
        )


class AllocationAPIServicer:
    """An API to retrieve Bill allocations."""

    def GetShipmentAllocation(self, request, context):
        """Retrieves shipment FIDs by allocation references."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ExpandConsolShipments(self, request, context):
        """Expands consol shipments to child shipments."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_AllocationAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetShipmentAllocation": grpc.unary_unary_rpc_method_handler(
            servicer.GetShipmentAllocation,
            request_deserializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.GetShipmentAllocationRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.GetShipmentAllocationResponse.SerializeToString,
        ),
        "ExpandConsolShipments": grpc.unary_unary_rpc_method_handler(
            servicer.ExpandConsolShipments,
            request_deserializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.ExpandConsolShipmentsRequest.FromString,
            response_serializer=flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.ExpandConsolShipmentsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.monolith.billing.allocation.v1beta1.AllocationAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class AllocationAPI:
    """An API to retrieve Bill allocations."""

    @staticmethod
    def GetShipmentAllocation(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.billing.allocation.v1beta1.AllocationAPI/GetShipmentAllocation",
            flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.GetShipmentAllocationRequest.SerializeToString,
            flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.GetShipmentAllocationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ExpandConsolShipments(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.monolith.billing.allocation.v1beta1.AllocationAPI/ExpandConsolShipments",
            flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.ExpandConsolShipmentsRequest.SerializeToString,
            flexport_dot_monolith_dot_billing_dot_allocation_dot_v1beta1_dot_allocation__api__pb2.ExpandConsolShipmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
