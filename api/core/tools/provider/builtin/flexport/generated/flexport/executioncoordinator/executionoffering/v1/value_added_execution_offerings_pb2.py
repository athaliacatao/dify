# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flexport/executioncoordinator/executionoffering/v1/value_added_execution_offerings.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from flexport.executioncoordinator.executionoffering.v1.valueadded import carbon_offset_execution_offering_pb2 as flexport_dot_executioncoordinator_dot_executionoffering_dot_v1_dot_valueadded_dot_carbon__offset__execution__offering__pb2
from flexport.executioncoordinator.executionoffering.v1.valueadded import export_customs_execution_offering_pb2 as flexport_dot_executioncoordinator_dot_executionoffering_dot_v1_dot_valueadded_dot_export__customs__execution__offering__pb2
from flexport.executioncoordinator.executionoffering.v1.valueadded import import_customs_execution_offering_pb2 as flexport_dot_executioncoordinator_dot_executionoffering_dot_v1_dot_valueadded_dot_import__customs__execution__offering__pb2
from flexport.executioncoordinator.executionoffering.v1.valueadded import insurance_execution_offering_pb2 as flexport_dot_executioncoordinator_dot_executionoffering_dot_v1_dot_valueadded_dot_insurance__execution__offering__pb2
from flexport.executioncoordinator.executionoffering.v1.valueadded import foreign_trade_zone_execution_offering_pb2 as flexport_dot_executioncoordinator_dot_executionoffering_dot_v1_dot_valueadded_dot_foreign__trade__zone__execution__offering__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nXflexport/executioncoordinator/executionoffering/v1/value_added_execution_offerings.proto\x12\x32\x66lexport.executioncoordinator.executionoffering.v1\x1a\x64\x66lexport/executioncoordinator/executionoffering/v1/valueadded/carbon_offset_execution_offering.proto\x1a\x65\x66lexport/executioncoordinator/executionoffering/v1/valueadded/export_customs_execution_offering.proto\x1a\x65\x66lexport/executioncoordinator/executionoffering/v1/valueadded/import_customs_execution_offering.proto\x1a`flexport/executioncoordinator/executionoffering/v1/valueadded/insurance_execution_offering.proto\x1aiflexport/executioncoordinator/executionoffering/v1/valueadded/foreign_trade_zone_execution_offering.proto\"\xb6\x04\n\x1cValueAddedExecutionOfferings\x12j\n\x0eimport_customs\x18\x01 \x01(\x0b\x32R.flexport.executioncoordinator.executionoffering.v1.ImportCustomsExecutionOffering\x12j\n\x0e\x65xport_customs\x18\x02 \x01(\x0b\x32R.flexport.executioncoordinator.executionoffering.v1.ExportCustomsExecutionOffering\x12\x61\n\tinsurance\x18\x03 \x01(\x0b\x32N.flexport.executioncoordinator.executionoffering.v1.InsuranceExecutionOffering\x12h\n\rcarbon_offset\x18\x04 \x01(\x0b\x32Q.flexport.executioncoordinator.executionoffering.v1.CarbonOffsetExecutionOffering\x12q\n\x12\x66oreign_trade_zone\x18\x05 \x01(\x0b\x32U.flexport.executioncoordinator.executionoffering.v1.ForeignTradeZoneExecutionOfferingB\x95\x01\n6com.flexport.executioncoordinator.executionoffering.v1B!ValueAddedExecutionOfferingsProtoP\x01\xea\x02\x35\x46lexport::ExecutionCoordinator::ExecutionOffering::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'flexport.executioncoordinator.executionoffering.v1.value_added_execution_offerings_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n6com.flexport.executioncoordinator.executionoffering.v1B!ValueAddedExecutionOfferingsProtoP\001\352\0025Flexport::ExecutionCoordinator::ExecutionOffering::V1'
  _globals['_VALUEADDEDEXECUTIONOFFERINGS']._serialized_start=658
  _globals['_VALUEADDEDEXECUTIONOFFERINGS']._serialized_end=1224
# @@protoc_insertion_point(module_scope)
