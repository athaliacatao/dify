# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.catalog.charge.v2beta1 import (
    charge_api_pb2 as flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2,
)


class ChargeAPIStub:
    """The charge service definition."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EvaluateCharges = channel.unary_unary(
            "/flexport.catalog.charge.v2beta1.ChargeAPI/EvaluateCharges",
            request_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.EvaluateChargesRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.EvaluateChargesResponse.FromString,
        )
        self.QueryChargeDefinitions = channel.unary_unary(
            "/flexport.catalog.charge.v2beta1.ChargeAPI/QueryChargeDefinitions",
            request_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.QueryChargeDefinitionsRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.QueryChargeDefinitionsResponse.FromString,
        )
        self.GetChargeDefinition = channel.unary_unary(
            "/flexport.catalog.charge.v2beta1.ChargeAPI/GetChargeDefinition",
            request_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.GetChargeDefinitionRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.GetChargeDefinitionResponse.FromString,
        )
        self.CreateChargeDefinition = channel.unary_unary(
            "/flexport.catalog.charge.v2beta1.ChargeAPI/CreateChargeDefinition",
            request_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.CreateChargeDefinitionRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.CreateChargeDefinitionResponse.FromString,
        )
        self.DeleteChargeDefinition = channel.unary_unary(
            "/flexport.catalog.charge.v2beta1.ChargeAPI/DeleteChargeDefinition",
            request_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.DeleteChargeDefinitionRequest.SerializeToString,
            response_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.DeleteChargeDefinitionResponse.FromString,
        )


class ChargeAPIServicer:
    """The charge service definition."""

    def EvaluateCharges(self, request, context):
        """Evaluates charges.
        Evaluates the cost and sell rates into amounts as well as any subject-to conditions which may
        be present. The rates of some charges depend on the costs of other charges so the entire set
        of charges should be evaluated together. Dormant dependency charges are not typically included
        in these dependant charges. It's possible that one of these dependency charges has subject-to
        conditions. So if evaluating that charge would activate it, we'd want to update the amount of
        any dependant charges. This is a long way of saying rates and subject-to-ness of charges can
        affect each other and that's why they should be evaluated together.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def QueryChargeDefinitions(self, request, context):
        """Returns a list of charge types and related metadata."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetChargeDefinition(self, request, context):
        """Return charge type details."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateChargeDefinition(self, request, context):
        """Creates a charge definition or provides errors if unable to."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteChargeDefinition(self, request, context):
        """Deletes a charge definition or provides errors if unable to."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ChargeAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "EvaluateCharges": grpc.unary_unary_rpc_method_handler(
            servicer.EvaluateCharges,
            request_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.EvaluateChargesRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.EvaluateChargesResponse.SerializeToString,
        ),
        "QueryChargeDefinitions": grpc.unary_unary_rpc_method_handler(
            servicer.QueryChargeDefinitions,
            request_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.QueryChargeDefinitionsRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.QueryChargeDefinitionsResponse.SerializeToString,
        ),
        "GetChargeDefinition": grpc.unary_unary_rpc_method_handler(
            servicer.GetChargeDefinition,
            request_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.GetChargeDefinitionRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.GetChargeDefinitionResponse.SerializeToString,
        ),
        "CreateChargeDefinition": grpc.unary_unary_rpc_method_handler(
            servicer.CreateChargeDefinition,
            request_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.CreateChargeDefinitionRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.CreateChargeDefinitionResponse.SerializeToString,
        ),
        "DeleteChargeDefinition": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteChargeDefinition,
            request_deserializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.DeleteChargeDefinitionRequest.FromString,
            response_serializer=flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.DeleteChargeDefinitionResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.catalog.charge.v2beta1.ChargeAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ChargeAPI:
    """The charge service definition."""

    @staticmethod
    def EvaluateCharges(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.charge.v2beta1.ChargeAPI/EvaluateCharges",
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.EvaluateChargesRequest.SerializeToString,
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.EvaluateChargesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def QueryChargeDefinitions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.charge.v2beta1.ChargeAPI/QueryChargeDefinitions",
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.QueryChargeDefinitionsRequest.SerializeToString,
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.QueryChargeDefinitionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetChargeDefinition(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.charge.v2beta1.ChargeAPI/GetChargeDefinition",
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.GetChargeDefinitionRequest.SerializeToString,
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.GetChargeDefinitionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateChargeDefinition(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.charge.v2beta1.ChargeAPI/CreateChargeDefinition",
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.CreateChargeDefinitionRequest.SerializeToString,
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.CreateChargeDefinitionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteChargeDefinition(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.catalog.charge.v2beta1.ChargeAPI/DeleteChargeDefinition",
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.DeleteChargeDefinitionRequest.SerializeToString,
            flexport_dot_catalog_dot_charge_dot_v2beta1_dot_charge__api__pb2.DeleteChargeDefinitionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
