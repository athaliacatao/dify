# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.example.customer.v1beta1 import customer_api_pb2 as flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2


class CustomerAPIStub(object):
    """A toy customer management service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCustomer = channel.unary_unary(
                '/flexport.example.customer.v1beta1.CustomerAPI/CreateCustomer',
                request_serializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.CreateCustomerRequest.SerializeToString,
                response_deserializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.CreateCustomerResponse.FromString,
                )
        self.GetCustomer = channel.unary_unary(
                '/flexport.example.customer.v1beta1.CustomerAPI/GetCustomer',
                request_serializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.GetCustomerRequest.SerializeToString,
                response_deserializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.GetCustomerResponse.FromString,
                )


class CustomerAPIServicer(object):
    """A toy customer management service.
    """

    def CreateCustomer(self, request, context):
        """Creates a customer.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomer(self, request, context):
        """Gets a customer.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomerAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCustomer,
                    request_deserializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.CreateCustomerRequest.FromString,
                    response_serializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.CreateCustomerResponse.SerializeToString,
            ),
            'GetCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomer,
                    request_deserializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.GetCustomerRequest.FromString,
                    response_serializer=flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.GetCustomerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.example.customer.v1beta1.CustomerAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomerAPI(object):
    """A toy customer management service.
    """

    @staticmethod
    def CreateCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.example.customer.v1beta1.CustomerAPI/CreateCustomer',
            flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.CreateCustomerRequest.SerializeToString,
            flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.CreateCustomerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.example.customer.v1beta1.CustomerAPI/GetCustomer',
            flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.GetCustomerRequest.SerializeToString,
            flexport_dot_example_dot_customer_dot_v1beta1_dot_customer__api__pb2.GetCustomerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
