# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.finance_platform.shipment_hold.v1beta1 import (
    shipment_hold_api_pb2 as flexport_dot_finance__platform_dot_shipment__hold_dot_v1beta1_dot_shipment__hold__api__pb2,
)


class ShipmentHoldAPIStub:
    """API to retrieve a shipment's financial hold reasons."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetShipmentHold = channel.unary_unary(
            "/flexport.finance_platform.shipment_hold.v1beta1.ShipmentHoldAPI/GetShipmentHold",
            request_serializer=flexport_dot_finance__platform_dot_shipment__hold_dot_v1beta1_dot_shipment__hold__api__pb2.GetShipmentHoldRequest.SerializeToString,
            response_deserializer=flexport_dot_finance__platform_dot_shipment__hold_dot_v1beta1_dot_shipment__hold__api__pb2.GetShipmentHoldResponse.FromString,
        )


class ShipmentHoldAPIServicer:
    """API to retrieve a shipment's financial hold reasons."""

    def GetShipmentHold(self, request, context):
        """Gets financial hold reasons for the requested shipment."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ShipmentHoldAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetShipmentHold": grpc.unary_unary_rpc_method_handler(
            servicer.GetShipmentHold,
            request_deserializer=flexport_dot_finance__platform_dot_shipment__hold_dot_v1beta1_dot_shipment__hold__api__pb2.GetShipmentHoldRequest.FromString,
            response_serializer=flexport_dot_finance__platform_dot_shipment__hold_dot_v1beta1_dot_shipment__hold__api__pb2.GetShipmentHoldResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.finance_platform.shipment_hold.v1beta1.ShipmentHoldAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class ShipmentHoldAPI:
    """API to retrieve a shipment's financial hold reasons."""

    @staticmethod
    def GetShipmentHold(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.finance_platform.shipment_hold.v1beta1.ShipmentHoldAPI/GetShipmentHold",
            flexport_dot_finance__platform_dot_shipment__hold_dot_v1beta1_dot_shipment__hold__api__pb2.GetShipmentHoldRequest.SerializeToString,
            flexport_dot_finance__platform_dot_shipment__hold_dot_v1beta1_dot_shipment__hold__api__pb2.GetShipmentHoldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
