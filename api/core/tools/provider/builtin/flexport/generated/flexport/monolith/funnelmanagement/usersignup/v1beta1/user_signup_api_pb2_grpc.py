# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.funnelmanagement.usersignup.v1beta1 import user_signup_api_pb2 as flexport_dot_monolith_dot_funnelmanagement_dot_usersignup_dot_v1beta1_dot_user__signup__api__pb2


class UserSignupAPIStub(object):
    """
    The FunnelManagement UserSignupAPI service definition. 
    This service has rpc apis to allow user account creation for the app depending on FunnelManagement Engine.
    Ignition App is the only consumer of this service now and the service has one rpc api to create user account for Ignition App.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IgnitionUserSignup = channel.unary_unary(
                '/flexport.monolith.funnelmanagement.usersignup.v1beta1.UserSignupAPI/IgnitionUserSignup',
                request_serializer=flexport_dot_monolith_dot_funnelmanagement_dot_usersignup_dot_v1beta1_dot_user__signup__api__pb2.IgnitionUserSignupRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_funnelmanagement_dot_usersignup_dot_v1beta1_dot_user__signup__api__pb2.IgnitionUserSignupResponse.FromString,
                )


class UserSignupAPIServicer(object):
    """
    The FunnelManagement UserSignupAPI service definition. 
    This service has rpc apis to allow user account creation for the app depending on FunnelManagement Engine.
    Ignition App is the only consumer of this service now and the service has one rpc api to create user account for Ignition App.
    """

    def IgnitionUserSignup(self, request, context):
        """
        Attempts to create a user account in the IAM Service or creates a record IneligibleUserCapabilities table.
        Creates the user account in the IAM NIS if 'eligible' flag in user_signup_data is set to true. 
        Creates IneligibleUserCapabilities record if 'eligible' flag in user_signup_data is set to false.
        If the action was successful, the returns a IgnitionUserSignupResponse message with no payload.
        If the action failed, the rpc will return an error with the appropriate message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserSignupAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IgnitionUserSignup': grpc.unary_unary_rpc_method_handler(
                    servicer.IgnitionUserSignup,
                    request_deserializer=flexport_dot_monolith_dot_funnelmanagement_dot_usersignup_dot_v1beta1_dot_user__signup__api__pb2.IgnitionUserSignupRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_funnelmanagement_dot_usersignup_dot_v1beta1_dot_user__signup__api__pb2.IgnitionUserSignupResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.funnelmanagement.usersignup.v1beta1.UserSignupAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserSignupAPI(object):
    """
    The FunnelManagement UserSignupAPI service definition. 
    This service has rpc apis to allow user account creation for the app depending on FunnelManagement Engine.
    Ignition App is the only consumer of this service now and the service has one rpc api to create user account for Ignition App.
    """

    @staticmethod
    def IgnitionUserSignup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.funnelmanagement.usersignup.v1beta1.UserSignupAPI/IgnitionUserSignup',
            flexport_dot_monolith_dot_funnelmanagement_dot_usersignup_dot_v1beta1_dot_user__signup__api__pb2.IgnitionUserSignupRequest.SerializeToString,
            flexport_dot_monolith_dot_funnelmanagement_dot_usersignup_dot_v1beta1_dot_user__signup__api__pb2.IgnitionUserSignupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
