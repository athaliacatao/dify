# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.procurement.airprovider.v2 import (
    route_term_api_pb2 as flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2,
)


class RouteTermAPIStub:
    """This service is used to manage route terms."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRouteTerms = channel.unary_unary(
            "/flexport.procurement.airprovider.v2.RouteTermAPI/CreateRouteTerms",
            request_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.CreateRouteTermsRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.CreateRouteTermsResponse.FromString,
        )
        self.UpdateSpotRouteTerms = channel.unary_unary(
            "/flexport.procurement.airprovider.v2.RouteTermAPI/UpdateSpotRouteTerms",
            request_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.UpdateSpotRouteTermsRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.UpdateSpotRouteTermsResponse.FromString,
        )
        self.GetRouteTerms = channel.unary_unary(
            "/flexport.procurement.airprovider.v2.RouteTermAPI/GetRouteTerms",
            request_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.GetRouteTermsRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.GetRouteTermsResponse.FromString,
        )
        self.DeleteSpotRouteTerm = channel.unary_unary(
            "/flexport.procurement.airprovider.v2.RouteTermAPI/DeleteSpotRouteTerm",
            request_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.DeleteSpotRouteTermRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.DeleteSpotRouteTermResponse.FromString,
        )
        self.ListRouteTerms = channel.unary_stream(
            "/flexport.procurement.airprovider.v2.RouteTermAPI/ListRouteTerms",
            request_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.ListRouteTermsRequest.SerializeToString,
            response_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.ListRouteTermsResponse.FromString,
        )


class RouteTermAPIServicer:
    """This service is used to manage route terms."""

    def CreateRouteTerms(self, request, context):
        """Create route terms."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateSpotRouteTerms(self, request, context):
        """Update spot route terms."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetRouteTerms(self, request, context):
        """Get route terms."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteSpotRouteTerm(self, request, context):
        """Delete spot route term"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListRouteTerms(self, request, context):
        """List route terms."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_RouteTermAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateRouteTerms": grpc.unary_unary_rpc_method_handler(
            servicer.CreateRouteTerms,
            request_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.CreateRouteTermsRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.CreateRouteTermsResponse.SerializeToString,
        ),
        "UpdateSpotRouteTerms": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateSpotRouteTerms,
            request_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.UpdateSpotRouteTermsRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.UpdateSpotRouteTermsResponse.SerializeToString,
        ),
        "GetRouteTerms": grpc.unary_unary_rpc_method_handler(
            servicer.GetRouteTerms,
            request_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.GetRouteTermsRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.GetRouteTermsResponse.SerializeToString,
        ),
        "DeleteSpotRouteTerm": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteSpotRouteTerm,
            request_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.DeleteSpotRouteTermRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.DeleteSpotRouteTermResponse.SerializeToString,
        ),
        "ListRouteTerms": grpc.unary_stream_rpc_method_handler(
            servicer.ListRouteTerms,
            request_deserializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.ListRouteTermsRequest.FromString,
            response_serializer=flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.ListRouteTermsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.procurement.airprovider.v2.RouteTermAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class RouteTermAPI:
    """This service is used to manage route terms."""

    @staticmethod
    def CreateRouteTerms(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.airprovider.v2.RouteTermAPI/CreateRouteTerms",
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.CreateRouteTermsRequest.SerializeToString,
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.CreateRouteTermsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateSpotRouteTerms(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.airprovider.v2.RouteTermAPI/UpdateSpotRouteTerms",
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.UpdateSpotRouteTermsRequest.SerializeToString,
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.UpdateSpotRouteTermsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetRouteTerms(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.airprovider.v2.RouteTermAPI/GetRouteTerms",
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.GetRouteTermsRequest.SerializeToString,
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.GetRouteTermsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteSpotRouteTerm(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.procurement.airprovider.v2.RouteTermAPI/DeleteSpotRouteTerm",
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.DeleteSpotRouteTermRequest.SerializeToString,
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.DeleteSpotRouteTermResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListRouteTerms(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/flexport.procurement.airprovider.v2.RouteTermAPI/ListRouteTerms",
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.ListRouteTermsRequest.SerializeToString,
            flexport_dot_procurement_dot_airprovider_dot_v2_dot_route__term__api__pb2.ListRouteTermsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
