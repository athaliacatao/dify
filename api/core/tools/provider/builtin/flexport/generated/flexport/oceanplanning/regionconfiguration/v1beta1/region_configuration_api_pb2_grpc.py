# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from flexport.oceanplanning.regionconfiguration.v1beta1 import (
    region_configuration_api_pb2 as flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2,
)


class OceanPlanningRegionAPIStub:
    """The ocean planning region region service grpc API end point."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOceanPlanningRegion = channel.unary_unary(
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningRegion",
            request_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionRequest.SerializeToString,
            response_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionResponse.FromString,
        )
        self.GetOceanPlanningRegionByPorts = channel.unary_unary(
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningRegionByPorts",
            request_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionByPortsRequest.SerializeToString,
            response_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionByPortsResponse.FromString,
        )
        self.GetOceanPlanningPortsByTradeLanes = channel.unary_unary(
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningPortsByTradeLanes",
            request_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByTradeLanesRequest.SerializeToString,
            response_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByTradeLanesResponse.FromString,
        )
        self.GetOceanPlanningPortsByOriginAndDestinationRegion = channel.unary_unary(
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningPortsByOriginAndDestinationRegion",
            request_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByOriginAndDestinationRegionRequest.SerializeToString,
            response_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByOriginAndDestinationRegionResponse.FromString,
        )


class OceanPlanningRegionAPIServicer:
    """The ocean planning region region service grpc API end point."""

    def GetOceanPlanningRegion(self, request, context):
        """Get the ocean planning region given the region slug."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOceanPlanningRegionByPorts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOceanPlanningPortsByTradeLanes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOceanPlanningPortsByOriginAndDestinationRegion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_OceanPlanningRegionAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetOceanPlanningRegion": grpc.unary_unary_rpc_method_handler(
            servicer.GetOceanPlanningRegion,
            request_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionRequest.FromString,
            response_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionResponse.SerializeToString,
        ),
        "GetOceanPlanningRegionByPorts": grpc.unary_unary_rpc_method_handler(
            servicer.GetOceanPlanningRegionByPorts,
            request_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionByPortsRequest.FromString,
            response_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionByPortsResponse.SerializeToString,
        ),
        "GetOceanPlanningPortsByTradeLanes": grpc.unary_unary_rpc_method_handler(
            servicer.GetOceanPlanningPortsByTradeLanes,
            request_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByTradeLanesRequest.FromString,
            response_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByTradeLanesResponse.SerializeToString,
        ),
        "GetOceanPlanningPortsByOriginAndDestinationRegion": grpc.unary_unary_rpc_method_handler(
            servicer.GetOceanPlanningPortsByOriginAndDestinationRegion,
            request_deserializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByOriginAndDestinationRegionRequest.FromString,
            response_serializer=flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByOriginAndDestinationRegionResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.


class OceanPlanningRegionAPI:
    """The ocean planning region region service grpc API end point."""

    @staticmethod
    def GetOceanPlanningRegion(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningRegion",
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionRequest.SerializeToString,
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOceanPlanningRegionByPorts(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningRegionByPorts",
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionByPortsRequest.SerializeToString,
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningRegionByPortsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOceanPlanningPortsByTradeLanes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningPortsByTradeLanes",
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByTradeLanesRequest.SerializeToString,
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByTradeLanesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOceanPlanningPortsByOriginAndDestinationRegion(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/flexport.oceanplanning.regionconfiguration.v1beta1.OceanPlanningRegionAPI/GetOceanPlanningPortsByOriginAndDestinationRegion",
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByOriginAndDestinationRegionRequest.SerializeToString,
            flexport_dot_oceanplanning_dot_regionconfiguration_dot_v1beta1_dot_region__configuration__api__pb2.GetOceanPlanningPortsByOriginAndDestinationRegionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
