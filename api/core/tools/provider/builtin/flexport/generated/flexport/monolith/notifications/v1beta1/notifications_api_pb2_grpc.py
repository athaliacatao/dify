# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexport.monolith.notifications.v1beta1 import notifications_api_pb2 as flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2


class NotificationsAPIStub(object):
    """This is the API for services to interact with Notifications.
    Production readiness: https://docs.google.com/document/d/1mOTPU7yJD3jN479lHcx5l6CqK2vgKzYL4WnSFg6JY4Y/edit?usp=sharing
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListNotifications = channel.unary_unary(
                '/flexport.monolith.notifications.v1beta1.NotificationsAPI/ListNotifications',
                request_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.ListNotificationsRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.ListNotificationsResponse.FromString,
                )
        self.CreateNotifications = channel.unary_unary(
                '/flexport.monolith.notifications.v1beta1.NotificationsAPI/CreateNotifications',
                request_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.CreateNotificationsRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.CreateNotificationsResponse.FromString,
                )
        self.UpdateNotifications = channel.unary_unary(
                '/flexport.monolith.notifications.v1beta1.NotificationsAPI/UpdateNotifications',
                request_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.UpdateNotificationsRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.UpdateNotificationsResponse.FromString,
                )
        self.DeleteNotifications = channel.unary_unary(
                '/flexport.monolith.notifications.v1beta1.NotificationsAPI/DeleteNotifications',
                request_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.DeleteNotificationsRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.DeleteNotificationsResponse.FromString,
                )
        self.SendLegacyEmails = channel.unary_unary(
                '/flexport.monolith.notifications.v1beta1.NotificationsAPI/SendLegacyEmails',
                request_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.SendLegacyEmailsRequest.SerializeToString,
                response_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.SendLegacyEmailsResponse.FromString,
                )


class NotificationsAPIServicer(object):
    """This is the API for services to interact with Notifications.
    Production readiness: https://docs.google.com/document/d/1mOTPU7yJD3jN479lHcx5l6CqK2vgKzYL4WnSFg6JY4Y/edit?usp=sharing
    """

    def ListNotifications(self, request, context):
        """List notifications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNotifications(self, request, context):
        """Create notifications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNotifications(self, request, context):
        """Update notifications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNotifications(self, request, context):
        """Delete notifications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendLegacyEmails(self, request, context):
        """Send emails.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NotificationsAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNotifications,
                    request_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.ListNotificationsRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.ListNotificationsResponse.SerializeToString,
            ),
            'CreateNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNotifications,
                    request_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.CreateNotificationsRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.CreateNotificationsResponse.SerializeToString,
            ),
            'UpdateNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNotifications,
                    request_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.UpdateNotificationsRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.UpdateNotificationsResponse.SerializeToString,
            ),
            'DeleteNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNotifications,
                    request_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.DeleteNotificationsRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.DeleteNotificationsResponse.SerializeToString,
            ),
            'SendLegacyEmails': grpc.unary_unary_rpc_method_handler(
                    servicer.SendLegacyEmails,
                    request_deserializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.SendLegacyEmailsRequest.FromString,
                    response_serializer=flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.SendLegacyEmailsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flexport.monolith.notifications.v1beta1.NotificationsAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NotificationsAPI(object):
    """This is the API for services to interact with Notifications.
    Production readiness: https://docs.google.com/document/d/1mOTPU7yJD3jN479lHcx5l6CqK2vgKzYL4WnSFg6JY4Y/edit?usp=sharing
    """

    @staticmethod
    def ListNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.notifications.v1beta1.NotificationsAPI/ListNotifications',
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.ListNotificationsRequest.SerializeToString,
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.ListNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.notifications.v1beta1.NotificationsAPI/CreateNotifications',
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.CreateNotificationsRequest.SerializeToString,
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.CreateNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.notifications.v1beta1.NotificationsAPI/UpdateNotifications',
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.UpdateNotificationsRequest.SerializeToString,
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.UpdateNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.notifications.v1beta1.NotificationsAPI/DeleteNotifications',
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.DeleteNotificationsRequest.SerializeToString,
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.DeleteNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendLegacyEmails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flexport.monolith.notifications.v1beta1.NotificationsAPI/SendLegacyEmails',
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.SendLegacyEmailsRequest.SerializeToString,
            flexport_dot_monolith_dot_notifications_dot_v1beta1_dot_notifications__api__pb2.SendLegacyEmailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
