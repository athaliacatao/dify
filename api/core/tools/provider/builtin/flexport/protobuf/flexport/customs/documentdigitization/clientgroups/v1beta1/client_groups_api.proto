// TEAM: customs_platform

syntax = "proto3";

package flexport.customs.documentdigitization.clientgroups.v1beta1;

import "flexport/rulesengine/options/v1/options.proto";

option java_multiple_files = true;
option java_outer_classname = "ClientGroupsApiProto";
option java_package = "com.flexport.customs.documentdigitization.clientgroups.v1beta1";
option ruby_package = "Flexport::Customs::DocumentDigitization::ClientGroups::V1Beta1";

service ClientGroupsAPI {
  option (flexport.rulesengine.options.v1.rule_facade).service_name = "commercial_invoice";

  rpc GetClientsInGroup(GetClientsInGroupRequest) returns (GetClientsInGroupResponse) {
    option (flexport.rulesengine.options.v1.rule).api_name = "com.flexport.customs.documentdigitization.clientgroups";
    option (flexport.rulesengine.options.v1.rule).description = "client groups";
    option (flexport.rulesengine.options.v1.rule).tolerate_evaluation_error = false;
    option (flexport.rulesengine.options.v1.rule).workspace = "commercial_invoice";
    option (flexport.rulesengine.options.v1.rule).include_null_result = false;
    option (flexport.rulesengine.options.v1.rule).multiple_input = false;
    option (flexport.rulesengine.options.v1.rule).evaluate_output_container = false;
  }
}

message GetClientsInGroupRequest {
  string group_name = 1;
}

message GetClientsInGroupResponse {
  repeated int32 client_ids = 1 [(flexport.rulesengine.options.v1.algolia_index).index_name = "Client"];
}
