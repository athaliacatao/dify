// TEAM: kingsroad

syntax = "proto3";

package flexport.forwardingcustomsmanager.server.v1beta1;

import "flexport/forwardingcustomsmanager/export/customsdeclaration/enums/v1beta1/automated_export_system.proto";
import "flexport/forwardingcustomsmanager/export/customsdeclaration/enums/v1beta1/customs_broker.proto";
import "flexport/forwardingcustomsmanager/export/customsdeclaration/v1beta1/automated_export_system_filing_api.proto";

option java_multiple_files = true;
option java_outer_classname = "ForwardingCustomsManagerApiProto";
option java_package = "com.flexport.forwardingcustomsmanager.server.v1beta1";
option ruby_package = "Flexport::ForwardingCustomsManager::Server::V1Beta1";

// This is the API for forwarding customs manager.
service ForwardingCustomsManagerAPI {
  // automated export system filing related grpc api
  rpc UpsertAutomatedExportSystemFiling(UpsertAutomatedExportSystemFilingRequest) returns (UpsertAutomatedExportSystemFilingResponse);
  rpc ListAutomatedExportSystemFilings(ListAutomatedExportSystemFilingsRequest) returns (ListAutomatedExportSystemFilingsResponse);
}

message UpsertAutomatedExportSystemFilingRequest {
  string shipment_fid = 1;
  optional string fid = 2; // if fid is set, consider the request as update
  optional string custom_aes_filing_id = 3; // legacy id from core

  string itn_number = 11;
  export.customsdeclaration.enums.v1beta1.CustomsBroker customs_broker = 12;
  // todo: implement other fields in future
}

message UpsertAutomatedExportSystemFilingResponse {
  export.customsdeclaration.v1beta1.AutomatedExportSystemFiling customs_aes_filing = 1;
}

message ListAutomatedExportSystemFilingsRequest {
  oneof id {
    string fid = 1;
    string shipment_fid = 2;
    string customs_aes_filing_id = 3;
  }
}

message ListAutomatedExportSystemFilingsResponse {
  repeated export.customsdeclaration.v1beta1.AutomatedExportSystemFiling customs_aes_filings = 1;
}
