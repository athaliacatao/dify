// TEAM: customs_platform

syntax = "proto3";

package flexport.customs.declarationupdate.declarationstatusupdated.v1beta1;

import "flexport/customs/declarationupdate/declarationtype/v1beta1/declaration_type.proto";

option java_multiple_files = true;
option java_outer_classname = "DeclarationStatusUpdatedProto";
option java_package = "com.flexport.customs.declarationupdate.declarationstatusupdated.v1beta1";
option ruby_package = "Flexport::Customs::DeclarationUpdate::DeclarationStatusUpdated::V1Beta1";

// The DeclarationStatusUpdated event is emitted when the status of a declaration is updated
// in an external system such as AEB or Descartes.
message DeclarationStatusUpdated {
  // The Flexport ID of the shipment that the declaration is associated with.
  string shipment_fid = 1;
  // The Flexport ID of the required declaration that is associated with the
  // declaration in the external system.
  string required_declaration_fid = 2;
  // The type of the declaration.
  flexport.customs.declarationupdate.declarationtype.v1beta1.DeclarationType declaration_type = 3;
  reserved 4, 5; // Reserved for deprecated fields, do not re-use field numbers
  string idempotency_id = 6;
  // The status of the declaration in the external system.
  string external_status = 7;
}
