// TEAM: bookings

syntax = "proto3";

package flexport.booking.readyforexecution.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "ReadyForExecutionProto";
option java_package = "com.flexport.booking.readyforexecution.v1beta1";
option ruby_package = "Flexport::Booking::ReadyForExecution::V1Beta1";

import "flexport/executioncoordinator/executionorder/v1/execution_order.proto";

// A Kinesis event signifying a booking is ready for execution to start.
message ReadyForExecution {
  // FID of the booking execution is being requested for
  string booking_fid = 1;
  // ExecutionOrder (auto-built for VisibilityOnly, or in-the-future retrieved from Quote)
  flexport.executioncoordinator.executionorder.v1.ExecutionOrder execution_order = 2;
  // FID of the accepted quote for services to be provided. Once ExecutionOrder is added to this event we probably
  // won't need this, placing it at #11 to leave #2-10 for potential ExecutionOrder related info but still have it
  // within top 15 (most performant encode/decode).
  string accepted_quote_fid = 11;
  string quote_accepted_by_fid = 12;
  string quote_accept_impersonated_by_fid = 13;
  // Add an unique id to each message for debugging purpose.
  // It is a string look like "f8c3de3d-1fea-4d7c-a8b0-29f63c4c3454".
  string id = 14;
}
