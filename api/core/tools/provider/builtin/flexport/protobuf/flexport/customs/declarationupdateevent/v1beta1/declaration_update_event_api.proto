// TEAM: customs_platform

syntax = "proto3";

package flexport.customs.declarationupdateevent.v1beta1;

import "flexport/customs/declarationupdate/customsbillchargesupdated/v1beta1/customs_bill_charges_updated.proto";
import "flexport/customs/declarationupdate/customsbillfinalized/v1beta1/customs_bill_finalized.proto";
import "flexport/customs/declarationupdate/declarationfilecreated/v1beta1/declaration_file_created.proto";
import "flexport/customs/declarationupdate/declarationstatusupdated/v1beta1/declaration_status_updated.proto";
import "flexport/customs/declarationupdate/externalreferenceupdated/v1beta1/external_reference_updated.proto";

option java_multiple_files = true;
option java_package = "com.flexport.customs.declarationupdateevent.v1beta1";
option ruby_package = "Flexport::Customs::DeclarationUpdateEvent::V1Beta1";

// The DeclarationUpdateEventAPI allows a customs authority integration to transmit the results of a customs
// declaration update to another system.
service DeclarationUpdateEventAPI {
  rpc HandleDeclarationUpdateEvent(HandleDeclarationUpdateEventRequest) returns (HandleDeclarationUpdateEventResponse);
}

message HandleDeclarationUpdateEventRequest {
  oneof event {
    // UploadDocument communicates a document, staged in S3, to the external system.
    declarationupdate.declarationfilecreated.v1beta1.DeclarationFileCreated file_created = 1;
    // The status of a declaration has been updated.
    declarationupdate.declarationstatusupdated.v1beta1.DeclarationStatusUpdated status_updated = 2;
    // The charges on the customs bill have been updated.
    declarationupdate.customsbillchargesupdated.v1beta1.CustomsBillChargesUpdated customs_bill_charges_updated = 3 [deprecated = true];
    // The external reference on the declaration has been updated.
    declarationupdate.externalreferenceupdated.v1beta1.ExternalReferenceUpdated external_reference_updated = 4;
    // The customs duty bill on the declaration is finalized.
    declarationupdate.customsbillfinalized.v1beta1.CustomsBillFinalized customs_bill_finalized = 5;
  }
}

message HandleDeclarationUpdateEventResponse {
  string idempotency_id = 1;
}
