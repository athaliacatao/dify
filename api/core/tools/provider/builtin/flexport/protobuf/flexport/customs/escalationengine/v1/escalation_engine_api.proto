// TEAM: customs_platform

syntax = "proto3";

package flexport.customs.escalationengine.v1;

import "flexport/customs/escalationengine/v1/bill_of_lading_escalation.proto";
import "flexport/customs/escalationengine/v1/commercial_invoice_escalation.proto";
import "flexport/customs/escalationengine/v1/customs_filing_order_escalation.proto";
import "flexport/customs/escalationengine/v1/customs_pre_order_escalation.proto";
import "flexport/customs/escalationengine/v1/customs_route_escalation.proto";
import "flexport/customs/escalationengine/v1/enums.proto";
import "flexport/customs/escalationengine/v1/escalation.proto";
import "flexport/customs/escalationengine/v1/network_address_escalation.proto";
import "flexport/customs/escalationengine/v1/network_company_entity_escalation.proto";
import "flexport/customs/escalationengine/v1/product_library_escalation.proto";
import "flexport/customs/escalationengine/v1/us_isf_filing_escalation.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "EscalationEngineApiProto";
option java_package = "com.flexport.customs.escalationengine.v1";
option ruby_package = "Flexport::Customs::EscalationEngine::V1";

// API for the Escalation Engine over gRPC.
service EscalationEngineAPI {
  // Escalate an issue.
  rpc Escalate(EscalateRequest) returns (EscalateResponse);
  // Deescalate an issue.
  rpc Deescalate(DeescalateRequest) returns (DeescalateResponse);
}

message EscalateRequest {
  // Entity fid (Product/Order/CI/etc) with the issue
  string reference_fid = 1;
  // Escalation-type specific data
  EscalationType parameters = 2;
  // When the issue should be resolved
  google.protobuf.Timestamp due_time = 3;

  string client_fid = 11;
  string order_fid = 12;

  optional ModeOfTransport mode_of_transport = 13;
  optional ServiceType service_type = 14;
  optional string import_country = 15;

  oneof escalation_reference {
    // If you know the escalation fid, especially in gRPC context
    // you can use this as a reference
    string escalation_fid = 21;
    // This is a source-specific identifier for the escalation,
    //     * and only has to be unique for the specific entity and escalation type.
    //     *
    //     * Example: declaration service detects for flx::decl:A that flx::product:1
    //     * is not classified and escalates for product 1.
    //     * The upsert_key could be "declaration-service-flx::decl:A".
    //     * When a new message arrives with a later due_date, escalation engine can
    //     * use this to disambiguate between flx::decl:B escalating the same issue
    //     * with a different due_date and flx::decl:A postponing the due_date
    //
    string upsert_key = 22;
  }
}

// Resolve an escalation
message DeescalateRequest {
  oneof deescalation_reference {
    string escalation_fid = 1;
    ByEscalationFields by_escalation_fields = 2;
  }

  message ByEscalationFields {
    string reference_fid = 1;
    string order_fid = 2;
    string upsert_key = 3;

    oneof escalation_type {
      //AdvanceShippingNoticeEscalation asn = 100;
      BillOfLadingEscalation.Type bol = 200;
      CommercialInvoiceEscalation.Type ci = 300;
      CustomsFilingOrderEscalation.Type cfo = 600;
      CustomsPreOrderEscalation.Type cpo = 700;
      CustomsRouteEscalation.Type customs_route = 750;
      NetworkCompanyEntityEscalation.Type network_company_entity = 800;
      NetworkAddressEscalation.Type network_address = 900;
      UsIsfFilingEscalation.Type isf = 2000;
      ProductLibraryEscalation.Type product = 2500;
      //CommercialInvoiceOrPackingListEscalation ci_pl = 350;
      //CommercialInvoiceOrPackingListLineItemEscalation ci_pl_item = 351;
      //CustomsEntryEscalation entry = 500;
      //HouseBillOfLadingEscalation hbl = 1200;
      //MasterBillOfLadingEscalation mbl = 1500;
      //PackingListEscalation pl = 1700;
      //PackingListLineItemEscalation pl_item = 1701;
    }
  }
}

// Response for gRPC Escalate.
message EscalateResponse {
  Escalation escalation = 1;
}

// Response for gRPC Deescalate.
message DeescalateResponse {
  Escalation escalation = 1;
}
