// TEAM: cost_capture

syntax = "proto3";

package flexport.financialledger.supplyservice.purchase.ingestion.v1beta1;

import "flexport/financialvisibility/costitem/v1beta1/cost_item.proto";
import "flexport/financialvisibility/supplyservice/v1beta1/supply_service.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "IngestionProto";
option java_package = "com.flexport.financialledger.supplyservice.purchase.ingestion.v1beta1";
option ruby_package = "Flexport::FinancialLedger::SupplyService::Purchase::Ingestion::V1Beta1";

// Kinesis event emitted in order to trigger a SupplyService purchase
// ingestion to FinancialLedger.
message IngestionTriggered {
  oneof supply_service_value {
    google.protobuf.StringValue supply_service_id = 1;
    supplyservice.v1beta1.ExternalSupplyServiceDto external_supply_service = 2;
  }
  google.protobuf.Timestamp purchased_at_time = 3;
  repeated costitem.v1beta1.CostItemDto cost_items = 4;
}
