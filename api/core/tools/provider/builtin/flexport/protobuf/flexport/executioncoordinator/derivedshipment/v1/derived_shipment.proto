// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.derivedshipment.v1;

import "flexport/executioncoordinator/derivedshipment/v1/derived_container.proto";
import "flexport/executioncoordinator/derivedshipment/v1/derived_shipment_route.proto";
import "flexport/executioncoordinator/executionoffering/v1/transit/air_execution_offering.proto";
import "flexport/executioncoordinator/executionoffering/v1/transit/auxiliary_trucking.proto";
import "flexport/executioncoordinator/executionoffering/v1/transit/ocean_non_fcl_execution_offering.proto";
import "flexport/executioncoordinator/executionoffering/v1/transit/trucking_only_execution_offering.proto";
import "flexport/executioncoordinator/executionoffering/v1/valueadded/carbon_offset_execution_offering.proto";
import "flexport/executioncoordinator/executionoffering/v1/valueadded/export_customs_execution_offering.proto";
import "flexport/executioncoordinator/executionoffering/v1/valueadded/hk_export_trade_declaration_execution_offering.proto";
import "flexport/executioncoordinator/executionoffering/v1/valueadded/import_customs_execution_offering.proto";
import "flexport/executioncoordinator/executionoffering/v1/valueadded/insurance_execution_offering.proto";
import "flexport/executioncoordinator/types/enums/v1/cargo_screening_status.proto";
import "flexport/executioncoordinator/types/enums/v1/checklist_item_status.proto";
import "flexport/executioncoordinator/types/enums/v1/house_air_waybill_transmission_mode.proto";
import "flexport/executioncoordinator/types/enums/v1/house_bill_of_lading_transmission_mode.proto";
import "flexport/executioncoordinator/types/enums/v1/known_shipper_status.proto";
import "flexport/executioncoordinator/types/enums/v1/master_air_waybill_transmission_mode.proto";
import "flexport/executioncoordinator/types/enums/v1/master_house_bill_of_lading_transmission_mode.proto";
import "flexport/executioncoordinator/types/enums/v1/ocean_fcl_role.proto";
import "flexport/executioncoordinator/types/enums/v1/ocean_house_bill_of_lading_release_type.proto";
import "flexport/executioncoordinator/types/enums/v1/ocean_master_bill_of_lading_release_method.proto";
import "flexport/executioncoordinator/types/enums/v1/ocean_master_bill_of_lading_transmission_mode.proto";
import "flexport/executioncoordinator/types/enums/v1/shipment_blocked_reason.proto";
import "flexport/executioncoordinator/types/enums/v1/shipment_blocked_state.proto";
import "flexport/executioncoordinator/types/enums/v1/shipment_priority.proto";
import "flexport/executioncoordinator/types/enums/v1/transportation_status.proto";
import "flexport/executioncoordinator/types/forwardingagents/v1/forwarding_agents.proto";
import "flexport/executioncoordinator/types/regulatedagent/v1/regulated_agent_eu_details.proto";
import "flexport/originops/quotestatus/v1/quote_status.proto";
import "flexport/os/v1/types/cargo/v1/shipment_cargo.proto";
import "flexport/os/v1/types/incoterm/v1/incoterm.proto";
import "flexport/os/v1/types/walltimedate/v1/wall_time_date.proto";
import "flexport/os/v1/types/walltimedateordatetime/v1/wall_time_date_or_date_time.proto";
import "flexport/os/v1/types/walltimedatetime/v1/wall_time_date_time.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "DerivedShipmentProto";
option java_package = "com.flexport.executioncoordinator.derivedshipment.v1";
option ruby_package = "Flexport::ExecutionCoordinator::DerivedShipment::V1";

// If you add a field that you do not want to include in semantic diffing, such as metadata or an ephemeralKey,
// please change code accordingly in ForwardingUtil::Diff::DerivedShipment.

// Shipment data derived from ExecutionCoordinator entities and monolith entities.
// See http://go/derived-shipment for details.
// Consider using DerivedShipmentRouteWrapper for ease of use in JVM languages.
// Next ID: 72
message DerivedShipment {
  //
  // Identifier for the entity. Set by the ExecutionCoordinator.
  string fid = 8;
  //
  // The ExecutionOrder fid associated with this DerivedShipment.
  // Suggested usage: ignore DerivedShipment protos with empty execution_order_fid.
  // This will be empty if the shipment.rb record from which the DerivedShipment is derived
  // represents a "quote request" rather than an "actual shipment". The bookings NIS relies
  // on these "quote request" shipments having associated DerivedShipments. But at some
  // point in the future this behavior will change and DerivedShipments will only be created
  // for ExecutionOrders. See comments on shipment.rb for more about this legacy overloading.
  // (ExecutionOrders are not created for "quote request" shipment.rb instances.)
  string execution_order_fid = 1;
  //
  // The shipment.rb fid associated with this DerivedShipment. Always present.
  string shipment_fid = 2;
  //
  // Revision number of the DerivedShipment. Increments by one each time the shipment is derived, starting at 1.
  uint32 revision = 69;
  //
  // Source information about the DerivedShipment, including timestamps about when data
  // was extracted from the monolith and processed within the ExecutionCoordinator.
  DerivedShipmentSource source = 7;
  //
  // Derived top-level fields.
  string name = 6;
  DerivedShipmentTransportMode primary_transportation_mode = 9;
  //
  // List of modes a client has requested quotes on. Usually just one, but may be multiple
  // (A common use case is comparing ocean and air, historically represented with the OCEAN_AIR transport mode)
  repeated DerivedShipmentTransportMode transportation_modes_to_quote = 33;
  flexport.os.v1.types.incoterm.v1.Incoterm incoterm = 10;
  flexport.executioncoordinator.types.enums.v1.ShipmentPriority priority = 18;
  string origin_country_code = 25;
  string destination_country_code = 26;
  string nominating_client_fid = 27;
  bool is_4pl_visibility_only = 28;
  string transportation_status = 39;
  flexport.executioncoordinator.types.enums.v1.TransportationStatus transportation_status_enum = 46;
  google.protobuf.Timestamp archived_time = 40;
  bool is_prospective = 41;
  repeated string container_fids = 42;
  google.protobuf.Timestamp created_time = 43;
  flexport.originops.quotestatus.v1.QuoteStatus quote_status = 44;
  // Time the quote for this DerivedShipment was accepted. May be slightly different from the
  // ExecutionOrder created_time due to delay between quote acceptance and order reaching EC.
  google.protobuf.Timestamp quote_accepted_time = 59;
  // Note: "importer of record" is defined on value_added_offerings.import_customs.
  // Sourced from the execution_order.
  ClientNominatedInvolvedParties client_nominated_involved_parties = 47;
  // Company entity fids of forwarding agents responsible for the different parts of execution.
  // Sourced from the execution_plan
  flexport.executioncoordinator.types.forwardingagents.v1.ForwardingAgents forwarding_agents = 48;
  //
  // Global transit date expectations for the _entire_ shipment.
  // Note that there may be multiple more specific dates for each origin and destination as well.
  // See execution_order.proto for details.
  flexport.os.v1.types.walltimedate.v1.WallTimeDate global_cargo_ready_date = 29;
  flexport.os.v1.types.walltimedate.v1.WallTimeDate global_target_delivery_date = 30;
  //
  // The status of checklist item "Cargo Ready Date Confirmed".
  // DEPRECATED. Use the execution_order.global_cargo_ready_date_status field instead.
  flexport.executioncoordinator.types.enums.v1.ChecklistItemStatus cargo_ready_date_confirmation_status = 34 [deprecated = true];
  //
  // The time when a shipment is completed.
  google.protobuf.Timestamp completed_time = 35;

  //
  // The time this shipment was deleted
  google.protobuf.Timestamp deleted_time = 61;

  // Bill information by transportation type
  oneof bill_info {
    OceanBillInfo ocean_bill_info = 49;
    AirBillInfo air_bill_info = 50;
  }
  // The master bill of lading fids
  repeated string master_bill_of_lading_fids = 31 [deprecated = true];
  //
  // The house bill of lading fids
  repeated string house_bill_of_lading_fids = 32 [deprecated = true];
  //
  // The DerivedRoute. This is derived from ExecutionTask-level data on the ExecutionPlan.
  DerivedShipmentRoute derived_route = 3;
  //
  // Other derived nested fields. See messages for details about how these are set.
  DerivedShipmentPlaces places = 20;
  DerivedShipmentParties parties = 21;
  // Represents Flexport's involvement in the shipment.
  // Replaces some of the Shipment model methods like wants_flexport_freight? and wants_bco?.
  DerivedShipmentRoles roles = 23;
  DerivedShipmentCargo cargo = 24;
  // Information on blocked status and block info from Compliance services.
  DerivedShipmentComplianceInfo compliance = 36;
  PlannedTransitTime planned_transit_time = 37;
  // Availability of tracking data for this shipment:
  DerivedShipmentTrackingStatus tracking_status = 38;
  // Destination CFS inbound workflow state.
  // DEPRECATED
  CfsInboundWorkflowState cfs_inbound_workflow_state = 45 [deprecated = true];
  string cfs_inbound_workflow_state_last_updated_by = 55 [deprecated = true];
  // Whether or not a pre-alert has been sent.
  bool is_pre_alert_sent = 53;
  // ContainerUses derived from state events.
  repeated DerivedContainer containers = 54;
  // If the shipment is buyer's consolidation
  bool is_buyers_consolidation = 56;
  // Child shipment ids of a consol shipment
  repeated string consol_child_shipment_fids = 57;
  // If the shipment is contained within a buyer's consolidation
  bool is_buyers_consolidation_child = 65;
  // Whether or not the main offering on the shipment for international trucking.
  bool is_trucking_international = 58;
  // The freight type of the shipment.
  // Possible values are: door_to_door, port_to_door, door_to_port and port_to_port
  string freight_type = 60;
  flexport.os.v1.types.walltimedate.v1.WallTimeDate schedule_confirmed_delivery_in_full_date = 62;
  //
  // The time that the schedule was last updated
  google.protobuf.Timestamp schedule_updated_at = 63;

  // Person or Automated System/Job who performed the action to complete the shipment
  string completed_by_user_fid = 64;

  DerivedShipmentAirExportCompliance air_export_compliance = 66;

  // Shipments originating from the SMB app have custom handling through core(invoicing, payments). The
  // flag below is used to mark this information the derived shipment.
  bool is_from_smb_app = 67;

  // shipment address known status
  ShipmentAddressKnownStatus shipment_address_known_status = 68;

  // The shipment's initial estimated delivery date.
  flexport.os.v1.types.walltimedateordatetime.v1.WallTimeDateOrDateTime initial_estimated_delivery_date = 70;

  // The shipment's delivered in full date from the Schedule Confirmed EOSE.
  flexport.os.v1.types.walltimedatetime.v1.WallTimeDateTime schedule_confirmed_delivery_in_full_date_time = 71;
}

// Transit times based on the quoted transit times and schedule.
message PlannedTransitTime {
  flexport.os.v1.types.walltimedate.v1.WallTimeDate planned_start_date = 1;
  flexport.os.v1.types.walltimedate.v1.WallTimeDate planned_end_date = 2;
}

// Client-defined involved parties for this shipment. See http://go/involved-parties.
message ClientNominatedInvolvedParties {
  string shipper_entity_fid = 1;
  string consignee_entity_fid = 2;
  string buyer_entity_fid = 3;
  string seller_entity_fid = 4;
  string importer_of_record_fid = 5;
}

// Cargo information for a shipment.
message DerivedShipmentCargo {
  // Compliance info that comes from the shipment HS codes.
  repeated DerivedShipmentProductInfo product_infos = 16;
  flexport.os.v1.types.cargo.v1.ShipmentCargo cargo_info = 17;
  // Client products that come from the commercial invoice.
  repeated string client_product_fids = 18;
  // The commercial invoice fids
  repeated string commercial_invoice_fids = 19;
}

// Derived places associated with a shipment.
// Each must be in the derived route as well.
message DerivedShipmentPlaces {
  repeated string origin_address_fids = 1;
  repeated string destination_address_fids = 2;
  // Corresponding to the NODE_TAG_HBL_PORT_OF_LOADING(FMC POL) tag within the route.
  string port_of_loading_fid = 3;
  // Corresponding to the NODE_TAG_FIRST_PORT_OF_ARRIVAL(Customs Unloading) tag within the route.
  string port_of_unloading_fid = 4;
  string inland_port_fid = 5;
  string feeder_port_fid = 6;
  string port_of_entry_fid = 7;
}

// Derived involved parties associated with a shipment.
message DerivedShipmentParties {
  string shipper_entity_fid = 1;
  string consignee_entity_fid = 2;
}

// Source info for DerivedShipment.
message DerivedShipmentSource {
  //
  // The time that monolith-dependent data for this shipment was extracted from the monolith.
  // Note that some data does not come directly from the monolith but is instead derived within
  // the ExecutionCoordinator from EC entities. Over time, the portion of data that is extracted
  // from the monolith will decrease, and the portion that is derived from EC entities
  // will increase.
  google.protobuf.Timestamp extracted_from_monolith_time = 1;
  //
  // The time that the ExecutionCoordinator derived and persisted the derived shipment data.
  // Note that the EC is not merely persisting the data extracted from the monolith, but
  // also performing derivation logic on top of EOs, EPs, ETSEs, EOSEs, etc combined with
  // the monolith-extracted data as well. The EC may "re-derive" a DerivedShipment against
  // the same set of monolith data if the EC data changes prior to the monolith data changing.
  // In these cases, persisted_in_execution_coordinator_time will change, but
  // extracted_from_monolith_time will not.
  google.protobuf.Timestamp persisted_in_execution_coordinator_time = 2;
  //
  // The current monolith extract logic version for the DerivedShipment. This is set to a
  // constant value by the monolith, and should be incremented only when we want to trigger
  // a full resync of the DerivedShipment data to EC.
  uint64 monolith_extract_logic_version = 3;
  //
  // The current ExecutionCoordinator derivation logic version for the DerivedShipment. This
  // is set to a constant value by ExecutionCoordinator, and should be incremented whenever
  // derivation logic in EC is changed and we need to backfill DerivedShipments to bring
  // them up-to-date with new logic.
  uint64 ec_derivation_logic_version = 4;
  //
  // The time that the ExecutionCoordinator directly updated the derived shipment due to
  // interaction from a user (e.g. the OverrideShipmentTransitDates mutation). Mutations
  // that trigger an optimistic update are expected to publish ETSEs and EOSEs such that
  // re-deriving the DerivedShipment from events will create the same DerivedShipment
  // that has been persisted.
  google.protobuf.Timestamp optimistically_persisted_in_execution_coordinator_time = 5;
  //
  // The source of updates to DerivedShipment.
  DerivedShipmentUpserter upserter = 6;

  // Open ended string fields for leaving context clues that aid in investigations.
  string source_class = 10;
  string notes = 11;

  string plan_revision = 20;
  string order_revision = 21;
  string itinerary_revision = 22;

  google.protobuf.Timestamp derived_at = 30;
}

// Represents the source of upserts to ExecutionCoordinator.
enum DerivedShipmentUpserter {
  DERIVED_SHIPMENT_UPSERTER_INVALID = 0;
  DERIVED_SHIPMENT_UPSERTER_MONOLITH = 1;
  DERIVED_SHIPMENT_UPSERTER_EC = 2;
  DERIVED_SHIPMENT_UPSERTER_EC_PLAN = 10;
  DERIVED_SHIPMENT_UPSERTER_EC_ORDER = 11;
  DERIVED_SHIPMENT_UPSERTER_EC_ITINERARY = 12;
  DERIVED_SHIPMENT_UPSERTER_EC_EOSE = 13;
  DERIVED_SHIPMENT_UPSERTER_EC_ETSE = 14;
  DERIVED_SHIPMENT_UPSERTER_BACKFILL = 20;
}

// Represents a transportation mode consistent with how clients interact with it.
// Shipment.rb uses a combination of three fields to determine this:
// 1) transportation_mode (ocean/air/rail/truck/etc, see app/constants/transportation_modes.rb)
// 2) is_lcl (boolean)
// 3) is_ltl (boolean)
enum DerivedShipmentTransportMode {
  DERIVED_SHIPMENT_TRANSPORT_MODE_INVALID = 0;
  DERIVED_SHIPMENT_TRANSPORT_MODE_OCEAN_FCL = 1;
  DERIVED_SHIPMENT_TRANSPORT_MODE_OCEAN_NON_FCL = 2;
  DERIVED_SHIPMENT_TRANSPORT_MODE_TRUCK_FTL = 3;
  DERIVED_SHIPMENT_TRANSPORT_MODE_TRUCK_LTL = 4;
  DERIVED_SHIPMENT_TRANSPORT_MODE_AIR = 5;
  DERIVED_SHIPMENT_TRANSPORT_MODE_BARGE = 6;
}

// Roles representing Flexport's involvement in this shipment.
message DerivedShipmentRoles {
  oneof main_freight_role {
    flexport.executioncoordinator.executionoffering.v1.AirRole air_role = 1;
    flexport.executioncoordinator.types.enums.v1.OceanFclRole ocean_fcl_role = 2;
    flexport.executioncoordinator.executionoffering.v1.OceanNonFclRole ocean_non_fcl_role = 3;
    flexport.executioncoordinator.executionoffering.v1.TruckingOnlyRole trucking_only_role = 4;
  }
  flexport.executioncoordinator.executionoffering.v1.AuxiliaryTruckingRole origin_trucking_role = 5;
  flexport.executioncoordinator.executionoffering.v1.AuxiliaryTruckingRole destination_trucking_role = 6;
  flexport.executioncoordinator.executionoffering.v1.ImportCustomsClearanceRole import_customs_clearance_role = 7;
  flexport.executioncoordinator.executionoffering.v1.ExportCustomsClearanceRole export_customs_clearance_role = 8;
  flexport.executioncoordinator.executionoffering.v1.HkExportTradeDeclarationExecutionOffering hk_export_trade_declaration_role = 9;
  flexport.executioncoordinator.executionoffering.v1.InsuranceRole insurance_role = 10;
  flexport.executioncoordinator.executionoffering.v1.CarbonOffsetRole carbon_offset_role = 11;
  flexport.executioncoordinator.executionoffering.v1.ImporterSecurityFilingRole importer_security_filing_role = 12;
}

// Represents an HS code and associated descriptions for a product on this shipment.
message DerivedShipmentProductInfo {
  // The formal HS code, e.g. "8394.57"
  string hs_code = 1;
  // Client-provided description for the products falling under this HS code.
  string description = 2;
  // Description in native language of export country.
  string localized_export_description = 3;
  // Two-digit country code for the HS code.
  string country_code = 4;
}

// Information about one block placed on this shipment by Compliance.
// ShipmentBlockedState must be BLOCKED to be in this list, so that field is not included.
message DerivedShipmentBlock {
  // Enum of which service and cause led to the block status change.
  flexport.executioncoordinator.types.enums.v1.ShipmentBlockedReason reason = 1;
  // A presentable description of this block.
  string explanation = 2;
  // The parent/originating entity on which Compliance screened and found an entity fid to block.
  string originating_entity_fid = 3;
  // Other context data that hasn't been standardized into protos.
  string context_json = 4;
  // The entity which the block is against.
  string entity_fid = 5;
}

// Represents the overall status of blocked/unblocked, as well as a list of all ShipmentBlockedStatuses.
message DerivedShipmentComplianceInfo {
  // If the shipment is BLOCKED/UNBLOCKED
  // Since the DerivedShipment is the snapshot of the current cumulative state, we're doing these two things:
  //   1. Not storing any Statuses where the blocked_status is UNBLOCKED
  //   2. If a shipment is blocked for Reason X ("DPS Hit") for Originating Entity Y ("Employee Fred"),
  //      and then an update comes in with UNBLOCKED state and the same Reason and Originating Entity,
  //      we will remove the block entry from the list.
  // So this field should be equal to:
  //    blocks.count > 0 ? BLOCKED : UNBLOCKED
  flexport.executioncoordinator.types.enums.v1.ShipmentBlockedState blocked_state = 1;
  // More detail on all of the blocks currently applied to this shipment.
  // Updates with status UNBLOCKED will not be stored on DerivedShipment.
  repeated DerivedShipmentBlock blocks = 2;
}

// Represents the availability of tracking data for the shipment. See the following ActiveRecord model in the monolith:
// engines/client_app_shipment_visibility_engine/app/constants/client_app_shipment_visibility_engine/container_verification_statuses.rb
// and the included comment:
// > List of statuses from https://docs.google.com/document/d/1MecdGr77Pm4V3y8OcguyzrE5GK2IzBfzqaLWq3K_txs/edit#heading=h.hm92fblm7xco
// > New Complete status from https://docs.google.com/document/d/1Z_fSnyaY2JinDNU1rNaHZmVSjjMEG8qB0xzja3sq2nY/edit?usp=sharing
enum DerivedShipmentTrackingStatus {
  DERIVED_SHIPMENT_TRACKING_STATUS_INVALID = 0;
  DERIVED_SHIPMENT_TRACKING_STATUS_IN_PROGRESS = 1;
  DERIVED_SHIPMENT_TRACKING_STATUS_VERIFIED = 2;
  DERIVED_SHIPMENT_TRACKING_STATUS_MANUAL_REVIEW = 3;
  DERIVED_SHIPMENT_TRACKING_STATUS_OUT_OF_NETWORK = 4;
  DERIVED_SHIPMENT_TRACKING_STATUS_COMPLETE = 5;
}

// Represent destination CFS inbound workflow state. See Design doc:
// https://docs.google.com/document/d/1r-xTOd7aAoNJQiBsdPS8pCxCI-Q0TshKKaTo4AnKnGA
// Next ID: 9
// DEPRECATED
message CfsInboundWorkflowState {
  bool confirmed_documents = 1;
  bool confirmed_planning = 2;
  bool confirmed_arrival_at_inland_railyard = 3;
  bool confirmed_arrival_at_port = 4;
  bool confirmed_availability_at_port_or_railyard = 5;
  bool confirmed_pickup = 6;
  bool confirmed_arrival_to_cfs = 7;
  bool confirmed_availability_at_cfs = 8;
}

// Shipment execution bill information related to ocean.
// See more at go/ec-bill-info.
message OceanBillInfo {
  repeated MasterBillOfLading master_bills_of_lading = 1;
  repeated HouseBillOfLading house_bills_of_lading = 2;
  repeated MasterHouseBillOfLading master_house_bills_of_lading = 3;
}

// Shipment execution bill information related to air.
// See more at go/ec-bill-info.
message AirBillInfo {
  repeated MasterAirWaybill master_air_waybills = 1;
  repeated HouseAirWaybill house_air_waybills = 2;
}

// Represents basic shipment execution data on the master bill of lading.
message MasterBillOfLading {
  // The fid of the master bill of lading entity, not the document id.
  string master_bill_of_lading_fid = 1;
  // The master air waybill number corresponding to the received document.
  string master_bill_of_lading_number = 2;
  // deprecated in favor of is_archived_or_deleted
  bool is_archived = 3 [deprecated = true];
  flexport.executioncoordinator.types.enums.v1.OceanMasterBillOfLadingTransmissionMode transmission_mode = 4;
  bool is_archived_or_deleted = 5;
  string release_document_fid = 6;
  flexport.executioncoordinator.types.enums.v1.OceanMasterBillOfLadingReleaseMethod release_method = 7;
  string updated_by_fid = 8;
  bool is_draft_approved = 9;
  string bill_number_source = 10;
  string created_by_fid = 11;
}

// Represents basic shipment execution data on the master house bill of lading.
message MasterHouseBillOfLading {
  // The fid of the master house bill of lading entity, not the document id.
  string master_house_bill_of_lading_fid = 1;
  // The master house bill number corresponding to the received document.
  string master_house_bill_of_lading_number = 2;
  flexport.executioncoordinator.types.enums.v1.MasterHouseBillOfLadingTransmissionMode transmission_mode = 3;
  bool is_archived_or_deleted = 4;
  string release_document_fid = 5;
}

// Represents basic shipment execution data on the master air waybill.
message MasterAirWaybill {
  // The fid of the master air waybill entity, not the document id.
  string master_air_waybill_fid = 1;
  // The master air waybill number corresponding to the received document.
  string master_air_waybill_number = 2;
  // deprecated in favor of is_archived_or_deleted
  bool is_archived = 3 [deprecated = true];
  flexport.executioncoordinator.types.enums.v1.MasterAirWaybillTransmissionMode transmission_mode = 4;
  bool is_archived_or_deleted = 5;
}

// Represents basic shipment execution data on the house bill of lading.
message HouseBillOfLading {
  // The fid of the house bill of lading entity, not the document id.
  string house_bill_of_lading_fid = 1;
  // The master air waybill number corresponding to the received document.
  string house_bill_of_lading_number = 2;
  // deprecated in favor of is_archived_or_deleted
  bool is_archived = 3 [deprecated = true];
  flexport.executioncoordinator.types.enums.v1.HouseBillOfLadingTransmissionMode transmission_mode = 4;
  bool is_archived_or_deleted = 5;
  // document for HBL with release type hold for telex
  string release_document_fid = 6;
  flexport.executioncoordinator.types.enums.v1.OceanHouseBillOfLadingReleaseType release_type = 7;
  google.protobuf.Timestamp original_document_printed = 8;
  // HBL final document
  string document_fid = 9;
  // document for HBL with release type mail copy
  string original_document_fid = 10;
  google.protobuf.Timestamp draft_approved_at = 11;
  string original_document_printed_by = 12;
}

// Represents basic shipment execution data on the master air waybill.
message HouseAirWaybill {
  // The fid of the house air waybill entity, not the document id.
  string house_air_waybill_fid = 1;
  // The house air waybill number corresponding to the received document.
  string house_air_waybill_number = 2;
  // deprecated in favor of is_archived_or_deleted
  bool is_archived = 3 [deprecated = true];
  flexport.executioncoordinator.types.enums.v1.HouseAirWaybillTransmissionMode transmission_mode = 4;
  bool is_archived_or_deleted = 5;
}

// Represents air export security details
// See Design doc: https://docs.google.com/document/d/1paMG71eg8fqCVrKHM8PZHUmqPEqhWP_GCpJ-2aAVb9w
message DerivedShipmentAirExportCompliance {
  oneof security_program_details {
    flexport.executioncoordinator.types.regulatedagent.v1.RegulatedAgentEuDetails regulated_agent_eu_details = 1; // Shared with EOSE definition
  }
}

// Represents shipment address known status event_details
message ShipmentAddressKnownStatus {
  flexport.executioncoordinator.types.enums.v1.KnownShipperStatus known_shipper_status = 1;
  flexport.executioncoordinator.types.enums.v1.CargoScreeningStatus cargo_screening_status = 2;
  string created_by_fid = 3;
}
