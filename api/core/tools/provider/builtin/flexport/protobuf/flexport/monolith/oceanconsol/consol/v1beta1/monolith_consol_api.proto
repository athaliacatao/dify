// TEAM: perseus

syntax = "proto3";

package flexport.monolith.oceanconsol.consol.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "MonolithConsolApiProto";
option java_package = "com.flexport.monolith.oceanconsol.consol.v1beta1";
option ruby_package = "Flexport::Monolith::OceanConsol::Consol::V1Beta1";

// API for updating consol data in the monolith.
service MonolithConsolAPI {
  // Update a consol from consol-planning-manager.
  rpc UpdateConsol(UpdateConsolRequest) returns (UpdateConsolResponse);

  rpc GetConsol(GetConsolRequest) returns (GetConsolResponse);

  rpc GetAllConsolShipmentIds(GetAllConsolShipmentIdsRequest) returns (GetAllConsolShipmentIdsResponse);
}

message GetConsolRequest {
  repeated string supply_shipment_fids = 1;
}

message GetConsolResponse {
  repeated ConsolInfo consols = 1;
}

message GetAllConsolShipmentIdsRequest {

}

message GetAllConsolShipmentIdsResponse {
  repeated int32 shipment_ids = 1;
}

message ConsolInfo {
  string consol_fid = 1;
  string supply_shipment_fid = 2;
  repeated string shipment_fids = 3;
  repeated string lcl_shipment_fids = 4;
  repeated string frontloaded_shipment_fids = 5;
}

message UpdateConsolRequest {
  oneof input {
    BindDemandShipmentsInput bind_input = 1;
    DetachDemandShipmentsInput detach_input = 2;
    MoveDemandShipmentsInput move_input = 3;
  }

  string user_fid = 4;
}

message BindDemandShipmentsInput {
  string supply_shipment_fid = 1;
  repeated string demand_shipment_fids = 2;
}

message DetachDemandShipmentsInput {
  string supply_shipment_fid = 1;
  repeated string demand_shipment_fids = 3;
}

message MoveDemandShipmentsInput {
  string original_supply_shipment_fid = 1;
  string target_supply_shipment_fid = 2;
  repeated string demand_shipment_fids = 3;
}

message UpdateConsolResponse {
  bool success = 1;
}
