// TEAM: unified_subledger

syntax = "proto3";

package flexport.usl.archive.v1beta1;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "CommercialentityProto";
option java_package = "com.flexport.usl.archive.v1beta1";
option ruby_package = "Flexport::USL::Archive::V1Beta1";

// CommercialEntityDto defines a commercial entity to be archived.
message CommercialEntityDto {
  string fid = 1;
  string entity_name = 2;
  repeated EntityType entity_types = 3;
  repeated string related_fids = 5;
  map<string, string> metadata = 4;
  // Time at which this commercial entity was updated / this entity version was created
  google.protobuf.Timestamp updated_at_time = 6;
  string lineage_id = 98;
  string record_id = 99;
}

// A commercial entity can have several types (e.g. can be both a client as well as a supplier)
enum EntityType {
  ENTITY_TYPE_INVALID = 0;
  ENTITY_TYPE_INTERNAL = 1;
  ENTITY_TYPE_CLIENT = 2;
  ENTITY_TYPE_SUPPLIER = 3;
}
