// TEAM: trucking_planning

syntax = "proto3";

package flexport.truckingplanning.carrieroverridelog.v1beta1;

import "flexport/executioncoordinator/executionplan/v1/planning_process.proto";
import "flexport/executioncoordinator/types/enums/v1/execution_task_params_case.proto";
import "flexport/monolith/trucking/delivery_order/v1/delivery_order.proto";

option java_multiple_files = true;
option java_outer_classname = "CarrierOverrideLogProto";
option java_package = "com.flexport.truckingplanning.carrieroverridelog.v1beta1";

message CarrierOverrideLog {
  //
  // Identifier for the entity.
  uint64 id = 1;
  //
  // Identifier of user who performed the override
  string user_fid = 2;
  //
  // Identifier of the shipment.
  string shipment_fid = 3;
  //
  // Execution task fid
  string execution_task_fid = 4;
  //
  // Execution task params case (drayage vs. trucking direct vs. trucking consol etc.)
  flexport.executioncoordinator.types.enums.v1.ExecutionTaskParamsCase execution_task_params_case = 5;
  //
  // Identifier for the carrier before the override
  string original_carrier_fid = 6;
  //
  // Identifier for the carrier after the override
  string new_carrier_fid = 7;
  //
  // Identifier for delivery order, if present.
  uint64 delivery_order_id = 8;
  //
  // Delivery order status, if present.
  flexport.monolith.trucking.delivery_order.v1.DeliveryOrderStatus delivery_order_status = 9;
  //
  // Planning process - source of the override (should only be processes triggered by
  // manual user override through a UI.)
  flexport.executioncoordinator.executionplan.v1.PlanningProcess planning_process = 10;
  //
  // Override reason
  CarrierOverrideReason reason = 11;
  //
  // Reason explanation, only present if override_reason is "OTHER".
  string reason_explanation = 12;
}

// Reason that may be selected for the carrier override. It is important to note
// that most of these reasons are actually "invalid", but we are tracking them to
// identify when operators are motivated by these reasons.
enum CarrierOverrideReason {
  CARRIER_OVERRIDE_REASON_INVALID = 0;
  CARRIER_OVERRIDE_REASON_PARTNER_TO_CONSIGNEE = 1;
  CARRIER_OVERRIDE_REASON_CLIENT_REQUIREMENT = 2;
  CARRIER_OVERRIDE_REASON_CARRIER_PERFORMANCE = 3; // aka POOR_CARRIER_SERVICE
  CARRIER_OVERRIDE_REASON_GO_PREFERENCE = 4 [deprecated = true];
  CARRIER_OVERRIDE_REASON_CARRIER_REQUEST_MORE_VOLUME = 5 [deprecated = true];
  CARRIER_OVERRIDE_REASON_DEDICATED_ROUTING_FOR_OTP = 6 [deprecated = true];
  CARRIER_OVERRIDE_REASON_OTHER = 7 [deprecated = true];

  CARRIER_OVERRIDE_REASON_CARRIER_REJECTED_DO = 8;
  CARRIER_OVERRIDE_REASON_SHIPMENT_CANCELED_DELAYED = 9;
  CARRIER_OVERRIDE_REASON_NEED_TO_ADD_REMOVE_LEGS = 10;
  CARRIER_OVERRIDE_REASON_INTEGRATION_ISSUE = 11;
  CARRIER_OVERRIDE_REASON_CONSOLIDATION_PLANNING = 12;
  CARRIER_OVERRIDE_REASON_ONTIME_PICKUP_NEED_ALTERNATIVE = 13;
  CARRIER_OVERRIDE_REASON_ONTIME_DELIVERY_NEED_ALTERNATIVE = 14;
  CARRIER_OVERRIDE_REASON_WRONG_CARRIER_SELECTED_SPECIAL_EQUIPMENT = 15;
  CARRIER_OVERRIDE_REASON_WRONG_CARRIER_SELECTED_HAZMAT = 16;
  CARRIER_OVERRIDE_REASON_WRONG_CARRIER_SELECTED_INSURANCE = 17;
  CARRIER_OVERRIDE_REASON_WRONG_CARRIER_OUTSIDE_SERVICE_AREA = 18;
  CARRIER_OVERRIDE_REASON_NOT_ASSIGNED_BY_ALLOCATION_TOOL = 19;
}
