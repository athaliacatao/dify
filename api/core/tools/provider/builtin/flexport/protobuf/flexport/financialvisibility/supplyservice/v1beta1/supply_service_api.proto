// TEAM: cost_capture

syntax = "proto3";

package flexport.financialledger.supplyservice.v1beta1;

import "flexport/financialvisibility/details/v1beta1/details.proto";
import "flexport/financialvisibility/ingestion/relatedrecord/v1beta1/related_record.proto";
import "flexport/financialvisibility/rates/v1beta1/rates.proto";
import "flexport/financialvisibility/supplyservice/details/v1beta1/details.proto";
import "flexport/financialvisibility/supplyservice/rates/v1beta1/rates.proto";
import "flexport/financialvisibility/supplyservice/v1beta1/supply_service.proto";
import "flexport/financialvisibility/utils/v1beta1/utils.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "SupplyServiceApiProto";
option java_package = "com.flexport.financialledger.supplyservice.v1beta1";
option ruby_package = "Flexport::FinancialLedger::SupplyService::V1Beta1";

// FinancialLedger SupplyServiceAPI.
service SupplyServiceAPI {
  // Register a SupplyService with FinancialLedger.
  rpc Register(RegisterRequest) returns (RegisterResponse);
  // Upsert a SupplyService to FinancialLedger. The endpoint attempts to find an existing Supply Service by given
  // reference(s). If a unique Supply Service is found, it updates (provided) Supply Service details and returns it.
  // Otherwise a new Supply Service is created and returned.
  rpc Upsert(UpsertRequest) returns (UpsertResponse);
  // The endpoint attempts to find a unique existing Supply Service by given reference(s).
  rpc Find(FindRequest) returns (FindResponse);
  // Retrieve Details for a SupplyService from FinancialLedger.
  rpc RetrieveDetails(RetrieveDetailsRequest) returns (RetrieveDetailsResponse);
  // Update Details for a SupplyService in FinancialLedger.
  rpc UpdateDetails(UpdateDetailsRequest) returns (UpdateDetailsResponse);
  // Update Rates for a SupplyService in FinancialLedger.
  rpc UpdateRates(UpdateRatesRequest) returns (UpdateRatesResponse);
  // Calculate and return costs for a SupplyService from FinancialLedger.
  rpc CalculateCosts(CalculateCostsRequest) returns (CalculateCostsResponse);
  // Retrieve s single SupplyService by filters.
  rpc RetrieveBy(RetrieveByRequest) returns (RetrieveByResponse);
  // Retrieves all ingestion related records matching filters.
  rpc RetrieveRelatedRecords(RetrieveRelatedRecordsRequest) returns (RetrieveRelatedRecordsResponse);
  // Retrieve supply service cost
  rpc RetrieveLineItemCosts(RetrieveLineItemCostsRequest) returns (RetrieveLineItemCostsResponse);
  // Cancel a SupplyService with FinancialLedger.
  rpc Cancel(CancelRequest) returns (CancelResponse);
}

// Request to register a supply service.
message RegisterRequest {
  flexport.financialledger.supplyservice.v1beta1.SupplyMode supply_mode = 1;
  string name = 2;
  string supply_service_type = 3;
  string supply_service_identifier = 4;
  google.protobuf.StringValue contract_type = 5;
  google.protobuf.StringValue contract_identifier = 6;
  string vendor_company_fid = 7;
}

// Response to a supply service registration request.
message RegisterResponse {
  oneof result {
    financialledger.supplyservice.v1beta1.SupplyServiceDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}

// Request to upsert a supply service.
message UpsertRequest {
  reserved 5, 6, 9; // external id+selector were not as a separate message.
  int32 vendor_company_id = 1;
  flexport.financialledger.supplyservice.v1beta1.SupplyMode supply_mode = 2;
  flexport.financialledger.supplyservice.v1beta1.SupplyServiceRegistrationDetailsDto supply_service_registration_details = 3;
  repeated flexport.financialledger.supplyservice.v1beta1.ExternalReferenceParametersDto external_reference_parameters = 4;
  flexport.financialledger.supplyservice.v1beta1.ExternalIdentifier identifier = 7;
  // Consolidation Benefit Ratio,
  // https://flexport.atlassian.net/wiki/spaces/EN/pages/2246869006/Consolidation+Benefit+Ratio+CBR
  google.protobuf.FloatValue consolidation_benefit_ratio = 8;
  flexport.financialledger.supplyservice.v1beta1.Category category = 10;
  google.protobuf.FloatValue utilization_factor = 11;
}

// Response to a supply service upsert request.
message UpsertResponse {
  oneof result {
    financialledger.supplyservice.v1beta1.SupplyServiceDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}

// Request to find a supply service.
message FindRequest {
  reserved 1;
  google.protobuf.Int32Value vendor_company_id = 5;
  flexport.financialledger.supplyservice.v1beta1.SupplyMode supply_mode = 2;
  repeated flexport.financialledger.supplyservice.v1beta1.ExternalReferenceParametersDto external_reference_parameters = 4;
}

// Response to a supply service find request.
message FindResponse {
  oneof result {
    financialledger.supplyservice.v1beta1.SupplyServiceDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}

// Request to retrieve details for a supply service.
message RetrieveDetailsRequest {
  string supply_service_id = 1;
  google.protobuf.Timestamp as_of_time = 2;
}

// Response for a supply service details retrieval request.
message RetrieveDetailsResponse {
  oneof result {
    financialledger.supplyservice.details.v1beta1.DetailsDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}

// Request to update details for a supply service.
message UpdateDetailsRequest {
  string supply_service_id = 1;
  map<string, financialledger.details.v1beta1.DetailValueDto> details = 2;
  google.protobuf.Timestamp versioned_at_time = 3;
}

// Response to a supply service details update request.
message UpdateDetailsResponse {
  oneof result {
    financialledger.supplyservice.details.v1beta1.DetailsDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}

// Request to update rates for a supply service.
message UpdateRatesRequest {
  string supply_service_id = 1;
  repeated financialledger.rates.v1beta1.RateItemDto rate_items = 2;
  google.protobuf.Timestamp versioned_at_time = 3;
}

// Response to a supply service rates update request.
message UpdateRatesResponse {
  oneof result {
    rates.v1beta1.RatesDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}

// Request to calculate costs for a supply service.
message CalculateCostsRequest {
  string supply_service_id = 1;
  google.protobuf.Timestamp as_of_time = 2;
}

// Response for a supply service costs calculation request.
message CalculateCostsResponse {
  oneof result {
    financialledger.supplyservice.v1beta1.SupplyServiceCostsDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}

// Request to retrieve a single SupplyService by filters.
message RetrieveByRequest {
  financialledger.supplyservice.v1beta1.SupplyServiceFiltersDto filters = 1;
}

// Response to a SupplyService retrieval by filters request.
message RetrieveByResponse {
  financialledger.supplyservice.v1beta1.SupplyServiceDto result = 1;
}

// Request to RelatedRecord retrieval by filters.
message RetrieveRelatedRecordsRequest {
  string supply_service_id = 1;
  financialledger.ingestion.relatedrecord.v1beta1.RelatedRecordFiltersDto filters = 2;
}

// Response to a RelatedRecord retrieval by filters request.
message RetrieveRelatedRecordsResponse {
  financialledger.ingestion.relatedrecord.v1beta1.RelatedRecordsDto result = 1;
}

message RetrieveLineItemCostsRequest {
  int32 supply_service_id = 1;
  CostType cost_type = 2;
}

message RetrieveLineItemCostsResponse {
  financialvisibility.v1beta1.ErrorResult failure_result = 1;
  repeated RetrieveLineItemCost cost_items = 2;
}

enum CostType {
  COST_TYPE_INVALID = 0;
  COST_TYPE_EXPECTED = 1;
  COST_TYPE_ACTUAL = 2;
}

message RetrieveLineItemCost {
  sint64 amount_micros = 1;
  sint64 amount_micros_usd = 2;
  string currency_code = 3;
  string charge_code_fid = 4;
  flexport.financialledger.supplyservice.v1beta1.Category category = 5;
}

message CancelRequest {
  int32 supply_service_id = 1;
  flexport.financialledger.supplyservice.v1beta1.SupplyMode supply_mode = 2;
}

message CancelResponse {
  oneof result {
    financialledger.supplyservice.v1beta1.SupplyServiceDto success_result = 1;
    financialvisibility.v1beta1.ErrorResult failure_result = 2;
  }
}
