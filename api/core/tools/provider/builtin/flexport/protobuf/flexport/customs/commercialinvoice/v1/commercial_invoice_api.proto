// TEAM: customs_platform

syntax = "proto3";

package flexport.customs.commercialinvoice.v1;

import "flexport/customs/commercialinvoice/v1/commercial_invoice.proto";

option java_multiple_files = true;
option java_outer_classname = "CommercialInvoiceApiProto";
option java_package = "com.flexport.customs.commercialinvoice.v1";
option ruby_package = "Flexport::Customs::CommercialInvoice::V1";

service CommercialInvoiceAPI {
  rpc ListInvoices(ListInvoicesRequest) returns (ListInvoicesResponse) {
    option deprecated = true;
  }
  
  rpc ArchiveCommercialInvoices(ArchiveCommercialInvoicesRequest) returns (ArchiveCommercialInvoicesResponse);
}

message ListInvoicesRequest {
  // filter parameters
  repeated string document_fids = 1;
}

message ListInvoicesResponse {
  repeated CommercialInvoice commercial_invoices = 1;
}

message ArchiveCommercialInvoicesRequest {
  // we expect customs commercial invoice fids in the form of: flx::customs:commercial-invoice:<uuid>
  repeated string commercial_invoice_fids = 1;
  string archived_by_fid = 2;
}

message ArchiveCommercialInvoicesResponse {
  repeated Error errors = 1;
}

message Error {
  string field = 1;
  string message = 2;
}
