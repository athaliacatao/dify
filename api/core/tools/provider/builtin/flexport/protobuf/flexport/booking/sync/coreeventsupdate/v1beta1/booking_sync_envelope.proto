// TEAM: bookings

syntax = "proto3";

package flexport.booking.sync.coreeventsupdate.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "BookingSyncEnvelopeProto";
option java_package = "com.flexport.booking.sync.coreeventsupdate.v1beta1";
option ruby_package = "Flexport::Booking::Sync::CoreEventsUpdate::V1Beta1";

import "flexport/booking/sync/operations/v1beta1/core_booking_created.proto";
import "flexport/booking/sync/operations/v1beta1/core_booking_deleted.proto";
import "flexport/booking/sync/operations/v1beta1/core_booking_template_created.proto";
import "flexport/booking/sync/operations/v1beta1/core_booking_template_deleted.proto";
import "flexport/booking/sync/operations/v1beta1/core_booking_template_updated.proto";
import "flexport/booking/sync/operations/v1beta1/core_booking_updated.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// A Kinesis event which encapsulates model changes from core, either booking template or booking.
message BookingSyncEnvelope {
  //TODO: add Pair<String, Timestamp> to indicate sequence of event happening
  // Trace ID for datadog tracing
  google.protobuf.StringValue trace_id = 1;
  // metadata of parent datadog span
  map<string, string> propagation_headers = 2;
  // timestamp when the message is sent from core
  google.protobuf.Timestamp generated_at_time = 3;
  oneof entity {
    flexport.booking.sync.operations.v1beta1.CoreBookingCreated core_booking_created = 11;
    flexport.booking.sync.operations.v1beta1.CoreBookingUpdated core_booking_updated = 12;
    flexport.booking.sync.operations.v1beta1.CoreBookingDeleted core_booking_deleted = 13;
    flexport.booking.sync.operations.v1beta1.CoreBookingTemplateCreated core_booking_template_created = 14;
    flexport.booking.sync.operations.v1beta1.CoreBookingTemplateUpdated core_booking_template_updated = 15;
    flexport.booking.sync.operations.v1beta1.CoreBookingTemplateDeleted core_booking_template_deleted = 16;
  }
}
