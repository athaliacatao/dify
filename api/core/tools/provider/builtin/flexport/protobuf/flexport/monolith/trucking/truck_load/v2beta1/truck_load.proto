// TEAM: trucking

syntax = "proto3";

package flexport.monolith.trucking.truck_load.v2beta1;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "TruckLoadProto";
option java_package = "com.flexport.monolith.trucking.truckload.v2beta1";
option ruby_package = "Flexport::Monolith::Trucking::TruckLoad::V2Beta1";

// Part of Trucking::TruckLoad needed by other NISes
message TruckLoad {
  string fid = 1;
  // target dispatch date
  google.protobuf.Timestamp dispatch_date = 2;
  string overhead_device_number = 3;
  string trailer_number = 4;
  TruckLoadPlanningStatus planning_status = 5;
  TruckLoadTruckType truck_type = 6;
  TruckLoadRouteType route_type = 7;
  TruckLoadTruckCapacity truck_capacity = 8;
  string carrier_company_id = 9;
  string partner_id = 10;
  RouteNode origin_node = 11;
  RouteNode destination_node = 12;
}

enum TruckLoadPlanningStatus {
  TRUCK_LOAD_PLANNING_STATUS_INVALID = 0;
  TRUCK_LOAD_PLANNING_STATUS_PLANNING = 1;
  TRUCK_LOAD_PLANNING_STATUS_READY_TO_LOAD = 2;
}

enum TruckLoadRouteType {
  TRUCK_LOAD_ROUTE_TYPE_INVALID = 0;
  TRUCK_LOAD_ROUTE_TYPE_LINEHAUL = 1;
  TRUCK_LOAD_ROUTE_TYPE_POINT_TO_POINT = 2;
  TRUCK_LOAD_ROUTE_TYPE_MILK_RUN = 3;
  TRUCK_LOAD_ROUTE_TYPE_SWEEP = 4;
  TRUCK_LOAD_ROUTE_TYPE_LTL = 5;
}

enum TruckLoadTruckType {
  TRUCK_LOAD_TRUCK_TYPE_INVALID = 0;
  TRUCK_LOAD_TRUCK_TYPE_FIFTY_THREE_FOOT_DRY_VAN = 1;
  TRUCK_LOAD_TRUCK_TYPE_BOX_TRUCK = 2;
  TRUCK_LOAD_TRUCK_TYPE_STRAIGHT_TRUCK = 3;
  TRUCK_LOAD_TRUCK_TYPE_SPRINTER_VAN = 4;
}

message TruckLoadTruckCapacity {
  double max_weight_in_kg = 1;
  double max_volume_in_cubic_meters = 2;
  int32 max_pallets = 3;
  double max_ci_value = 4;
}

enum TruckLoadWarehouseStatus {
  TRUCK_LOAD_WAREHOUSE_STATUS_INVALID = 0;
  TRUCK_LOAD_WAREHOUSE_STATUS_LOADING = 1;
  TRUCK_LOAD_WAREHOUSE_STATUS_READY_FOR_PICKUP = 2;
  TRUCK_LOAD_WAREHOUSE_STATUS_DEPARTED = 3;
}

message RouteNode {
  RouteNodeType route_node_type = 1;
  string id = 2;
}

enum RouteNodeType {
  ROUTE_NODE_TYPE_INVALID = 0;
  ROUTE_NODE_TYPE_TERMINAL_OR_CFS = 1;
  ROUTE_NODE_TYPE_ZONE = 2;
}
