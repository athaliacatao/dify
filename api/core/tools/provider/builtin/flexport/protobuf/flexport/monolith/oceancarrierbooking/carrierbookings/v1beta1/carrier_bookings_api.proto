// TEAM: kingsroad

syntax = "proto3";

package flexport.monolith.oceancarrierbooking.carrierbookings.v1beta1;

import "flexport/monolith/oceancarrierbooking/carrierbookings/v1beta1/carrier_booking.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "CarrierBookingsApiProto";
option java_package = "com.flexport.monolith.oceancarrierbooking.carrierbookings.v1beta1";
option ruby_package = "Flexport::Monolith::OceanCarrierBooking::CarrierBookings::V1Beta1";

// This API will be deprecated soon in favor of OEX NIS, please do not add anything here.
service CarrierBookingsAPI {
  // Find carrier booking by carrier booking fid.
  rpc FindCarrierBookingByFid(FindCarrierBookingByFidRequest) returns (FindCarrierBookingByFidResponse) {
    option deprecated = true;
  }

  // Get all carrier bookings of a shipment.
  rpc ListCarrierBookingsByExecutionTaskFid(ListCarrierBookingsByExecutionTaskFidRequest) returns (ListCarrierBookingsByExecutionTaskFidResponse) {
    option deprecated = true;
  }

  // Find carrier booking by document fid.
  rpc FindCarrierBookingByDocumentableFid(FindCarrierBookingByDocumentableFidRequest) returns (FindCarrierBookingByDocumentableFidResponse) {
    option deprecated = true;
  }
}

message FindCarrierBookingByFidRequest {
  string fid = 1;
}

message FindCarrierBookingByFidResponse {
  CarrierBooking carrier_booking = 1;
}

message ListCarrierBookingsByExecutionTaskFidRequest {
  string execution_task_fid = 1;
  // Filter to only active carrier bookings. Default if not defined: true
  google.protobuf.BoolValue active = 2;
}

message ListCarrierBookingsByExecutionTaskFidResponse {
  repeated CarrierBooking carrier_bookings = 1;
}
message FindCarrierBookingByDocumentableFidRequest {
  string documentable_fid = 1;
}

message FindCarrierBookingByDocumentableFidResponse {
  CarrierBooking carrier_booking = 1;
}
