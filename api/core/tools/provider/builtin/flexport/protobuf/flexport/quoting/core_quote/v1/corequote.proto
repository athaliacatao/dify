// TEAM: quoting

syntax = "proto3";

package flexport.quoting.corequote.v1;

option java_multiple_files = true;
option java_outer_classname = "CorequoteProto";
option java_package = "com.flexport.quoting.corequote.v1";
option ruby_package = "Flexport::Quoting::CoreQuote::V1";

import "flexport/payments/exchangerate/v1/exchange_rate_dto.proto";
import "google/protobuf/wrappers.proto";

// CoreQuote describes a quote coming from monolith ruby code.
message CoreQuote {
  uint64 id = 1;
  uint64 shipment_id = 2;
  uint64 carrier_id = 3;
  string rate_expires_at = 4;
  string submitted_at = 5;
  uint64 submitted_by_id = 6;
  string accepted_at = 7;
  string created_at = 8;
  string updated_at = 9;
  DaysOfWeek closing_days = 10;
  DaysOfWeek departure_days = 11;
  int32 transit_time_min = 12;
  int32 transit_time_max = 13;
  string name = 14;
  string transportation_mode = 15;
  string message = 16;
  string responded_at = 17;
  string freight_service = 18;
  string pre_carriage_by = 19;
  string deprecated_place_of_receipt = 20;
  bool intermodal = 21;
  string quoted_chargeable_weight = 22;
  string quoted_calculated_weight = 23;
  string quoted_chargeable_volume = 24;
  string quoted_calculated_volume = 25;
  string deleted_at = 26;
  uint64 acceptor_id = 27;
  string voided_at = 28;
  uint64 carrier_contract_id = 29;
  string other_booking_instructions = 30;
  uint64 fmc_port_of_unloading_group_id = 31;
  uint64 departure_port_group_id = 32;
  string base_currency_code = 33;
  uint64 import_customs_broker_id = 34;
  string first_accepted_at = 35;
  // Renamed from: autogenerated_uuid
  string autogenerated_id = 36;
  string main_service_type = 37;
  uint64 origin_agent_id = 38;
  uint64 destination_agent_id = 39;
  uint64 trucking_broker_id = 40;
  string acceptance_confirmed_at = 41;
  uint64 frozen_exchange_rate_id = 42;
  uint64 original_quote_id = 43;
  // creation metadata, passed as an opaque JSON blob
  string meta = 44;
  uint64 export_customs_agent_id = 45;
  uint64 import_customs_agent_id = 46;
  string chargeable_volume = 47;
  string chargeable_weight = 48;
  CoreFreightPartner freight_partner = 49;
  // REMOVED: CoreCargo cargo = 50;
  CoreTransitTime quote_transit_time = 51;
  CoreTransitTime predicted_quote_transit_time = 52;
  CoreServiceBundle service_bundle = 53;
  CoreAddress inland_port = 54;
  CoreAddress origin_port = 55;
  CoreAddress destination_port = 56;
  repeated CoreAddress via_ports = 57;
  repeated CoreLineItem items = 58;
  payments.exchangerate.v1.ExchangeRateDto exchange_rate = 59;
}

// DaysOfWeek is a bitmask 1/0 for each day.
message DaysOfWeek {
  int32 sunday = 1;
  int32 monday = 2;
  int32 tuesday = 3;
  int32 wednesday = 4;
  int32 thursday = 5;
  int32 friday = 6;
  int32 saturday = 7;
}

// CoreAddress is a DBID-only reference to a core Network::Address.
message CoreAddress {
  uint64 id = 1;
}

// CoreCompany is a DBID-only reference to a core ::CompanyEntity.
message CoreCompany {
  uint64 id = 1;
}

// CoreFreightPartner is a DBID-only reference to a core ::FreightPartner.
message CoreFreightPartner {
  uint64 id = 1;
}

// CoreTransitTime contains end-to-end travel time predictions.
message CoreTransitTime {
  int32 origin_days = 1;
  int32 port_to_port_days = 2;
  int32 destination_days = 3;
  int32 origin_dwell_days = 4;
  int32 destination_dwell_days = 5;
  // Renamed from: data_source
  string source = 6;
  string cargo_ready_date = 7;
  int32 consolidation_days = 8;
  int32 deconsolidation_days = 9;
}

// CoreServiceBundle contains ProvidedServices for each marketplace type.
message CoreServiceBundle {
  repeated CoreProvidedService air_services = 1;
  repeated CoreProvidedService carbon_offset_services = 2;
  repeated CoreProvidedService destination_cartage_services = 12;
  repeated CoreProvidedService origin_cartage_services = 3;
  repeated CoreProvidedService destination_services = 4;
  repeated CoreProvidedService destination_drayage_services = 13;
  repeated CoreProvidedService origin_drayage_services = 5;
  repeated CoreProvidedService export_customs_services = 6;
  repeated CoreProvidedService import_customs_services = 7;
  repeated CoreProvidedService insurance_services = 8;
  repeated CoreProvidedService line_haul_services = 9;
  repeated CoreProvidedService ocean_fcl_services = 10;
  repeated CoreProvidedService ocean_lcl_services = 11;
  repeated CoreProvidedService origin_booking_services = 14;
}

// CoreProvidedService is reduced to only the UUID and serialization date.
message CoreProvidedService {
  // Renamed from: original_service_offering_uuid
  string original_service_offering_id = 1;
  string selected_date = 2;
  string direction = 3;
  string cached_offering_attributes = 4;
  repeated CoreCarrierPreference carrier_preferences = 5;
  repeated CoreBlacklistedCarrier blacklisted_carriers = 6;
}

// CoreCarrierPreference describes specific carriers requested by ops for the shipment.
message CoreCarrierPreference {
  uint32 order = 1;
  int64 carrier_id = 2;
  string contract_number = 3;
  string service_string = 4;
  string estimated_time_of_departure = 5;
}

// CoreBlacklistedCarrier are carriers that the client specifically requests not to use
// for the shipment.
message CoreBlacklistedCarrier {
  int64 carrier_id = 1;
}

// CoreItemCountDetails extends item-count information for (container x day) rates.
message CoreItemCountDetails {
  uint32 num_days = 1;
  uint32 num_containers = 2;
  CoreContainerDetails containers = 3;
}

// CoreContainerDetails is a mapping of container-type to (#containers, #days).
message CoreContainerDetails {
  CoreContainerDays twenty_ft = 1;
  CoreContainerDays forty_ft = 2;
  CoreContainerDays forty_ft_hc = 3;
  CoreContainerDays forty_five_ft_hc = 4;
}

// CoreContainerDays is a simple tuple of (#containers, #days).
message CoreContainerDays {
  uint32 num_days = 1;
  uint32 num_containers = 2;
}

// CoreItemTemplate identifies the ServiceItemTemplate from core.
message CoreItemTemplate {
  string category = 1;
  CoreCompany company = 2;
  string service_type = 3;
  string slug = 4;
}

// CoreLineItem is a single ServiceItem on the quote.
message CoreLineItem {
  string category = 1 [deprecated = true];
  string cost = 2;
  string cost_currency_code = 3;
  bool dormant = 5;
  uint64 freight_partner_id = 6;
  int32 item_count = 7;
  CoreItemCountDetails item_count_details = 8;
  string marketplace_service_type = 9;
  // REMOVED: repeated string original_service_charge_uuids = 10;
  // Renamed from: original_service_offering_uuid
  string original_service_offering_id = 11;
  string other_description = 12;
  string price = 13;
  string price_currency_code = 14;
  // charge is passed as an opaque JSON blob
  string charge = 15;
  string slug = 16 [deprecated = true];
  string source_from_quoting = 17;
  string subject_to_conditions = 18;
  bool user_editable = 19;
  CoreItemTemplate template = 20;
  string markup = 21;
  // The 3 properties below (sell_rate, charge_slug, tiered_markup) are sent back from Quoting NIS
  // but aren't part of the quote in the monolith (and aren't stored in the db). We need them while
  // we handle line item splitting, patitioning, and template assignment in Core.
  string sell_rate = 22;
  string charge_slug = 23;
  // Markup per tier (i.e., per container type).
  map<string, string> tiered_markup = 24;
  string charge_source = 25;
  string cost_rate_source = 26;
  string sell_rate_source = 27;
  google.protobuf.Int32Value subject_to_policy_type = 28;
  google.protobuf.StringValue subject_to_policy_id = 29;
  // Deprecating item_count
  string item_count_new = 30;
}
