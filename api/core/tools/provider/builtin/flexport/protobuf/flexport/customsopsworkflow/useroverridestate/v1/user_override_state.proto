// TEAM: sutro

syntax = "proto3";

package flexport.customsopsworkflow.useroverridestate.v1;

option java_multiple_files = true;
option java_outer_classname = "UserOverrideStateProto";
option java_package = "com.flexport.useroverridestate.v1";
option ruby_package = "Flexport::UserOverrideState::V1";

// Keep track of what customs tags have been overridden by users in the FF App and in Core.
// This override state will be keyed by shipment fid in the Customs Ops Workflow Service (COWS).
message UserOverrideState {
  // Capture the customs entry tag override state.
  OverrideState customs_entry_override_state = 1;
  // Capture the customs unloading tag override state.
  OverrideState customs_unloading_override_state = 2;
}

message OverrideState {
  // Represent the override state.
  bool is_overridden = 1;
  // Capture user attribution (if any).
  string last_modified_by = 2;
  OverrideEntryPoint override_entry_point = 3;
}

// Capture where the override occurred. If the entry point is FFA, then this was done by manually
// editing the customs execution task in the Route Details tab. If the entry point was Core, then
// this override was performed by directly changing the node tags in the route editor in Core left.
enum OverrideEntryPoint {
  OVERRIDE_ENTRY_POINT_INVALID = 0;
  OVERRIDE_ENTRY_POINT_FFA = 1;
  OVERRIDE_ENTRY_POINT_MONOLITH = 2;
}
