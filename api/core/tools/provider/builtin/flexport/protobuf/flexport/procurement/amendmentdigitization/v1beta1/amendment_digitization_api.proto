// TEAM: procurement

syntax = "proto3";

package flexport.procurement.amendmentdigitization.v1beta1;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "AmendmentDigitizationApiProto";
option java_package = "com.flexport.procurement.amendmentdigitization.v1beta1";
option ruby_package = "Flexport::Procurement::AmendmentDigitization::V1Beta1";

// API for fetching amendment digitizations.
service AmendmentDigitizationAPI {
  // Fetch the digitization for a given amendment.
  rpc GetAmendmentDigitization(GetAmendmentDigitizationRequest) returns (GetAmendmentDigitizationResponse);
}

message GetAmendmentDigitizationRequest {
  string contract_number = 1;
  string amendment_number = 2;
}

message GetAmendmentDigitizationResponse {
  // The digitization for the given amendment.
  optional AmendmentDigitization amendment_digitization = 1;
}

message AmendmentDigitization {
  optional google.protobuf.Timestamp available_at = 1; // The time at which the amendment was made available in Box.
  optional google.protobuf.Timestamp uploaded_at = 2; // The time at which the amendment was uploaded to Portrix.
  optional google.protobuf.Timestamp ingested_at = 3; // The time at which the amendment was digitzed in Portrix, but not yet validated.
  optional google.protobuf.Timestamp completed_at = 4; // The time at which the digitization was marked completed. (ingested and validated)
  Status status = 5; // The current status of the digitization.
}

enum Status {
  STATUS_INVALID = 0;
  STATUS_UNPROCESSED = 1;
  STATUS_WAITING_ON_INGESTION = 2;
  STATUS_WAITING_ON_CORRECTION = 3;
  STATUS_INGESTED = 4;
  STATUS_COMPLETE = 5;
}
