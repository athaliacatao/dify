// TEAM: document_intelligence

syntax = "proto3";

package flexport.transcription.events.v1beta1;

import "flexport/transcription/transcriptionservice/v1beta1/transcription_job.proto";

option java_multiple_files = true;
option java_outer_classname = "TranscriptionJobFailedProto";
option java_package = "com.flexport.transcription.events.v1beta1";
option ruby_package = "Flexport::Transcription::Events::V1Beta1";

// The possible states of this transcription.
enum TranscriptionFailure {
  TRANSCRIPTION_FAILURE_INVALID = 0;
  // When the provider is down.
  TRANSCRIPTION_FAILURE_PROVIDER_UNRESPONSIVE = 1;
  // When the provider errors or rejects request.
  TRANSCRIPTION_FAILURE_PROVIDER_RETURNED_ERROR_IN_REQUEST = 2;
  // If the job takes too long or extends past SLA.
  TRANSCRIPTION_FAILURE_JOB_TIMED_OUT = 3;
  // Provider returns an error while transcribing data.
  TRANSCRIPTION_FAILURE_PROVIDER_RETURNED_ERROR_IN_CALLBACK = 4;
  // Provider returns invalid transcribed data.
  TRANSCRIPTION_FAILURE_PROVIDER_RETURNED_INVALID_DATA = 5;
  // When conversion to normalized proto fails. 
  TRANSCRIPTION_FAILURE_NORMALIZED_CONVERSION_ERROR = 6;
}

// This is the object emitted to the transcription event log
// when the transcription job fails.
message TranscriptionJobFailed {
  // The reason why the job failed.
  TranscriptionFailure error = 1;
  // Information about the job.
  flexport.transcription.transcriptionservice.v1beta1.TranscriptionJob transcription_job = 2;
}
