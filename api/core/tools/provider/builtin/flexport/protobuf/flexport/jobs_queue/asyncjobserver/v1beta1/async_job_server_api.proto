// TEAM: service_platform

syntax = "proto3";

package flexport.jobsqueue.asyncjobserver.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "AsyncJobServerApiProto";
option java_package = "com.flexport.jobsqueue.asyncjobserver.v1beta1";
option ruby_package = "Flexport::JobsQueue::AsyncjobServer::V1Beta1";

import "flexport/jobs_queue/envelope/v1beta1/envelope.proto";

// The protocol for enqueuing async jobs through jobs queue server.
service AsyncJobServerAPI {
  // Pushes a job to the jobs queue server, which the server will asynchronously callback.
  // The server makes an HTTP callback.
  rpc PushHttpCallback(PushHttpCallbackRequest) returns (PushHttpCallbackResponse);
  // The server makes a gRPC callback.
  rpc PushGrpcCallback(PushGrpcCallbackRequest) returns (PushGrpcCallbackResponse);
}

// Push a HTTP callback to the jobs queue server. The jobs queue will asynchronously call back
// to your service with an HTTP request, and the envelope payload.
message PushHttpCallbackRequest {
  // Name of the calling service.
  string nis_name = 1;
  // The endpoint on the service to callback to.
  string endpoint = 2;
  // Only GET, PUT and POST methods are supported, unless a use case arises
  // to support other HTTP methods.
  enum HttpMethod {
    HTTP_METHOD_INVALID = 0;
    HTTP_METHOD_PUT = 1;
    HTTP_METHOD_POST = 2;
    HTTP_METHOD_GET = 3;
  }
  // The HTTP method to callback with.
  HttpMethod http_method = 3;
  // The payload (serialized as a json string) to callback with.
  // When passed with a GET request, the payload is sent as parameters.
  string payload = 4;
}

// Response if the jobs queue server successfully received the callback
// and pushed it to Sidekiq queue.
message PushHttpCallbackResponse {}

// Push a gRPC callback to the jobs queue server. The jobs queue will asynchronously call back
// to your service with an gRPC request, and the envelope payload.
message PushGrpcCallbackRequest {
  flexport.jobsqueue.envelope.v1beta1.Envelope envelope = 1;
}

// Response if the jobs queue server successfully received the callback
// and pushed it to Sidekiq queue.
message PushGrpcCallbackResponse {}
