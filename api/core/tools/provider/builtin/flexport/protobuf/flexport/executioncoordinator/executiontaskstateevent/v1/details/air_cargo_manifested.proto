// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.executiontaskstateevent.v1;

option java_multiple_files = true;
option java_outer_classname = "AirCargoManifestedProto";
option java_package = "com.flexport.executioncoordinator.executiontaskstateevent.v1";
option ruby_package = "Flexport::ExecutionCoordinator::ExecutionTaskStateEvent::V1";

import "flexport/os/v1/types/walltimedatetime/v1/wall_time_date_time.proto";

// The cargo has been manifested and is ready to fly on the specified flight.
// In air freight "Cargo iQ" jargon this event is abbreviated as "MAN".
message AirCargoManifested {
  //
  // Do not use. Use route_shape_leg_fid instead.
  string cargo_fid = 1 [deprecated = true];
  //
  // The airport the cargo will be flying from.
  string origin_port_fid = 2;
  //
  // The airport the cargo will be flying to.
  string destination_port_fid = 3;
  //
  // The carrier operating the flight.
  string carrier_fid = 4;
  //
  // The flight number, e.g. "UA123"
  string flight_number = 5;
  //
  // The time this flight is scheduled to depart.
  flexport.os.v1.types.walltimedatetime.v1.WallTimeDateTime scheduled_departure_time = 6;
  //
  // The time this flight is scheduled to arrive.
  flexport.os.v1.types.walltimedatetime.v1.WallTimeDateTime scheduled_arrival_time = 7;
  //
  // The time this flight is estimated to depart. May be different from the
  // scheduled departure time.
  flexport.os.v1.types.walltimedatetime.v1.WallTimeDateTime estimated_departure_time = 8;
  //
  // The time this flight is estimated to arrive. May be different from the
  // scheduled arrival time.
  flexport.os.v1.types.walltimedatetime.v1.WallTimeDateTime estimated_arrival_time = 9;
  //
  // The leg whose cargo has been manifested. If blank, this event applies
  // to all legs associated with the execution task.
  string route_shape_leg_fid = 10;
}
