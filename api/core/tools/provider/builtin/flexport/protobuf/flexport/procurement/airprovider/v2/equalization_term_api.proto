// TEAM: procurement

syntax = "proto3";

package flexport.procurement.airprovider.v2;

import "flexport/procurement/airprovider/v2/equalization_term.proto";

option java_multiple_files = true;
option java_outer_classname = "EqualizationTermApiProto";
option java_package = "com.flexport.procurement.airprovider.v2";
option ruby_package = "Flexport::Procurement::AirProvider::V2";

// This service is used to manage equalization terms.
service EqualizationTermAPI {
  rpc GetEqualizationTermsByPeriodFids(GetEqualizationTermsByPeriodFidsRequest) returns (GetEqualizationTermsByPeriodFidsResponse);
  rpc GetEqualizationTermsByContractIdentifier(GetEqualizationTermsByContractIdentifierRequest) returns (GetEqualizationTermsByContractIdentifierResponse);
}

message GetEqualizationTermsByPeriodFidsRequest {
  repeated string equalization_term_period_fids = 1;
}

message GetEqualizationTermsByPeriodFidsResponse {
  repeated EqualizationTerm equalization_terms = 1;
}

message GetEqualizationTermsByContractIdentifierRequest {
  string contract_identifier = 1;
  bool include_deleted = 2;
}

message GetEqualizationTermsByContractIdentifierResponse {
  repeated EqualizationTerm equalization_terms = 1;
}
