// TEAM: procurement

syntax = "proto3";

package flexport.procurement.oceanrates.entityevent.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "OceanFclRateEntityProto";
option java_package = "com.flexport.procurement.oceanrates.entityevent.v1beta1";
option ruby_package = "Flexport::Procurement::OceanRates::EntityEvent::V1Beta1";

import "flexport/os/v1/types/walltimedate/v1/wall_time_date.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

// Data eng entity for an Ocean FCL Procurement rate.
message OceanFclRateEntity {
  //
  // Identifier for the entity.
  string fid = 1;
  //
  // Total rate in micros (base freight + surcharges).
  int64 total_amount_micros = 2;
  string currency_code = 3;
  //
  // The contract number is also referred to as the tariff identifier.
  string contract_number = 4;
  RateStatus status = 5;
  google.protobuf.Timestamp created_time = 6;
  //
  // The date on which the latest applicable amendment was digitized/completed.
  // This represents when the rate was activated in our system which may occur
  // before or after the start of the validity period. This field allows us to
  // determine if a rate was available/known as of a given date.
  flexport.os.v1.types.walltimedate.v1.WallTimeDate active_from_date = 7;
  //
  // The date on or after which the rate is valid per the contract terms.
  flexport.os.v1.types.walltimedate.v1.WallTimeDate valid_from_date = 8;
  //
  // The date on or before which the rate is valid per the contract terms.
  flexport.os.v1.types.walltimedate.v1.WallTimeDate valid_to_date = 9;
  //
  // The 4-letter SCAC code of the service provider.
  string carrier_code = 10;
  //
  // The Core client ID of the named account in the contract.
  google.protobuf.Int64Value client_id = 11;
  //
  // Ports are identified by the 5-character UN/LOCODE standard.
  string origin_port = 12;
  string destination_port = 13;
  string via_origin_port = 14;
  string via_destination_port = 15;
  //
  // This is not standardized across Flexport, but provides a simplified way
  // to classify goods for the purpose of determining buy rate applicability.
  CommodityType commodity_type = 16;
  //
  // Free text description.
  string commodity_description = 17;
  //
  // ISO code.
  string container_type = 18;
  //
  // The freight rates and surcharges comprising the total rate.
  repeated LineItem line_items = 19;
}

// A rate for a line item level charge.
message LineItem {
  string name = 1;
  int64 amount_micros = 2;
  string currency_code = 3;
  LineItemType type = 4;
  PerUnit per_unit = 5;
}

// For now, we will only expose rates which have been activated
// (digitized and passed data quality checks).
enum RateStatus {
  RATE_STATUS_INVALID = 0;
  RATE_STATUS_ACTIVE = 1;
}

// Commodity type (only standardized within Procurement).
enum CommodityType {
  COMMODITY_TYPE_INVALID = 0;
  COMMODITY_TYPE_FREIGHT_ALL_KIND = 1;
  COMMODITY_TYPE_CONSOLIDATED_LOADS = 2;
  COMMODITY_TYPE_OTHER_NON_FAK_GOODS_NOS = 3;
}

// Line item type.
enum LineItemType {
  LINE_ITEM_TYPE_INVALID = 0;
  LINE_ITEM_TYPE_BASE_RATE = 1;
  LINE_ITEM_TYPE_SURCHARGE = 2;
}

// Rate applicable to unit.
enum PerUnit {
  PER_UNIT_INVALID = 0;
  PER_UNIT_BILL_OF_LADING = 1;
  PER_UNIT_CONTAINER = 2;
}
