// TEAM: visibility

syntax = "proto3";

package flexport.airmovement.flightschedule.v1;

option java_multiple_files = true;
option java_outer_classname = "FlightScheduleApiProto";
option java_package = "com.flexport.airmovement.flightschedule.v1";
option ruby_package = "Flexport::AirMovement::FlightSchedule::V1";

// API for fetching flight schedules.
service FlightScheduleAPI {
  // Returns a flight schedule.
  rpc GetFlightSchedule(GetFlightScheduleRequest) returns (GetFlightScheduleResponse);
}

message GetFlightScheduleRequest {
  string carrier_code = 1;
  string flight_number = 2;
  string departure_date = 3;
  string origin_port = 4;
  string destination_port = 5;
}

message GetFlightScheduleResponse {
  // Where we got this flight schedule from.
  enum FlightInformationSource {
    FLIGHT_INFORMATION_SOURCE_INVALID = 0;
    FLIGHT_INFORMATION_SOURCE_OAG = 1;
  }
  // An airport on a flight schedule.
  message FlightSchedulePort {
    string port_code = 1;
    string days_of_week = 2;
    string time_of_day = 3;
  }
  // A flight leg on a flight schedule.
  message FlightScheduleLeg {
    FlightSchedulePort departure = 1;
    FlightSchedulePort arrival = 2;
    string effective_from = 3;
    string effective_to = 4;
    string equipment_code = 5;
    string service_type_code = 6;
  }
  FlightInformationSource source = 1;
  string carrier_code = 2;
  string flight_number = 3;
  repeated FlightScheduleLeg legs = 4;
}
