// TEAM: customs_platform
syntax = "proto3";

package flexport.customs.declaration.gb.v1beta1;

import "flexport/customs/declaration/gb/v1beta1/addition_deduction.proto";
import "flexport/customs/declaration/gb/v1beta1/detail_additional_information.proto";
import "flexport/customs/declaration/gb/v1beta1/involved_party.proto";
import "flexport/customs/declaration/gb/v1beta1/package_type.proto";
import "flexport/customs/declaration/gb/v1beta1/previous_document.proto";
import "google/protobuf/wrappers.proto";
import "google/type/date.proto";
import "google/type/money.proto";

option java_multiple_files = true;
option java_package = "com.flexport.customs.declaration.gb.v1beta1";
option ruby_package = "Flexport::Customs::Declaration::GB::V1Beta1";

// ImportDeclarationItem describes an individual items on a UK import filing.
//
// For more information reference the CDS Declaration Completion Instructions for Imports:
// https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide
message ImportDeclarationItem {
  /*
     Group 1: Message Information (including Procedure Codes).
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-1-message-information-including-procedure-codes
  */

  // (3-digit) Goods Item Number.
  // [Data Element 1/6]
  uint32 goods_item_number = 1;

  // (4-digit) Procedure Code.
  // [Data Element 1/10]
  string procedure_code = 2;

  // (3-digit) Additional Procedure Code.
  // [Data Element 1/11]
  repeated string additional_procedure_code = 3;

  /*
     Group 2: References of Messages, Document, Certificates and Authorisations.
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-2-references-of-messages-document-certificates-and-authorisations
  */

  // References to previous documents.
  // This Data Element is present both on the header and individual line items.
  // [Data Element 2/1]
  repeated PreviousDocument previous_documents = 4;

  // [Data Element 2/2]
  repeated DetailAdditionalInformation additional_information = 5;

  // Documents produced, certificates and authorisations, additional references.
  // [Data Element 2/3]
  repeated AdditionalReference additional_references = 6;

  // Unique Consignment Reference. String with max 35 alphanumerics.
  // [Data Element 2/4]
  string ucr = 7;

  /*
     Group 3: Parties
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-3-parties
  */

  // [Data Element 3/1]
  optional InvolvedParty exporter = 8;

  // [Data Element 3/2]
  google.protobuf.StringValue exporter_eori = 9;

  // [Data Element 3/24]
  optional InvolvedParty seller = 10;

  // [Data Element 3/25]
  google.protobuf.StringValue seller_eori = 11;

  // [Data Element 3/26]
  optional InvolvedParty buyer = 12;

  // [Data Element 3/27]
  google.protobuf.StringValue buyer_eori = 13;

  // [Data Element 3/37]
  repeated AdditionalSupplyChainActorIdNumber additional_supply_chain_actor_ids = 14;

  // [Date Element 3/40]
  // Northern Ireland only.
  optional AdditionalFiscalReferencesIdNumber additional_fiscal_id = 15;

  /*
     Group 4: Valuation Information and Taxes
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-4-valuation-information-and-taxes
  */

  // [Data Element 4/3 to 4/8]
  TaxCalculation tax_calculation = 16;

  // [Data Element 4/9]
  repeated AdditionDeduction additions_deductions = 17;

  // [Data Element 4/13]
  google.protobuf.StringValue valuation_indicator = 18;

  // [Data Element 4/14]
  google.type.Money item_price = 19;

  // Valuation Method describes the method used to calculate the value of the goods.
  // There are six primary methods for determining the customs value under the WTO Valuation Agreement
  enum ValuationMethod {
    VALUATION_METHOD_INVALID = 0;
    VALUATION_METHOD_TRANSACTION_VALUE = 1;
    VALUATION_METHOD_TRANSACTION_VALUE_IDENTICAL_GOODS = 2;
    VALUATION_METHOD_TRANSACTION_VALUE_SIMILAR_GOODS = 3;
    VALUATION_METHOD_DEDUCTIVE = 4;
    VALUATION_METHOD_COMPUTED_VALUE = 5;
    VALUATION_METHOD_FALLBACK = 6;
  }

  // [Data Element 4/16]
  optional ValuationMethod valuation_method = 20;

  // [Data Element 4/17]
  google.protobuf.StringValue preference = 21;

  // Reserved for future use: Customs Value.
  // [Data Element 4/18]
  reserved 22;

  // Reserved for future use: Transport costs to the final destination.
  // [Data Element 4/19]
  reserved 23;

  /*
     Group 5: Dates, Times, Periods, Places, Countries and Regions.
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-5-dates-times-periods-places-countries-and-regions
  */

  // [Data Element 5/8]
  string destination_country_code = 24;

  // [Data Element 5/15]
  string origin_country_code = 25;

  // [Data Element 5/16]
  google.protobuf.StringValue preferential_origin_country_code = 26;

  /*
     Group 6: Goods Identification
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-6-goods-identification
  */

  // The net mass, expressed in kilograms, of the goods described in DE 6/8 (Description of Goods).
  // [Data Element 6/1]
  google.protobuf.FloatValue net_mass = 27;

  // [Data Element 6/2]
  google.protobuf.FloatValue supplementary_units = 28;

  // The gross mass, expressed in kilograms, for the specific item declared in DE 6/8 Description of Goods.
  // [Data Element 6/5]
  google.protobuf.FloatValue gross_mass = 29;

  // A description of the goods which is specific enough to allow the unambiguous identification, classification and examination of goods.
  // Max 512 chars.
  // [Data Element 6/8]
  string description_of_goods = 30;

  // The type of packaging used for the goods.
  // [Data Element 6/9 to 6/12]
  repeated Packaging packaging = 31;

  // CUS Code for Chemicals.
  // [Data Element 6/13]
  google.protobuf.StringValue cus_code = 32;

  // Commodity Code — Combined Nomenclature Code
  //
  // The first 6 digits of the code for the goods described in DE 6/8 Description of Goods
  // as set out in the UK Integrated Online Tariff or the Northern Ireland Online Tariff.
  //
  // [Data Element 6/14]
  string commodity_code_cn = 33;

  // Commodity Code: 2 digit TARIC code
  // [Data Element 6/15]
  google.protobuf.StringValue commodity_code_taric = 34;

  // Commodity Code: 4 digit TARIC Additional Code
  // [Data Element 6/16]
  google.protobuf.StringValue commodity_code_taric_additional = 35;

  // [Data Element 6/17]
  google.protobuf.StringValue national_additional_code = 36;

  /*
     Group 7: Transport Information (Modes, Means and Equipment)
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-7-transport-information-modes-means-and-equipment
  */

  // // [Data Element 7/10]
  repeated string container_id_numbers = 37;

  /*
     Group 8: Other Data Elements (Statistical Data, Guarantees and Tariff Related Data)
     https://www.gov.uk/government/publications/cds-uk-trade-tariff-volume-3-import-declaration-completion-guide/group-8-other-data-elements-statistical-data-guarantees-and-tariff-related-data
  */

  // [Data Element 8/1]
  string quota_number = 38;

  // [Data Element 8/5]
  string nature_of_transaction = 39;

  // The statistical value for the goods item in GBP (£ sterling), irrespective of the currency used in Data Element 4/14.
  // [Data Element 8/6]
  float statistical_value = 40;
}

// Documents produced, certificates and authorisations, additional references.
// [Data Element 2/3]
message AdditionalReference {
  string document_type = 1;
  string document_reference = 2;
  string document_status = 3;
  string document_reason = 4;
  string issuing_authority_name = 5;
  string measurement_unit = 6;
  uint32 quantity = 7;
  google.type.Date date_of_validity = 8;
}

message TaxCalculation {
  // Reserved for data element 4/3 to 4/7.
  // Note that data element 4/5 does not exist.
  reserved 1 to 4;

  enum MethodOfPayment {
    METHOD_OF_PAYMENT_INVALID = 0;

    // Immediate payment in cash.
    METHOD_OF_PAYMENT_A = 1;

    // Immediate payment by corporate credit card.
    METHOD_OF_PAYMENT_B = 2;

    // Immediate payment by cheque.
    METHOD_OF_PAYMENT_C = 3;

    // Not currently in use.
    METHOD_OF_PAYMENT_D = 4;

    // Deferred payment (deferment account).
    METHOD_OF_PAYMENT_E = 5;

    // Immediate payment by electronic credit transfer (faster payment, CHAPS, BACS).
    METHOD_OF_PAYMENT_H = 6;

    // Security deposit: immediate payment (cash deposit).
    METHOD_OF_PAYMENT_M = 7;

    // Security deposit: immediate payment (CDS Cash Account deposit).
    METHOD_OF_PAYMENT_N = 8;

    // Export refunds and/or CAP licence, security held by RPA.
    METHOD_OF_PAYMENT_O = 9;

    // Immediate payment from CDS Cash Account.
    METHOD_OF_PAYMENT_P = 10;

    // Security deposit: deferred payment (deferment account deposit).
    METHOD_OF_PAYMENT_R = 11;

    // Security Importers general guarantee account (self-representation).
    METHOD_OF_PAYMENT_S = 12;

    // Security Agent’s general guarantee account.
    METHOD_OF_PAYMENT_T = 13;

    // Security: Importers guarantee account – standing authority (direct/indirect representation).
    METHOD_OF_PAYMENT_U = 14;

    // Security: Importers guarantee account – individual/specific authority (direct/ indirect representation).
    METHOD_OF_PAYMENT_V = 15;

    // SASP.
    METHOD_OF_PAYMENT_X = 16;

    // Security Importers individual guarantee (e.g. C&E 250).
    METHOD_OF_PAYMENT_Z = 17;
  }

  repeated MethodOfPayment method_of_payment = 5;
}

// Packaging describes the type and number of packages.
// [Data Element 6/9 to 6/11]
message Packaging {
  // [Data Element 6/9]
  PackageType package_type = 1;

  // [Data Element 6/10]
  uint32 number_of_packages = 2;

  // Free text description of any marks and numbers on transport units or packages.
  // [Data Element 6/11]
  string shipping_marks = 3;
}
