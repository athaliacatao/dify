// TEAM: compliance

syntax = "proto3";

package flexport.compliance.form.rpc.v1beta1;

import "flexport/compliance/form/constant/v1beta1/form_status.proto";
import "flexport/compliance/form/constant/v1beta1/form_type.proto";
import "flexport/compliance/form/message/v1beta1/form_status_record.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "FormApiProto";
option java_package = "com.flexport.compliance.form.rpc.v1beta1";
option ruby_package = "Flexport::Compliance::Form::Rpc::V1Beta1";

// Form Api.
service FormAPI {
  // Request to create a new form.
  rpc CreateForm(CreateFormRequest) returns (CreateFormResponse);
  // Request to delete an existing form.
  rpc DeleteForm(DeleteFormRequest) returns (DeleteFormResponse);
  // Fetch all data for an existing form.
  rpc GetForm(GetFormRequest) returns (GetFormResponse);
  // Request the status of multiple forms.
  rpc GetFormStatus(GetFormStatusRequest) returns (GetFormStatusResponse);
  // Request to modify an existing form.
  rpc UpdateForm(UpdateFormRequest) returns (UpdateFormResponse);
  // Request to get a form from
  rpc GetFormByClientFid(GetFormByClientFidRequest) returns (GetFormByClientFidResponse);
}

// Request to get a form based of a client fid.
message GetFormByClientFidRequest {
  // The fid of the client/party filling out the form.
  string client_fid = 1;
}

// Response output for searching for a form by client fid.
message GetFormByClientFidResponse {
  // Return type of a generic form response.
  GetFormResponse response = 1;
}

// Request to create a new form of a given form type and form version.
message CreateFormRequest {
  // The fid of the client/party filling out the form.
  string client_fid = 1;
  // The type of form.
  flexport.compliance.form.constant.v1beta1.FormType form_type = 2;
  // The user responsible for creating this form.
  string created_by_fid = 3;
  // The date on which the customer can start the form.
  google.protobuf.Timestamp active_time = 4;
  // The date on which the form is no longer valid.
  google.protobuf.Timestamp expires_time = 5;
  // Prepopulate the form’s answers or data.
  string answers_json = 6;
}

// Request to create a new form of a given type and version.
message CreateFormResponse {
  // The fid of the newly created form.
  message CreateFormOutput {
    string form_fid = 1;
  }
  // A list of errors if the CreateNewForm request fails.
  message CreateFormError {
    repeated string errors = 1;
  }
  oneof result {
    CreateFormOutput success_result = 1;
    CreateFormError failure_result = 2;
  }
}

// Request to delete a form.
message DeleteFormRequest {
  // The fid fo the form you wish to delete.
  string form_fid = 1;
}

// Request Form Response.
message DeleteFormResponse {
  // The form was deleted.
  bool success = 1;
  // A list of errors if the DeleteForm request failed.
  repeated string errors = 2;
}

// Get all information about form by using a form fid.
message GetFormRequest {
  // The form fid.
  string form_fid = 1;
}

// Response of GetForm.
message GetFormResponse {
  // All data about the form.
  message GetFormOutput {
    // The fid for the form.
    string form_fid = 1;
    // The fid of the client/party filling out the form.
    string client_fid = 2;
    // The type of form.
    flexport.compliance.form.constant.v1beta1.FormType form_type = 3;
    // The time this event was created.
    google.protobuf.Timestamp created_time = 4;
    // The user responsible for creating this form.
    string created_by_fid = 5;
    // The status history of the form.
    repeated flexport.compliance.form.message.v1beta1.FormStatusRecord form_status = 6;
    // The date on which the customer can start the form.
    google.protobuf.Timestamp active_time = 7;
    // The date on which the form is no longer valid.
    google.protobuf.Timestamp expires_time = 8;
    // Prepopulate the form’s answers or data.
    string answers_json = 9;
    // The timestamp of the client’s last edit.
    google.protobuf.Timestamp client_last_edited_time = 10;
    // The user which submitted the form. Null if the form has not been completed.
    string submitted_by_fid = 11;
    // The automated or manual score associated with the form.
    double score = 12;
  }
  // A list of errors if the GetForm request fails.
  message GetFormError {
    repeated string errors = 1;
  }
  oneof result {
    GetFormOutput success_result = 1;
    GetFormError failure_result = 2;
  }
}

// Get all information about form by using a form fid.
message GetFormStatusRequest {
  // The form fids.
  repeated string form_fids = 1;
}

// Response of GetForm.
message GetFormStatusResponse {
  // All data about the form.
  message GetFormStatusOutput {
    // The current status and datetime the status was applied for a form fid.
    message FormStatusWithFid {
      // The Fid of the form.
      string form_fid = 1;
      // The status applied to the form.
      flexport.compliance.form.constant.v1beta1.FormStatus status = 2;
      // The timestamp the status was applied at.
      google.protobuf.Timestamp applied_time = 3;
    }
    repeated FormStatusWithFid form_status = 1;
  }
  // A list of errors if the GetForm request fails.
  message GetFormStatusError {
    repeated string errors = 1;
  }
  oneof result {
    GetFormStatusOutput success_result = 1;
    GetFormStatusError failure_result = 2;
  }
}

// Request to update the score associated with a form.
message UpdateFormRequest {
  // The fid for the form you wish to edit.
  string form_fid = 1;
  // Modify the date on which the customer can start the form.
  google.protobuf.Timestamp active_time = 2;
  // Modify the date on which the form is no longer valid.
  google.protobuf.Timestamp expires_time = 3;
  // Modify the form’s answers or data.
  string answers_json = 4;
  // Modify the timestamp of the client’s last edit.
  google.protobuf.Timestamp client_last_edited_time = 5;
  // Modify the user which submitted the form.
  string submitted_by_fid = 6;
}

// Request Form Response.
message UpdateFormResponse {
  // The form was updated.
  bool success = 1;
  // A list of errors if the UpdateForm request failed.
  repeated string errors = 2;
}
