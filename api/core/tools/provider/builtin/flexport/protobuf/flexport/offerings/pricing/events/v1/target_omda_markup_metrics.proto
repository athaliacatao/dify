// TEAM: revenue_management

syntax = "proto3";

package flexport.offerings.pricing.events.v1;

import "google/protobuf/timestamp.proto";
import "flexport/offerings/pricing/v1beta1/pricing.proto";

option java_multiple_files = true;
option java_outer_classname = "TargetOMDAMarkupMetricsProto";
option java_package = "com.flexport.offerings.pricing.v1beta1";

// Represents a collection of metrics that are used to track the performance of the GetTargetOmdaMarkup API.
// DS stands for Data Science.
message TargetOMDAMarkupMetrics {
  // The id of the shipment associated with the request
  optional string shipment_id = 1;
  // The id of the quote associated with the request
  optional string quote_id = 2;
  // The id of the pricing engine request associated with the request
  string pricing_engine_request_id = 3;
  // Deprecated The matching method of the pricing rule
  MatchingMethod matching_method = 4  [deprecated = true];
  // The target OMDA markup percent for the given freight type.
  // If specified 0.11 means 11% markup. 0.0973 means 9.73% markup.
  // If not set, it means a target OMDA markup could not be found and default value (0.0) should be treated as null.
  optional double target_omda_markup = 5;
  // The timestamp of the request
  google.protobuf.Timestamp request_timestamp = 6;
  // The target OMDA markup directly from the DS rule without any adjustments.
  optional double ds_omda_markup = 7;
  // The pricing segment of the DS rule. This will be free text for now
  optional string ds_pricing_segment = 8;
  // Deprecated: Use ds_pricing_rule_uuid instead.
  optional double ds_uuid = 9 [deprecated = true];
  // The unique identifier of the DS pricing rule.
  optional string ds_pricing_rule_uuid = 10;
  // The match level of the pricing rule.
  flexport.offerings.pricing.v1beta1.MatchLevel match_level = 11;
}

// Deprecated in favor of using the MatchLevel enum in pricing.proto
enum MatchingMethod {
  option deprecated = true;
  MATCHING_METHOD_INVALID = 0;
  // Exact indicated that the pricing engine was able to find a data science rule that exactly matches the input (all fields match).
  MATCHING_METHOD_EXACT = 1;
  // Fuzzy indicates that the pricing engine was able to find a data science rule that approximately matches the input (all fields match except for client id and/or client segment).
  MATCHING_METHOD_FUZZY = 2;
};
