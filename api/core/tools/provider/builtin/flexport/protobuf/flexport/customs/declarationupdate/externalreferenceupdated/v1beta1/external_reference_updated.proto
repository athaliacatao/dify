// TEAM: customs_platform

syntax = "proto3";

package flexport.customs.declarationupdate.externalreferenceupdated.v1beta1;

import "flexport/customs/declarationupdate/declarationtype/v1beta1/declaration_type.proto";

option java_multiple_files = true;
option java_outer_classname = "ExternalReferenceUpdatedProto";
option java_package = "com.flexport.customs.declarationupdate.externalreferenceupdated.v1beta1";
option ruby_package = "Flexport::Customs::DeclarationUpdate::ExternalReferenceUpdated::V1Beta1";

// The ExternalReferenceUpdated message is sent when the external reference of a
// declaration is updated in the external system. For example this event is
// emitted when the MRN of a declaration is updated in the external system.
message ExternalReferenceUpdated {
  // The Flexport ID of the shipment that the declaration is associated with.
  string shipment_fid = 1;
  // The Flexport ID of the required declaration that is associated with the
  // declaration in the external system.
  string required_declaration_fid = 2;
  // The type of the declaration.
  flexport.customs.declarationupdate.declarationtype.v1beta1.DeclarationType declaration_type = 3;
  string idempotency_id = 4;
  // The new external reference of the declaration in the external system.
  string external_reference = 5;
}
