// TEAM: kingsroad

syntax = "proto3";

package flexport.carrierintegrationmanager.mockservice.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "MockServiceApiProto";
option java_package = "com.flexport.carrierintegrationmanager.mockservice.v1beta1";
option ruby_package = "Flexport::CarrierIntegrationManager::MockService::V1Beta1";

service MockServiceAPI {
  rpc UpdateIntegration(UpdateIntegrationRequest) returns (UpdateIntegrationResponse);
}

message UpdateIntegrationRequest {
  string id = 1;
  Type type = 2;
  string payload = 3;
}

message UpdateIntegrationResponse {
  bool success = 1;
}

// Represents Carrier Integration Mock Service Response Type
enum Type {
  // The unspecified type.
  TYPE_INVALID = 0;

  // Carrier Booking
  TYPE_CARRIER_BOOKING = 1;

  // Carrier SI
  TYPE_CARRIER_SHIPPING_INSTRUCTION = 2;

  // Carrier VGM
  TYPE_CARRIER_VERIFIED_GROSS_MASS = 3;
}
