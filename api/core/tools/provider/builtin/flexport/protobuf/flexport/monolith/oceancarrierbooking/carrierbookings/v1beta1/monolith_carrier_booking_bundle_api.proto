// TEAM: kingsroad

syntax = "proto3";

package flexport.monolith.oceancarrierbooking.carrierbookings.v1beta1;

import "flexport/oex/carrierbookingbundle/v1beta1/carrier_booking_bundle.proto";

option java_multiple_files = true;
option java_outer_classname = "MonolishCarrierBookingBundleApiProto";
option java_package = "com.flexport.monolith.oceancarrierbooking.carrierbookings.v1beta1";
option ruby_package = "Flexport::Monolith::OceanCarrierBooking::CarrierBookings::V1Beta1";

service MonolithCarrierBookingBundleAPI {
  rpc PerformMonolithCarrierBookingPostJobs(PerformMonolithCarrierBookingPostJobsRequest) returns (PerformMonolithCarrierBookingPostJobsResponse);
  rpc PerformCopyScheduleAsyncJob(PerformCopyScheduleAsyncJobRequest) returns (PerformCopyScheduleAsyncJobResponse);
  rpc PerformWriteToMonolith(PerformWriteToMonolithRequest) returns (PerformWriteToMonolithResponse);
}

message PerformMonolithCarrierBookingPostJobsRequest {
  flexport.oex.carrierbookingbundle.v1beta1.CarrierBookingBundle carrier_booking_bundle = 1;
  string carrier_booking_fid = 2;
  string user_fid = 3;
  optional DetachCarrierBookingPostJob detach_carrier_booking_post_job = 4;
}

message PerformMonolithCarrierBookingPostJobsResponse {
  repeated string errors = 1;
}

message PerformCopyScheduleAsyncJobRequest {
  string shipment_fid = 1;
  string user_fid = 2;
}

message PerformCopyScheduleAsyncJobResponse {
  repeated string errors = 1;
}

message PerformWriteToMonolithRequest {
  string carrier_booking_fid = 1;
}

message PerformWriteToMonolithResponse {
  repeated string errors = 1;
}

message DetachCarrierBookingPostJob {
  string shipment_fid = 1;
}
