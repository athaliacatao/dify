// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.types.enums.v1;

option java_multiple_files = true;
option java_outer_classname = "DrayageWarehouseVisitTypeProto";
option java_package = "com.flexport.executioncoordinator.types.enums.v1";
option ruby_package = "Flexport::ExecutionCoordinator::Types::Enums::V1";

// The kind of visit the driver will make to a warehouse with a container.
enum DrayageWarehouseVisitType {
  // The visit type is unknown, or was not specified.
  DRAYAGE_WAREHOUSE_VISIT_TYPE_INVALID = 0;
  //
  // The driver brings full container to warehouse and waits while it is unpacked, then drives
  // away with the empty container the same day.
  DRAYAGE_WAREHOUSE_VISIT_TYPE_LIVE_UNLOAD = 1;
  //
  // The driver drops off a container and then leaves without picking up another container.
  // The container could be empty or full, but in the USA is typically full when dropped.
  DRAYAGE_WAREHOUSE_VISIT_TYPE_DROP = 2;
  //
  // The driver brings empty container to warehouse and waits while it is packed, then drives
  // away with the full container the same day.
  DRAYAGE_WAREHOUSE_VISIT_TYPE_LIVE_LOAD = 3;
  //
  // The driver arrives with no containers and then picks up container and leaves.
  // The container could be empty or full, but in the USA is typically empty when picked.
  DRAYAGE_WAREHOUSE_VISIT_TYPE_PICK = 4;
  //
  // The driver both (1) drops off a container and (2) picks up another container in the same visit.
  // Also called "drop and hook", but it seems like that language is more common with trailers.
  // Either container could be empty or full.
  DRAYAGE_WAREHOUSE_VISIT_TYPE_DROP_AND_PICK = 5;
}
