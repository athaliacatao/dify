// TEAM: unified_shipment_schedules

syntax = "proto3";

package flexport.executionperformance.scheduledelay.v1;

import "flexport/os/v1/types/walltimedateordatetime/v1/wall_time_date_or_date_time.proto";

option java_multiple_files = true;
option java_outer_classname = "ScheduleDelayApiProto";
option java_package = "com.flexport.executionperformance.scheduledelay.v1";
option ruby_package = "Flexport::ExecutionPerformance::ScheduleDelayApi::V1";

// API for interacting with Schedule Delay for a shipment's schedule.
service ScheduleDelayAPI {
  // Get the currently calculated Schedule Delay value for a shipment's schedule.
  rpc GetScheduleDelay(GetScheduleDelayRequest) returns (GetScheduleDelayResponse);
}

// Request for fetching schedule delay value for a specific Shipment or Execution Order.
message GetScheduleDelayRequest {
  oneof identifier {
    string shipment_fid = 1;
    string execution_order_fid = 2;
  }
}

// Response returning the specified shipment's schedule delay value.
message GetScheduleDelayResponse {
  int32 delay_hours = 1;
  int32 delay_days = 4;
  int32 end_to_end_transit_time_days = 5;
  flexport.os.v1.types.walltimedateordatetime.v1.WallTimeDateOrDateTime current_schedule_date_or_date_time = 2;
  flexport.os.v1.types.walltimedateordatetime.v1.WallTimeDateOrDateTime quoted_schedule_date_or_date_time = 3;
}
