// TEAM: iam_platform

syntax = "proto3";

package flexport.authorization.domainmapping.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "DomainMappingApiProto";
option java_package = "com.flexport.authorization.domainmapping.v1beta1";
option ruby_package = "Flexport::Authorization::DomainMapping::V1Beta1";

import "google/rpc/status.proto";
import "google/protobuf/timestamp.proto";

service DomainMappingAPI {
  // Synchronously adds a new domain mapping (idempotent; can be repeated)
  rpc AddDomainMapping (AddDomainMappingRequest) returns (AddDomainMappingResponse);

  // Synchronously removes an existing domain mapping (idempotent; can be repeated)
  rpc RemoveDomainMapping (RemoveDomainMappingRequest) returns (RemoveDomainMappingResponse);
}

message AddDomainMappingRequest {
  string from_fid = 1;
  string to_fid = 2;
  string slug = 3;
  google.protobuf.Timestamp expired_time = 4;
}

message AddDomainMappingResponse {
  google.rpc.Status status = 1;
}

message RemoveDomainMappingRequest {
  string from_fid = 1;
  string to_fid = 2;
  string slug = 3;
}

message RemoveDomainMappingResponse {
  google.rpc.Status status = 1;
}
