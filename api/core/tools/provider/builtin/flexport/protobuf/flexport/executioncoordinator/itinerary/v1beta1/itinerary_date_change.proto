// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.itinerary.v1beta1;

import "flexport/executioncoordinator/itinerary/v1beta1/itinerary.proto";
import "flexport/os/v1/types/walltimedateordatetime/v1/wall_time_date_or_date_time.proto";
import "flexport/schedulemanager/datechanges/v1/date_type.proto";
import "flexport/schedulemanager/datechanges/v1/transit_type.proto";

option java_multiple_files = true;
option java_outer_classname = "ItineraryDateChangeProto";
option java_package = "com.flexport.executioncoordinator.itinerary.v1beta1";
option ruby_package = "Flexport::ExecutionCoordinator::Itinerary::V1Beta1";

// Itinerary date changes are validated and confirmed by Itinerary and Schedule Manager.
message ItineraryDateChange {
  flexport.schedulemanager.datechanges.v1.TransitType transit_type = 1;
  flexport.schedulemanager.datechanges.v1.DateType date_type = 2;
  // This event only contains dates, not ranges. If you require a discharge/delivery range for your use-case, consider
  // using the full ItineraryUpdated event. Please also contact #forwarding-platform team about your use-case.
  flexport.os.v1.types.walltimedateordatetime.v1.WallTimeDateOrDateTime date_or_date_time = 3;
  string leg_fid = 4;
  flexport.executioncoordinator.itinerary.v1beta1.ItineraryDateMetadata metadata = 7;
}
