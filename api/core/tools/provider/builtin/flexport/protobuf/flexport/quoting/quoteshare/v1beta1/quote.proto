// TEAM: quoting

syntax = "proto3";

package flexport.quoting.quoteshare.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "QuoteProto";
option java_package = "com.flexport.quoting.quoteshare.v1beta1";
option ruby_package = "Flexport::Quoting::QuoteShare::V1Beta1";

import "flexport/os/v1/types/cargo/v1/cargo.proto";

// Quote contains all information relevant to a Quote that is displayed to a client.
message Quote {
  string fid = 1;
  string request_for_quotes_fid = 2;
  // eg Quote-123456
  string human_readable_id = 3;
  string created_at = 4;
  string expires_at = 5;
  string carrier_name = 6;
  // Transportation mode, eg Ocean - FCL, Air
  string transportation_mode = 7;
  // Service type, eg Port to port, port to door, etc
  string freight_service_type = 8;
  repeated string closing_days = 9;
  repeated string departure_days = 10;
  string precarriage_by = 11;
  // cargo information
  float total_volume = 12;
  flexport.os.v1.types.cargo.v1.CargoVolumeUnit total_volume_basis = 13;
  float total_weight = 14;
  flexport.os.v1.types.cargo.v1.CargoWeightUnit total_weight_basis = 15;
  // the path that the cargo will travel (ie which ports, warehouses, etc, will it travel through)
  repeated PathNode route = 16;
  TransitTime transit_time_estimate = 17;
  repeated LineItem line_items = 18;
  string subject_to = 19;
  string tonnes_of_co2 = 20;
  string provider_fid = 21;
  StatusInfo status = 22;
  string name = 23;
  string service_level = 24;
  string shipment_fid = 25;
  string exchange_rate_fid = 26;
  string base_currency_code = 27;
}

// Contains information about the current status, timestamp, and user who updated it.
message StatusInfo {
  // Status enum.
  enum Status {
    STATUS_INVALID = 0;
    STATUS_SHARED = 1;
    STATUS_ACCEPTED = 2;
    STATUS_VOIDED = 3;
    STATUS_EXPIRED = 4;
  }
  Status status = 1;
  string timestamp = 2;
  string user_fid = 3;
}

// Quote line item.
message LineItem {
  string title = 1;
  string category = 2;
  string price = 3;
  string price_currency_code = 4;
  float unit_count = 5;
  string unit_basis = 6;
  bool has_formula_rate = 7;
  bool is_base_charge = 8;
}

// Quote Transit Time estimate.
message TransitTime {
  int32 origin_days = 1;
  int32 port_to_port_days = 2;
  int32 destination_days = 3;
  int32 origin_dwell_days = 4;
  int32 destination_dwell_days = 5;
  string source = 6;
  string cargo_ready_date = 7 [deprecated = true];
  int32 consolidation_days = 8;
  int32 deconsolidation_days = 9;
  int32 transit_time_min = 10;
  int32 transit_time_max = 11;
  int32 point_estimate = 12 [deprecated = true];
}

// Node on the quoted route.
message PathNode {
  string fid = 1;
  string type_description = 2;
  string place_description = 3;
}
