// TEAM: service_platform

syntax = "proto3";

package flexport.jobsqueue.envelope.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "EnvelopeProto";
option java_package = "com.flexport.jobsqueue.envelope.v1beta1";
option ruby_package = "Flexport::JobsQueue::Envelope::V1Beta1";

import "google/protobuf/any.proto";

// An envelope wraps around an event to carry additional information about the
// event. This is the primary object published/consumed by the jobs queue.
// TODO: Add uuid to track events.
message Envelope {
  // Name of the calling service.
  string nis_name = 1;
  // A name for the current job.
  string job_name = 2;
  // The primary job payload.
  google.protobuf.Any payload = 3;
  // The git SHA of the current version of the code.
  string git_revision_sha = 4;
}

// This message is used as a placeholder to put in the payload
// field of envelope.
message FakeMessage {
  string test1 = 1;
  int32 test2 = 2;
  bool test3 = 3;
}
