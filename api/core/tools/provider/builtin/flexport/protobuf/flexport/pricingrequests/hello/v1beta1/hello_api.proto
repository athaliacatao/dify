// TEAM: pricing_opportunities

syntax = "proto3";

package flexport.pricingrequests.hello.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "HelloApiProto";
option java_package = "com.flexport.pricingrequests.hello.v1beta1";
option ruby_package = "Flexport::PricingRequests::Hello::V1Beta1";

// TODO: All services require a comment that contains at least one complete sentence.
service HelloAPI {
  // Here we'll make sure everything is nice and hooked up. We'll also add some logging statements, and some DataDog incrementing so we can validate all that is working
  rpc Hello(HelloRequest) returns (HelloResponse);
  // Here we'll test the call out to the monolith gRPC service from this service.
  rpc HelloCore(HelloCoreRequest) returns (HelloCoreResponse);
  // We'll always raise an exception inside here, we want to make sure Sentries are being raised and routed to the correct places. Also test error logging
  rpc BigYikes(BigYikesRequest) returns (BigYikesResponse);
}

message HelloRequest {
  string message = 1;
}

message HelloResponse {
  string message = 1;
}

message HelloCoreRequest {
  string message = 1;
}

message HelloCoreResponse {
  string message = 1;
}

message BigYikesRequest {
  string message = 1;
}

message BigYikesResponse {
  string message = 1;
}
