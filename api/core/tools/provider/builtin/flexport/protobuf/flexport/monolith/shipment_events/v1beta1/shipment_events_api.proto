// TEAM: perseus

syntax = "proto3";

package flexport.monolith.shipment_events.v1beta1;

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "ShipmentEventsApiProto";
option java_package = "com.flexport.monolith.shipment_events.v1beta1";
option ruby_package = "Flexport::Monolith::ShipmentEvents::V1Beta1";

// This is the API for services to interact with ShipmentEvents.
// Production readiness: https://docs.google.com/document/d/1mOTPU7yJD3jN479lHcx5l6CqK2vgKzYL4WnSFg6JY4Y/edit?usp=sharing
service ShipmentEventsAPI {
  // Create shipment_event.
  rpc CreateShipmentEvent(CreateShipmentEventRequest) returns (CreateShipmentEventResponse);
  // delete shipment event
  rpc DeleteShipmentEvent(DeleteShipmentEventRequest) returns (DeleteShipmentEventResponse);
}

message CreateShipmentEventRequest {
  string user_fid = 1;
  string shipment_fid = 3;
  string slug = 2;
  string delivery_fid = 4;
  google.protobuf.Timestamp occured_at = 5;
  repeated string notify_company_fids = 6;
  string leg_fid = 7;
  string container_fid = 8;
  bool is_exception = 9;
  // This is intended to support fields that are only relevant for particular
  // shipment event types. You must update the controller to support the
  // keys you use in this map.
  // https://github.flexport.io/flexport/flexport/blob/master/monorail/modules/trade/app/communications_grpc/shipment_events/shipment_events_controller.rb
  map<string, string> parameters = 10;
}

message CreateShipmentEventResponse {
  string shipment_event_fid = 1;
}

message DeleteShipmentEventRequest {
  string shipment_event_fid = 1;
  string user_fid = 2;
}

message DeleteShipmentEventResponse {}
