// TEAM: trucking

syntax = "proto3";

package flexport.monolith.truckingprocurement.v1beta1;

import "flexport/network/v1beta1/address.proto";
import "google/protobuf/timestamp.proto";
import "google/type/money.proto";

option java_multiple_files = true;
option java_outer_classname = "LinehaulCostEstimationApiProto";
option java_package = "com.flexport.monolith.truckingprocurement.v1beta1";
option ruby_package = "Flexport::Monolith::TruckingProcurement::V1Beta1";

// API for estimated linehaul and estimated final mile trucking (FTL & LTL) costs to be used during air planning
service LinehaulCostEstimationAPI {
  // Get estimated costs for direct and linehaul moves for the given shipment parameters
  rpc GetEstimatedTruckingCosts(GetEstimatedTruckingCostsRequest) returns (GetEstimatedTruckingCostsResponse);
}

message GetEstimatedTruckingCostsRequest {
  string origin_fid = 1;
  string destination_fid = 2;
  int32 pallet_count = 3;
  google.protobuf.Timestamp pickup_date = 4;
  // Stringified version of the BigDecimal, eg "2.20".
  string weight = 5;
}

message GetEstimatedTruckingCostsResponse {
  repeated GetEstimatedTruckingCostItem linehaul_estimates = 1;
  TruckingMoveEstimate direct_ltl_estimate = 2;
  TruckingMoveEstimate direct_ftl_estimate = 3;
}

message GetEstimatedTruckingCostItem {
  LinehaulMoveEstimate linehaul_estimate = 1;
  TruckingMoveEstimate ltl_estimate = 2;
  TruckingMoveEstimate ftl_estimate = 3;
}

message LinehaulMoveEstimate {
  network.v1beta1.Address origin = 1;
  network.v1beta1.Address destination = 2;
  string weight = 3;
  google.type.Money total_cost = 4;
  string pickup_day = 5;
  string delivery_day = 6;
  int32 transit_days = 7;
}

message TruckingMoveEstimate {
  network.v1beta1.Address origin = 1;
  network.v1beta1.Address destination = 2;
  int32 transit_days = 3;
  google.type.Money total_cost = 4;
  google.protobuf.Timestamp pickup_date = 5;
}
