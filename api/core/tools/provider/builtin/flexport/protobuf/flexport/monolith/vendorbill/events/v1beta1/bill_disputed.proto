// TEAM: billing

syntax = "proto3";

package flexport.monolith.vendorbill.events.v1beta1;

import "flexport/monolith/vendorbill/v1beta1/vendor_bill.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "BillDisputedProto";
option java_package = "com.flexport.monolith.vendorbill.events.v1beta1";
option ruby_package = "Flexport::Monolith::VendorBill::Events::V1Beta1";

// Event emitted when a VendorBill is sent back from in_core back to pending.
message BillDisputed {
  flexport.monolith.vendorbill.v1beta1.VendorBill vendor_bill = 1;
  google.protobuf.Timestamp disputed_at_time = 2;
  google.protobuf.StringValue disputed_by_fid = 3;
  google.protobuf.StringValue dispute_reason = 4;
}
