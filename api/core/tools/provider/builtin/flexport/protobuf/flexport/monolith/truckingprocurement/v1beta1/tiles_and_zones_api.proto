// TEAM: trucking

syntax = "proto3";

package flexport.monolith.truckingprocurement.v1beta1;

import "flexport/monolith/truckingprocurement/v1beta1/tiles_and_zones.proto";
import "flexport/network/v1beta1/address.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "TilesAndZones";
option java_package = "com.flexport.monolith.truckingprocurement.v1beta1";
option ruby_package = "Flexport::Monolith::TruckingProcurement::V1Beta1";

// interface
service TruckingTilesAndZonesAPI {
  rpc GetZonesForTileKeys(GetZonesForTileKeysRequest) returns (GetZonesForTileKeysResponse);
  rpc GetZonesForTileFids(GetZonesForTileFidsRequest) returns (GetZonesForTileFidsResponse);
  rpc GetZonesForZoneKeys(GetZonesForZoneKeysRequest) returns (GetZonesForZoneKeysResponse);
  rpc GetZonesForZoneFids(GetZonesForZoneFidsRequest) returns (GetZonesForZoneFidsResponse);
  rpc GetZonesForAddress(GetZonesForAddressRequest) returns (GetZonesForAddressResponse);
  rpc ValidateTruckingAddress(ValidateTruckingAddressRequest) returns (ValidateTruckingAddressResponse);
}

// request models
message GetZonesForTileKeysRequest {
  google.protobuf.StringValue country_code = 1;
  google.protobuf.BoolValue fuzzy_search = 2;
  ZoneFilterOptions filter_options = 3;
  repeated string tile_keys = 4;
}
message GetZonesForTileFidsRequest {
  ZoneFilterOptions filter_options = 1;
  repeated string tile_fids = 2;
}
message GetZonesForZoneKeysRequest {
  google.protobuf.BoolValue fuzzy_search = 1;
  ZoneFilterOptions filter_options = 2;
  repeated string zone_keys = 3;
}
message GetZonesForZoneFidsRequest {
  repeated string zone_fids = 1;
}
message GetZonesForAddressRequest {
  google.protobuf.BoolValue fuzzy_search = 1;
  // this is assumed to have been validated
  network.v1beta1.Address address = 2;
  ZoneFilterOptions filter_options = 3;
}
message ValidateTruckingAddressRequest {
  // this will validate presence and match
  // of the address information relevant to
  // the tile/zone, but not the validity of
  // the whole address itself
  network.v1beta1.Address address = 1;
}

// response models
message GetZonesForTileKeysResponse {
  repeated MatchedZonesWithTile matches = 1;
}
message GetZonesForTileFidsResponse {
  repeated MatchedZonesWithTile matches = 1;
}
message GetZonesForZoneKeysResponse {
  repeated MatchedZone matches = 1;
}
message GetZonesForZoneFidsResponse {
  repeated MatchedZone matches = 1;
}
message GetZonesForAddressResponse {
  oneof matches {
    MatchedZonesWithTile tile_and_zones = 1;
    MatchedZone zone = 2;
    AddressMatchFailReason fail_reason = 3;
  }
}
message ValidateTruckingAddressResponse {
  oneof match {
    Zone zone = 1;
    Tile tile = 2;
    AddressMatchFailReason fail_reason = 3;
  }
  MatchOutcome outcome = 4;
}
