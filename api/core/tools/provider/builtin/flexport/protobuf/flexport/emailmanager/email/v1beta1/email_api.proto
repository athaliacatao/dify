// TEAM: perseus

syntax = "proto3";

package flexport.emailmanager.email.v1beta1;

import "flexport/emailmanager/email/v1beta1/email.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "EmailApiProto";
option java_package = "com.flexport.emailmanager.email.v1beta1";
option ruby_package = "Flexport::EmailManager::Email::V1Beta1";

// Main API for interacting with Email entities.
// Please read API developer guide https://flexport.atlassian.net/wiki/spaces/EN/pages/2678981182/Email+Manager+API+Developer+Guide
service EmailAPI {
  // Find a specific email by fid.
  rpc GetEmail(GetEmailRequest) returns (GetEmailResponse);
  // Search emails by filter criteria.
  rpc ListEmails(ListEmailsRequest) returns (ListEmailsResponse);
  // Send an email based on input
  rpc SendEmail(SendEmailRequest) returns (SendEmailResponse);
  // Log an email from core (internal-only API, do not use).
  rpc LogEmail(LogEmailRequest) returns (LogEmailResponse);
  // given templateFid or emailType, get the template by fid or default template by emailType. extract required variable names from subject&htmlBody&plainBody.
  rpc GetTemplatePlaceholders(GetTemplatePlaceholdersRequest) returns (GetTemplatePlaceholdersResponse);
  // given templateFid or emailType along with variables, get the interpolated email subject&html_body&plain_body.
  rpc GetInterpolatedEmail(GetInterpolatedEmailRequest) returns (GetInterpolatedEmailResponse);
  // Create an email template
  rpc CreateEmailTemplate(CreateEmailTemplateRequest) returns (CreateEmailTemplateResponse);
  // Retrieve an email, get the template by fid or default template by emailType
  rpc GetEmailTemplate(GetEmailTemplateRequest) returns (GetEmailTemplateResponse);
}

// The request for GetEmail.
message GetEmailRequest {
  string fid = 1;
  // if the response should include raw HTML email body (excluded by default)
  bool include_body = 2;
  // if the response should include tracking_events (excluded by default)
  bool include_tracking_events = 3;
  // if the response should include plain text body (excluded by default)
  bool include_plain_body = 4;
}

// The response for GetEmail.
message GetEmailResponse {
  Email email = 1;
}

// The request for ListEmails.
message ListEmailsRequest {
  // whether to include email body in the response (excluded by default because it can have a large size)
  bool include_body = 1;
  // results must have any of these email types
  repeated string email_types = 2;

  LabelFilter label_filter = 3;
  // TimeRangeFilter time_range_filter
  reserved 4;
  EmailDirection email_direction = 5;

  // if the response should include tracking_events (excluded by default)
  bool include_tracking_events = 6;

  // if the response should include plain text body (excluded by default)
  bool include_plain_body = 7;

  // Default page size is 100, if it is not set or 0.
  int32 page_size = 200;
  // Start from the first page, if it not set or empty.
  string page_token = 201;
}

// With this, you can filter emails by labels
message LabelFilter {
  // filter entries are connected with AND, e.g. label1 = value1 AND label2 = value2.
  map<string, LabelValue> filters = 1;
}

// With this, you can filter emails by time range
message TimeRangeFilter {
  // if set, select emails created after this time, inclusive.
  google.protobuf.Timestamp after_time = 1;
  // if set, select emails created before this time, exclusive.
  google.protobuf.Timestamp before_time = 2;
}

enum EmailDirection {
  // zero enum value is reserved by the style guide
  EMAIL_DIRECTION_INVALID = 0;
  // outbound emails only
  EMAIL_DIRECTION_OUTBOUND = 1;
  // inbound emails only
  EMAIL_DIRECTION_INBOUND = 2;
  // include both
  EMAIL_DIRECTION_BOTH = 3;
}

// The response for ListEmails.
message ListEmailsResponse {
  repeated Email emails = 1;
  string next_page_token = 2;
}

// The request for LogEmail.
message LogEmailRequest {
  EmailInput input = 1;
}

// Input for logging an email.
message EmailInput {
  string email_type = 1;
  string subject = 2;
  string body = 3;
  string from_address = 4;
  string reply_to_address = 5;
  repeated string to_addresses = 6;
  repeated string cc_addresses = 7;
  repeated string bcc_addresses = 8;
  bool is_outbound = 9;
  map<string, LabelValue> labels = 10;
  repeated Attachment attachments = 11;
  string context = 12;
  string created_by_fid = 13;
  EmailContact from_contact = 14;
  EmailContact reply_to_contact = 15;
  repeated EmailContact to_contacts = 16;
  repeated EmailContact cc_contacts = 17;
  repeated EmailContact bcc_contacts = 18;
  string idempotency_key = 19;
}

// The response for LogEmail.
message LogEmailResponse {
  string fid = 1;
}

// Input for sending an email.
message SendEmailInput {
  string email_type = 1;
  EmailContact from_contact = 2;
  EmailContact reply_to_contact = 3;
  repeated EmailContact to_contacts = 4;
  repeated EmailContact cc_contacts = 5;
  repeated EmailContact bcc_contacts = 6;

  oneof main_part_input {
    PrecalculatedEmailInput precalculated_email_input = 7;
    ParameterizedEmailInput parameterized_email_input = 8;
  }

  map<string, LabelValue> labels = 10;
  repeated AttachmentInput attachments = 11;
  string context = 12;
  string created_by_fid = 13;
  string idempotency_key = 14;

  string reply_to_email_fid = 15;
}

message PrecalculatedEmailInput {
  string subject = 1;
  string text_body = 2;
  string html_body = 3;
}

message ParameterizedEmailInput {
  string template_fid = 1;
  map<string, string> variables = 2;
}

// Metadata of an attached file, it may have either file_object_fid or document_fid, check these fields on your own.
message AttachmentInput {
  // Non-empty if stored in Storage Service. Please see FileObjectsAPI.
  string file_object_fid = 2;
  // Non-empty if stored in Monolith Document. Please see MonolithDocumentsAPI.
  string document_fid = 3;
  // Non-empty if attachment is from a downloadUrl
  AttachedFileInput attached_file = 4;
}

message AttachedFileInput {
  string file_name = 1;
  // Caution: Since total size of attachments could not exceed 6MB, email manager will trim oversized attachments
  // automatically and send their origin download URLs directly to recipients. Hence gRPC callers should guarantee
  // the correctness of the following two points:
  // 1. URL expiration time: the suggesting setting is 7 days
  // 2. URL should be publicly accessible
  string download_url = 2;
}

// The request for SendEmail
message SendEmailRequest {
  SendEmailInput input = 1;
  bool testing_mode = 2;
}

// The response for SendEmail.
message SendEmailResponse {
  string fid = 1;
}

message GetTemplatePlaceholdersRequest {
  string template_fid = 1;
  string email_type = 2;
}

message GetTemplatePlaceholdersResponse {
  repeated string placeholders = 1;
}

message GetInterpolatedEmailRequest {
  string email_type = 1;
  string template_fid = 2;
  map<string, string> variables = 10;
}

message GetInterpolatedEmailResponse {
  string subject = 1;
  string html_body = 2;
  string plain_body = 3;
}

message CreateEmailTemplateRequest {
  string email_type = 1;
  string subject = 2;
  string html_body = 3;
  optional string plain_body = 4;
  string owner_team = 5;
  optional string layout_fid = 6;
  string created_by_fid = 7;
}

message CreateEmailTemplateResponse {
  string email_template_fid = 1;
}

message GetEmailTemplateRequest {
  string email_type = 1;
  string email_template_fid = 2;
}

message GetEmailTemplateResponse {
  string email_template_fid = 1;
}
