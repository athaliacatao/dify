// TEAM: order_management

syntax = "proto3";

package flexport.ordermanagement.ordermanagement.v1beta1;

import "flexport/monolith/ordermanagement/order/v1beta1/enums.proto";
import "flexport/ordermanagement/ordermanagement/v1beta1/enums.proto";

option java_multiple_files = true;
option java_outer_classname = "PurchaseOrderLineItemProto";
option java_package = "com.flexport.ordermanagement.ordermanagement.v1beta1";
option ruby_package = "Flexport::OrderManagement::OrderManagement::V1Beta1";

// A request to get purchase order line items
message PurchaseOrderLineItemQuery {
  // Page number of the page to retrieve
  optional uint32 page = 1;

  // The number of items per page
  // Should be between 1 and 100 (inclusive)
  optional uint32 per = 2;

  // The sort order
  // Allows "asc"(ascending) or "desc" (descending)
  optional SortDirection direction = 4;

  // Filters the list based on the monorail purchase order fid
  // Example: flx::core:purchase_order:dbid/123
  optional string purchase_order_fid = 5;

  // Filters the list based on line item number
  optional uint32 line_item_number = 6;

  // Filters the list based on item key
  optional string item_key = 7;

  // The line type of the purchase order line item
  optional flexport.monolith.ordermanagement.order.v1beta1.LineItemType line_type = 14;

  // Filter the list for purchase order line items with the provided client company entity fids for permissions
  // It represents the fid of Network::CompanyEntity in monorail of a client company
  // Example: [flx::core:company_entity:dbid/123]
  repeated string client_company_entity_fids = 15;
}

// Parameters for the creation or update of a Purchase Order Line Item
message PurchaseOrderLineItemParameter {
  // The line item number of the purchase order line item
  uint32 line_item_number = 1;

  // The item key of the purchase order line item
  string item_key = 2;

  // The line type of the purchase order line item
  flexport.monolith.ordermanagement.order.v1beta1.LineItemType line_type = 3;

  // The product referred by a purchase order line item
  PurchaseOrderLineItemProduct product = 4;
}

// Purchase order line item to be returned from a query
message PurchaseOrderLineItem {
  // The fid for a monorail PO line item
  // Example: flx::core:po_line_item:Base64.urlsafe_encode64(purchase_order_id/123/item_key/1)
  string purchase_order_line_item_fid = 1;

  // The postgres id for a monorail PO line item
  // Example: 123
  uint32 purchase_order_line_item_postgres_id = 2;

  // The fid for a monorail purchase order
  // Example: flx::core:purchase_order:dbid/123
  string purchase_order_fid = 3;

  // The line item number of the purchase order line item
  uint32 line_item_number = 4;

  // The item key of the purchase order line item
  string item_key = 5;

  // The line type of the purchase order line item
  flexport.monolith.ordermanagement.order.v1beta1.LineItemType line_type = 6;

  // The product referred by a purchase order line item
  PurchaseOrderLineItemProduct product = 7;
}


message PurchaseOrderLineItemProduct {
  // The id of a purchase order line item product
  uint64 postgres_id = 1;

  // The name of the product
  string name = 2;

  // The sku of the product
  string sku = 3;
}
