// TEAM: customs_platform

syntax = "proto3";

package flexport.customsasnservice.shipmentdata.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "ConstantsProto";
option java_package = "com.flexport.customsasnservice.shipmentdata.v1beta1";
option ruby_package = "Flexport::CustomsASNService::ShipmentData::V1beta1";

enum FreightServices {
  FREIGHT_SERVICES_INVALID = 0;
  FREIGHT_SERVICES_PARTNER_DOOR_TO_DOOR = 1;
  FREIGHT_SERVICES_PARTNER_DOOR_TO_PORT = 2;
  FREIGHT_SERVICES_PARTNER_PORT_TO_DOOR = 3;
  FREIGHT_SERVICES_PARTNER_PORT_TO_PORT = 4;
}

enum TransportationMode {
  TRANSPORTATION_MODE_INVALID = 0;
  TRANSPORTATION_MODE_AIR = 1;
  TRANSPORTATION_MODE_OCEAN_LCL = 2;
  TRANSPORTATION_MODE_OCEAN_FCL = 3;
  TRANSPORTATION_MODE_TRUCK_FTL = 4;
  TRANSPORTATION_MODE_TRUCK_LTL = 5;
}

enum Incoterm {
  INCOTERM_INVALID = 0;
  INCOTERM_CFR = 1;
  INCOTERM_CIF = 2;
  INCOTERM_CIP = 3;
  INCOTERM_CPT = 4;
  INCOTERM_DAP = 5;
  INCOTERM_DAT = 6;
  INCOTERM_DDP = 7;
  INCOTERM_DPU = 8;
  INCOTERM_EXW = 9;
  INCOTERM_FAS = 10;
  INCOTERM_FCA = 11;
  INCOTERM_FOB = 12;
}

enum CurrencyCode {
  CURRENCY_CODE_INVALID = 0;
  CURRENCY_CODE_USD = 1;
  CURRENCY_CODE_EUR = 2;
  CURRENCY_CODE_GBP = 3;
  CURRENCY_CODE_CNY = 4;
  CURRENCY_CODE_CAD = 5;
  CURRENCY_CODE_MXN = 6;
}

enum IsfFilingPartyType {
  ISF_FILING_PARTY_TYPE_INVALID = 0;
  ISF_FILING_PARTY_TYPE_FLEXPORT_SERVICE = 1;
  ISF_FILING_PARTY_TYPE_THIRD_PARTY_SERVICE = 2;
  ISF_FILING_PARTY_TYPE_THIRD_PARTY_SERVICE_REQUIRES_WORKSHEET = 3;
}

enum LiIonsBatteryPackingType {
  LI_IONS_BATTERY_PACKING_TYPE_INVALID = 0;
  LI_IONS_BATTERY_PACKING_TYPE_PACKED_LOOSE = 1;
  LI_IONS_BATTERY_PACKING_TYPE_PACKED_WITH_EQUIPMENT = 2;
  LI_IONS_BATTERY_PACKING_TYPE_CONTAINED_IN_EQUIPMENT = 3;
  LI_IONS_BATTERY_PACKING_TYPE_CONTAINED_IN_BATTERY_POWERED_VEHICLE = 4;
}

enum PortContext {
  PORT_CONTEXT_INVALID = 0;
  PORT_CONTEXT_LADING = 1;
  PORT_CONTEXT_DISCHARGE = 2;
  PORT_CONTEXT_DESTINATION = 3;
  PORT_CONTEXT_ORIGIN = 4;
}

enum PaymentTerms {
  PAYMENT_TERMS_INVALID = 0;
  PAYMENT_TERMS_PREPAID = 1;
  PAYMENT_TERMS_COLLECT = 2;
}

enum WeightUnit {
  WEIGHT_UNIT_INVALID = 0;
  WEIGHT_UNIT_KG = 1;
  WEIGHT_UNIT_LB = 2;
}

enum VolumeUnit {
  VOLUME_UNIT_INVALID = 0;
  VOLUME_UNIT_CBM = 1;
  VOLUME_UNIT_CFT = 2;
}

enum LengthUnit {
  LENGTH_UNIT_INVALID = 0;
  LENGTH_UNIT_CM = 1;
  LENGTH_UNIT_IN = 2;
}

enum ShippingUnitType {
  SHIPPING_UNIT_TYPE_INVALID = 0;
  SHIPPING_UNIT_TYPE_PALLET = 1;
  SHIPPING_UNIT_TYPE_CARTON = 2;
  SHIPPING_UNIT_TYPE_BAG = 3;
  SHIPPING_UNIT_TYPE_BALE = 4;
  SHIPPING_UNIT_TYPE_BARREL = 5;
  SHIPPING_UNIT_TYPE_CRATE = 6;
  SHIPPING_UNIT_TYPE_ROLL = 7;
  SHIPPING_UNIT_TYPE_PACKAGE = 8;
  SHIPPING_UNIT_TYPE_SKID = 9;
  SHIPPING_UNIT_TYPE_PIECE = 10;
  SHIPPING_UNIT_TYPE_TOTE = 11;
  SHIPPING_UNIT_TYPE_PAIL = 12;
  SHIPPING_UNIT_TYPE_SET = 13;
  SHIPPING_UNIT_TYPE_BIN = 14;
  SHIPPING_UNIT_TYPE_SACK = 15;
}

enum MembershipType {
  MEMBERSHIP_TYPE_INVALID = 0;
  MEMBERSHIP_TYPE_MANUFACTURER_SUPPLIER = 1;
  MEMBERSHIP_TYPE_SELLER = 2;
  MEMBERSHIP_TYPE_BUYER = 3;
  MEMBERSHIP_TYPE_SHIPPER = 4;
  MEMBERSHIP_TYPE_SHIP_TO_PARTY = 5;
  MEMBERSHIP_TYPE_SCHEDULED_CONTAINER_STUFFING_LOCATION = 6;
  MEMBERSHIP_TYPE_CONSOLIDATOR = 7;
  MEMBERSHIP_TYPE_BOOKING_PARTY = 8;
  MEMBERSHIP_TYPE_CONSIGNEE = 9;
  MEMBERSHIP_TYPE_IMPORTER_OF_RECORD = 10;
  MEMBERSHIP_TYPE_ORIGIN_AGENT = 11;
  MEMBERSHIP_TYPE_EXPORT_CUSTOMS_AGENT = 12;
  MEMBERSHIP_TYPE_IMPORT_CUSTOMS_AGENT = 13;
  MEMBERSHIP_TYPE_DESTINATION_AGENT = 14;
  MEMBERSHIP_TYPE_FORWARDING_AGENT = 15;
  MEMBERSHIP_TYPE_ORIGIN_WAREHOUSE = 16;
  MEMBERSHIP_TYPE_DESTINATION_WAREHOUSE = 17;
}

enum PortType {
  PORT_TYPE_INVALID = 0;
  PORT_TYPE_AIRPORT = 1;
  PORT_TYPE_RAILPORT = 2;
  PORT_TYPE_ROADPORT = 3;
  PORT_TYPE_SEAPORT = 4;
}

enum ContainerSize {
  CONTAINER_SIZE_INVALID = 0;
  CONTAINER_SIZE_FT_20 = 1;
  CONTAINER_SIZE_FT_40 = 2;
  CONTAINER_SIZE_FT_40_HC = 3;
  CONTAINER_SIZE_FT_45_HC = 4;
}

enum ContainerType {
  CONTAINER_TYPE_INVALID = 0;
  CONTAINER_TYPE_DRY = 1;
  CONTAINER_TYPE_FLATRACK = 2;
  CONTAINER_TYPE_HEADLOAD = 3;
  CONTAINER_TYPE_OPEN = 4;
  CONTAINER_TYPE_REEFER = 5;
  CONTAINER_TYPE_LCL = 6;
  CONTAINER_TYPE_TANK = 7;
  CONTAINER_TYPE_VENTILATED = 8;
  CONTAINER_TYPE_BULK = 9;
  CONTAINER_TYPE_SPECIAL = 10;
}

enum TruckNumberType {
  TRUCK_NUMBER_TYPE_INVALID = 0;
  TRUCK_NUMBER_TYPE_LICENSE_PLATE = 1;
  TRUCK_NUMBER_TYPE_TRUCK_BILL_OF_LADING = 2;
  TRUCK_NUMBER_TYPE_PRO_NUMBER = 3;
  TRUCK_NUMBER_TYPE_TRAILER_NUMBER = 4;
  TRUCK_NUMBER_TYPE_PARS_NUMBER = 5;
  TRUCK_NUMBER_TYPE_PAPS_NUMBER = 6;
}
