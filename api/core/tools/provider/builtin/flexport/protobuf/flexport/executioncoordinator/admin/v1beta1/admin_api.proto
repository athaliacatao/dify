// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.admin.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "AdminApiProto";
option java_package = "com.flexport.executioncoordinator.admin.v1beta1";
option ruby_package = "Flexport::ExecutionCoordinator::Admin::V1Beta1";

import "flexport/executioncoordinator/executioncargo/v1/execution_cargo.proto";
import "flexport/executioncoordinator/executionplan/v1/execution_plan.proto";

// Provides data for a read-only admin dashboard for the ExecutionCoordinator service.
service AdminAPI {
  // Returns *approximate* (and cheap to compute) row counts for database tables.
  rpc GetApproximateRowCounts(GetApproximateRowCountsRequest) returns (GetApproximateRowCountsResponse);
  // Returns the latest revisions for all ExecutionPlans.
  rpc GetLatestExecutionPlans(GetLatestExecutionPlansRequest) returns (GetLatestExecutionPlansResponse);
  // Returns the most recent ExecutionCargos.
  rpc GetLatestExecutionCargos(GetLatestExecutionCargosRequest) returns (GetLatestExecutionCargosResponse);
  // For testing that a thrown error gets sent to Sentry.
  rpc ThrowErrorForSentryTesting(ThrowErrorForSentryTestingRequest) returns (ThrowErrorForSentryTestingResponse);
  // For testing that a manually captured error gets sent to Sentry.
  rpc CaptureErrorForSentryTesting(CaptureErrorForSentryTestingRequest) returns (CaptureErrorForSentryTestingResponse);
  // For testing a manual signal to PubNub.
  rpc SignalForPubNubTesting(SignalForPubNubTestingRequest) returns (SignalForPubNubTestingResponse);
}

message GetApproximateRowCountsRequest {}

message GetApproximateRowCountsResponse {
  int32 approximate_execution_order_count = 1;
  int32 approximate_execution_order_revision_count = 2;
  int32 approximate_execution_task_count = 3;
  int32 approximate_execution_task_revision_count = 4;
  int32 approximate_execution_task_derived_cargo_count = 11;
  int32 approximate_execution_plan_revision_count = 5;
  int32 approximate_execution_task_state_event_count = 6;
  int32 approximate_execution_cargo_count = 7;
  int32 approximate_execution_cargo_revision_count = 8;
  int32 approximate_execution_order_state_event_count = 9;
  int32 approximate_derived_shipment_count = 10;
  int32 approximate_execution_task_state_event_rejected_count = 12;
}

message GetLatestExecutionPlansRequest {}

message GetLatestExecutionPlansResponse {
  repeated flexport.executioncoordinator.executionplan.v1.ExecutionPlan revisions = 1;
}

message GetLatestExecutionCargosRequest {}

message GetLatestExecutionCargosResponse {
  repeated flexport.executioncoordinator.executioncargo.v1.ExecutionCargo latest_revisions = 1;
}

message ThrowErrorForSentryTestingRequest {}

message ThrowErrorForSentryTestingResponse {}

message CaptureErrorForSentryTestingRequest {}

message CaptureErrorForSentryTestingResponse {}

message SignalForPubNubTestingRequest {}

message SignalForPubNubTestingResponse {}
