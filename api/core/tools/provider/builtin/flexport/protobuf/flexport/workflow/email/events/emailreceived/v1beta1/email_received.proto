// TEAM: starship

syntax = "proto3";

package flexport.workflow.email.events.emailreceived.v1beta1;

import "flexport/workflow/prelude/options/v1/options.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "EmailReceivedProto";
option java_package = "com.flexport.workflow.email.events.emailreceived.v1beta1";
option ruby_package = "Flexport::Workflow::Email::Events::EmailReceived::V1Beta1";

// Email received. Currently, when the Core receives some emails, this event
// will be sent to trigger some workflows.
message EmailReceived {
  option (flexport.workflow.prelude.options.v1.wp_event).name = "Received a email";
  option (flexport.workflow.prelude.options.v1.wp_event).description = "When the Core receives an external email, it will send this event.";
  option (flexport.workflow.prelude.options.v1.wp_event).resource_key = "email_fid";
  //
  // This field will be used as a unique identifier for an email.
  // If sending this event from the Core, please use `email_log.fid` to fill in
  // this field. If another NIS sends this event, please contact the
  // `starship` team to confirm the filled-in rules.
  string email_fid = 1;
  //
  // Email details.
  Email email = 2;
}

// Email details.
message Email {
  Address from = 1;
  repeated Address to = 2;
  repeated Address cc = 3;
  repeated Address bcc = 4;
  Address original_recipient = 5;
  Address reply_to = 6;
  string subject = 7;
  string raw_text = 10;
  string raw_html = 11;
  repeated Header headers = 12;
  string raw_headers = 13;
  repeated File attachments = 14;
  repeated Charset charsets = 15;
  google.protobuf.Timestamp send_time = 16;
}

// Email Address.
// Ex:
// {
//   token=>"sky.wang",
//   :host=>"flexport.com",
//   :email=>"sky.wang@flexport.com",
//   :full=>"Sky Wang <sky.wang@flexport.com>",
//   :name=>"Sky Wang"
// }
message Address {
  string token = 1;
  string host = 2;
  string email = 3;
  string full = 4;
  string name = 5;
}

// Mail attachment.
// Ex:
//   @original_filename="_whitelist.rb",
//   @content_type="text/plain",
//   @headers="Content-Disposition: form-data; name=\"attachment1\"; filename=\"_whitelist.rb\"\r\nContent-Type: text/plain\r\n"
message File {
  string original_filename = 1;
  string content_type = 2;
  string headers = 3;
  //
  // During the POC, I will send the attachments directly to workflow-engine
  // through kinesis, but in the future we will first store the attachments in
  // S3 to reduce network transmission.
  bytes data = 4 [deprecated = true];
  string storage_fid = 5;
}

// Header.
message Header {
  string key = 1;
  string value = 2;
}

// Charset.
message Charset {
  string key = 1;
  string value = 2;
}
