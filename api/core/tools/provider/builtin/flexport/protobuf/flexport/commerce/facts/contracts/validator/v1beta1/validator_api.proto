// TEAM: client_order

syntax = "proto3";

package flexport.commerce.facts.contracts.validator.v1beta1;

import "flexport/commerce/facts/contracts/common/v1beta1/common.proto";
import "flexport/commerce/facts/contracts/options/v1/options.proto";
import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_outer_classname = "ValidatorApiProto";
option java_package = "com.flexport.commerce.facts.contracts.validator.v1beta1";
option ruby_package = "Flexport::Commerce::Facts::Contracts::Validator::V1Beta1";

service ValidatorAPI {
  rpc Validate(ValidateRequest) returns (ValidateResponse);
}

message ValidateRequest {
  // An Any wrapper of the sub facts, implementation of the RPC should unwrap it per their intention.
  google.protobuf.Any fragment_facts = 1;
  google.protobuf.Any previous_fragment_facts = 2;

  flexport.commerce.facts.contracts.common.v1beta1.ChangeReason reason = 3;
  flexport.commerce.facts.contracts.options.v1.ValidatorAction action = 4;
}

message ValidateResponse {
  repeated flexport.commerce.facts.contracts.common.v1beta1.ValidateError errors = 1;

  // domain specific instructions, please refer to the concrete validation invoker.
  repeated google.protobuf.Any instructions = 2;
}
