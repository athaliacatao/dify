// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.executiontaskstateevent.v1;

option java_multiple_files = true;
option java_outer_classname = "TruckingOutForFinalDeliveryProto";
option java_package = "com.flexport.executioncoordinator.executiontaskstateevent.v1";
option ruby_package = "Flexport::ExecutionCoordinator::ExecutionTaskStateEvent::V1";

import "flexport/os/v1/types/walltimerange/v1/wall_time_range.proto";

// The delivery is on its way to the final destination. Note that this is co-emitted
// with CargoTransitDateChanged for the actual departure, however this event is only emitted
// if the delivery in question is on it's way to the final destination for the cargo, *and*
// if the consignee has requested special tracking of high-visibility milestones.
// CargoTransitDateChanged is better suited as a general event for cargo departing for
// a destination.
message TruckingOutForFinalDelivery {
  string cargo_fid = 1;
  // The fid of the immutable address instance this delivery originally left from
  string origin_address_fid = 2;
  // The fid of the immutable address instance this delivery is going to.
  string destination_address_fid = 3;
  // The value when the delivery went out for delivery, as a walltime range.
  // This is specified rather than using `occurred_at` because it may be set
  // after the fact
  flexport.os.v1.types.walltimerange.v1.WallTimeRange actual_out_for_delivery = 4;
}
