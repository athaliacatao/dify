// TEAM: customs_platform
syntax = "proto3";

package flexport.customs.declaration.eu.common.v1beta1;

import "flexport/customs/declaration/eu/types/v1beta1/address.proto";
import "google/type/latlng.proto";

option java_multiple_files = true;
option java_package = "com.flexport.customs.declaration.eu.common.v1beta1";
option ruby_package = "Flexport::Customs::Declaration::EU::Common::V1Beta1";

// The location where the goods may be examined.
// This location shall be precise enough to allow customs to carry out the physical control of the goods.
//
// [Data Element: 16 15 000 000]
message LocationOfGoods {
  enum Type {
    TYPE_INVALID = 0;
    // Designated location
    TYPE_A = 1;
    //Authorised place
    TYPE_B = 2;
    // Approved place
    TYPE_C = 3;
    // Other
    TYPE_D = 4;
  }

  // [Data Element: 16 15 045 000]
  Type type = 1;

  enum QualifierOfIdentification {
    QUALIFIER_OF_IDENTIFICATION_INVALID = 0;
    QUALIFIER_OF_IDENTIFICATION_T = 1; // Postcode address.
    QUALIFIER_OF_IDENTIFICATION_U = 2; // UN/LOCODE.
    QUALIFIER_OF_IDENTIFICATION_V = 3; // Customs office identifier.
    QUALIFIER_OF_IDENTIFICATION_W = 4; // GNSS coordinates.
    QUALIFIER_OF_IDENTIFICATION_X = 5; // EORI number.
    QUALIFIER_OF_IDENTIFICATION_Y = 6; // Authorisation number.
    QUALIFIER_OF_IDENTIFICATION_Z = 7; // Address.
  }

  // [Data Element: 16 15 046 000]
  QualifierOfIdentification qualifier_of_identification = 2;
  // The UN/LOCODE of the location where the goods may be examined.
  // Populated when qualifier_of_identification is UN/LOCODE.
  //
  // [Data Element: 16 15 036 000]
  optional string un_locode = 3;
  // The reference number of the customs office where the goods are available for further customs control.
  // Populated when qualifier_of_identification is customs office identifier.
  //
  // [Data Element: 16 15 047 000]
  optional string customs_office = 4;
  // The GNSS coordinates of the location where the goods may be examined.
  // Populated when qualifier_of_identification is GNSS coordinates.
  //
  // [Data Element: 16 15 048 000]
  // | [Data Element: 16 15 048 049] Latitude
  // | [Data Element: 16 15 048 050] Longitude
  optional google.type.LatLng gnss_coordinates = 5;
  // Populated when qualifier_of_identification is EORI number.
  //
  // [Data Element: 16 15 051 000]
  optional string economic_operator_identification_number = 6;
  // Populated when qualifier_of_identification is authorisation number.
  //
  // [Data Element: 16 15 052 000]
  optional string authorisation_number = 7;
  // [Data Element: 16 15 053 000]
  optional string additional_identification = 8;
  // The address of the location where the goods may be examined.
  // Populated when qualifier_of_identification is address.
  //
  // [Data Element: 16 15 018 000]
  // | [Data Element: 16 15 018 019] Street and number
  // | [Data Element: 16 15 018 020] Country
  // | [Data Element: 16 15 018 021] Postcode
  // | [Data Element: 16 15 018 022] City name
  optional flexport.customs.declaration.eu.types.v1beta1.Address address = 9;
  // The postcode address of the location where the goods may be examined.
  // Populated when qualifier_of_identification is postcode address.
  //
  // [Data Element: 16 15 081 000]
  // | [Data Element: 16 15 081 021] Postcode
  // | [Data Element: 16 15 081 025] House Number
  // | [Data Element: 16 15 081 020] Country.
  optional flexport.customs.declaration.eu.types.v1beta1.PostcodeAddress postcode_address = 10;
}
