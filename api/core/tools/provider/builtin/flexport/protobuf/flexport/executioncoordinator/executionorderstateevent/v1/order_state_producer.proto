// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.executionorderstateevent.v1;

option java_multiple_files = true;
option java_outer_classname = "OrderStateProducerProto";
option java_package = "com.flexport.executioncoordinator.executionorderstateevent.v1";
option ruby_package = "Flexport::ExecutionCoordinator::ExecutionOrderStateEvent::V1";

// A "service or group" (a la http://go/fid) that produces ExecutionOrderStateEvents
// via Kinesis stream.
//
// At Flexport we use the terms "event publisher" and "event emitter" colloquially,
// but the idiomatic term is "event producer":
// https://docs.aws.amazon.com/streams/latest/dev/amazon-kinesis-producers.html
//
// When adding a new value, please:
// (1) Order this list alphabetically (not by field number).
// (2) Use "service or group" names that are consistent with the other EC registries:
//     OrderUpserter, PlanUpserter, TaskStateProducer.
enum OrderStateProducer {
  ORDER_STATE_PRODUCER_INVALID = 0;
  ORDER_STATE_PRODUCER_CUSTOMS_ONLY_BOOKING = 8;
  ORDER_STATE_PRODUCER_DANGEROUS_GOODS = 12;
  ORDER_STATE_PRODUCER_DOT_ORG = 7;
  ORDER_STATE_PRODUCER_EC_WRITEBACK = 9;
  ORDER_STATE_PRODUCER_EXECUTION_COORDINATOR = 1;
  ORDER_STATE_PRODUCER_HOUSE_BILLS = 2;
  // Note: This will not be spun out into its own network-isolated service.
  // Events will be produced by other more appropriate systems in the future.
  // See http://go/involved-parties for details.
  ORDER_STATE_PRODUCER_INVOLVED_PARTIES_ENGINE = 5;
  ORDER_STATE_PRODUCER_LEGACY_OPERATIONAL_ROUTE = 11;
  ORDER_STATE_PRODUCER_ORIGIN_OPS = 3;
  ORDER_STATE_PRODUCER_SHIPMENT_ENGINE = 10;
  ORDER_STATE_PRODUCER_SHIPPER_EXP = 4;
  ORDER_STATE_PRODUCER_UPDATE_PLAN_QUEUE = 6;
}
