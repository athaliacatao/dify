// TEAM: smb

syntax = "proto3";

package flexport.smb.catalogsearch.v1beta1;

import "flexport/smb/common/v1beta1/error.proto";
import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "CatalogSearchApiProto";
option java_package = "com.flexport.smb.catalogsearch.v1beta1";

// Public Catalog Search API used by SMB marketplace apps.
service CatalogSearchAPI {
  rpc CatalogSearch(CatalogSearchRequest) returns (CatalogSearchResponse) {
    option (google.api.http) = {
      post: "/ecommerce/catalog/products"
      body: "*"
    };
  }
}

message CatalogSearchRequest {
  message Origin {
    string city = 1;
    string country = 2;
    string unlocode = 3;
  }

  message Destination {
    // Apps are moving to city/state lookup.
    // Zip will be deprecated in the near future.
    string zip = 1;
    // Currently this is just a fulfillment center id.
    string location_id = 2;
    string city = 3;
    string state = 4;
  }

  message CargoDetails {
    message Weight {
      uint32 value = 1;
      string unit = 2; // "kg"
    }
    Weight weight = 1;

    message Volume {
      uint32 value = 1;
      string unit = 2; // "cbm"
    }
    Volume volume = 2;

    message ContainerCounts {
      uint32 twenty_ft = 1;
      uint32 forty_ft = 2;
      uint32 forty_ft_hc = 3;
    }
    ContainerCounts container_counts = 3;
  }

  string data_version = 1;
  string freight_type = 2;
  string load_type = 3;
  Origin origin = 4;
  Destination destination = 5;
  CargoDetails cargo_details = 6;
  google.protobuf.BoolValue include_origin_trucking = 7;
  string ca = 8;
  string cb = 9;
  uint32 per = 10;
}

message Money {
  string object = 1 [json_name = "_object"];
  google.protobuf.UInt32Value amount_cents = 2;
  string currency_code = 3;
}

message CatalogSearchResponse {
  message ResponseData {
    message SearchResult {
      message PriceCategory {
        message CategoryItem {
          string name = 1;
          Money price = 2;
          Money price_per_unit = 3;
          uint32 quantity = 4;
        }

        string category_name = 1;
        Money subtotal = 2;
        repeated CategoryItem items = 3;
      }

      message TransitTime {
        uint32 total = 1;
        uint32 port_to_port = 2;
        string unit = 3;
      }

      message Route {
        message Port {
          string name = 1;
          string unlocode = 2;
        }
        message Origin {
          string city = 1;
          string country = 2;
        }
        message Destination {
          string city = 1;
          string state = 2;
          string zip = 3;
          // Fulfillment center attributes:
          string network = 4;
          string name = 5;
        }

        Origin pickup = 1;
        Port origin_port = 2;
        Port destination_port = 3;
        Destination delivery = 4;
      }

      string freight_type = 1;
      google.protobuf.BoolValue is_flow = 2;
      string service_label = 3;
      TransitTime transit_times = 4;
      Route route = 5;
      string valid_until = 6; // ISO 8601 date string
      Money total_price = 7;
      repeated PriceCategory price_categories = 8;
      google.protobuf.BoolValue include_origin_trucking = 9;
    }

    repeated SearchResult results = 1;
    string prev = 2;
    string next = 3;
    uint32 total_count = 4;
  }

  string object = 1 [json_name = "_object"];
  string self = 2;
  string version = 3;
  ResponseData data = 4;

  flexport.smb.common.v1beta1.Error error = 5;
}
