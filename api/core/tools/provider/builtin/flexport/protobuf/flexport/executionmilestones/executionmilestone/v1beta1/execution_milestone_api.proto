// TEAM: sutro

syntax = "proto3";

package flexport.executionmilestones.executionmilestone.v1beta1;

import "flexport/executionmilestones/executionmilestone/v1beta1/execution_milestone.proto";

option java_multiple_files = true;
option java_outer_classname = "ExecutionMilestoneApiProto";
option java_package = "com.flexport.executionmilestones.executionmilestone.v1beta1";
option ruby_package = "Flexport::ExecutionMilestones::ExecutionMilestone::V1Beta1";

// An API for querying execution milestones.
service ExecutionMilestoneAPI {
  // Get execution milestones by shipment fid or execution order fid.
  rpc GetExecutionMilestones(GetExecutionMilestonesRequest) returns (GetExecutionMilestonesResponse);
  // Get forwarding state by shipment_fid
  rpc GetForwardingState(GetForwardingStateRequest) returns (GetForwardingStateResponse);
}

message GetExecutionMilestonesRequest {
  oneof identifier {
    string execution_order_fid = 1;
    string shipment_fid = 2;
  }
}

message GetExecutionMilestonesResponse {
  repeated ExecutionMilestone execution_milestones = 1;
}

message GetForwardingStateRequest {
  string shipment_fid = 1;
}

message GetForwardingStateResponse {
  string shipment_fid = 1;
  repeated ForwardingStateComponent forwarding_state_components = 2;
}

// Wrapper message for forwarding state component
message ForwardingStateComponent {
  string state_type = 1;
  string state = 2;
}
