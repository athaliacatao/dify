// TEAM: procurement

syntax = "proto3";

package flexport.procurement.oceanlclrateprovider.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "OceanLclRateProviderApiProto";
option java_package = "com.flexport.procurement.oceanlclrateprovider.v1beta1";
option ruby_package = "Flexport::Procurement::OceanLclRateProvider::V1Beta1";

import "flexport/procurement/rates/v1beta1/rates.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// Service used to retrieve Ocean Lcl Rates.
service OceanLclRateProviderAPI {
  // Find Ocean LCL rates matching a given request.
  rpc RequestRates(RequestRatesRequest) returns (RequestRatesResponse);
  // Let procurement know that rates are waiting in the s3 bucket.
  rpc S3RatesReady(S3RatesReadyRequest) returns (S3RatesReadyResponse) {
    option (google.api.http) = {
      post: "/v1/procurement/ocean/lcl/ingest-rates"
    };
  }
}

// Metadata from Ecosystem/boomi.
message S3RatesReadyRequest {
  string batch_id = 1;
  string filename = 2;
  int32 count_of_lines = 3;
  string ready_at = 4;
  string rate_type = 5;
}

// Response to send back to boomi.
message S3RatesReadyResponse {
  string status = 2;
}

message RequestRatesRequest {
  string origin_code = 1;
  string destination_code = 2;
  google.protobuf.Timestamp shipment_time = 4;
  string carrier_code = 5;
  bool hazardous = 6;
  string via_origin_code = 7;
  string via_destination_code = 8;
  bool exclude_origin_charges = 10;
  bool exclude_destination_charges = 11;
  // The type of rate requested.
  enum RateType {
    RATE_TYPE_INVALID = 0;
    RATE_TYPE_OCEAN_LCL_COLOAD = 1;
    RATE_TYPE_OCEAN_FCL_SPOT = 2;
  }
  RateType rate_type = 12;
  string service_provider = 13;
}

message RequestRatesResponse {
  repeated flexport.procurement.rates.v1beta1.Rate rates = 2;
}
