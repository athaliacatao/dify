// TEAM: kingsroad

syntax = "proto3";

package flexport.forwardingcustomsmanager.customsdocumentvalidation.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "DocumentValidationApiProto";
option java_package = "com.flexport.forwardingcustomsmanager.customsdocumentvalidation.v1beta1";
option ruby_package = "Flexport::ForwardingCustomsManager::CustomsDocumentValidation::V1Beta1";

message GetDocumentValidationStatusRequest {
  string documentable_fid = 1;
  repeated string document_fid = 2;
}

message DocumentValidationStatus {
  //key is required validation checks, value is if this validation has been checked
  map<string, ValidationCheckStatus> validation_check_status_mapper = 1;
}

message GetDocumentValidationStatusResponse {
  DocumentValidationStatus status = 1;
}

enum ValidationCheckStatus {
  VALIDATION_CHECK_STATUS_INVALID = 0;
  VALIDATION_CHECK_STATUS_MANUAL_CHECKED = 1;
  VALIDATION_CHECK_STATUS_AUTO_CHECKED = 2;
  VALIDATION_CHECK_STATUS_SKIPPED = 3;
  VALIDATION_CHECK_STATUS_UNCHECKED = 4;
}

service DocumentValidationAPI {
  rpc GetDocumentValidationStatus(GetDocumentValidationStatusRequest) returns (GetDocumentValidationStatusResponse);
}
