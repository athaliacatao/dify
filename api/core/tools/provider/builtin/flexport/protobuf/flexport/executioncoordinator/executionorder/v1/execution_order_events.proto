// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.executionorder.v1;

option java_multiple_files = true;
option java_outer_classname = "ExecutionOrderEventsProto";
option java_package = "com.flexport.executioncoordinator.executionorder.v1";
option ruby_package = "Flexport::ExecutionCoordinator::ExecutionOrder::V1";

import "flexport/executioncoordinator/executionorder/v1/execution_order.proto";

// Kinesis event emitted by the ExecutionCoordinator, when an ExecutionOrder has been created.
message ExecutionOrderCreated {
  string execution_order_fid = 1;
  flexport.executioncoordinator.executionorder.v1.ExecutionOrder execution_order = 2;
  // This is the uuid of the ExecutionOrderCreated event.
  string execution_order_event_fid = 3;
}

// Kinesis event emitted by the ExecutionCoordinator, when an ExecutionOrder has been changed.
message ExecutionOrderChanged {
  string execution_order_fid = 1;
  // The new ExecutionOrder proto.
  flexport.executioncoordinator.executionorder.v1.ExecutionOrder execution_order = 2;
  // The previous version of the ExecutionOrder proto.
  flexport.executioncoordinator.executionorder.v1.ExecutionOrder previous_execution_order = 4;
  // This is the uuid of the ExecutionOrderChanged event.
  string execution_order_event_fid = 3;
}
