// TEAM: iam_platform

syntax = "proto3";

package flexport.authorization.checker.v1;

option java_multiple_files = true;
option java_outer_classname = "CheckerApiProto";
option java_package = "com.flexport.authorization.checker.v1";
option ruby_package = "Flexport::Authorization::Checker::V1";

import "flexport/authorization/v1/common.proto";
import "google/protobuf/wrappers.proto";

// Checks whether a user has permission to perform an operation.
service CheckerAPI {
  // Check whether a user can perform an operation.
  rpc CheckOperation(CheckOperationRequest) returns (CheckOperationResponse);
}

message CheckOperationRequest {
  flexport.authorization.v1.Actor actor = 1 [deprecated = true];
  //
  // TODO: rename to operation_slug in v2.
  //
  // This should actually be called operation_slug, as it is expected that
  // the values of this field should follow one of the following formats:
  // <service-name>:<operation-name> for RBAC operations
  // -or-
  // <service-name>:<operation-name>:<resource-type> for RRBAC operations
  string operation_name = 2;
  flexport.authorization.v1.Resource resource = 3 [deprecated = true];
  //
  // This field is meant to replace the legacy `resource` field. If this
  // field is set, it is unnecessary to also populate the `resource` field.
  google.protobuf.StringValue resource_fid = 4;
  // fid of the actor to check operation for, this replaces the actor field
  string actor_fid = 5;
}

message CheckOperationResponse {
  bool can_operate = 1;
}
