// TEAM: work_management

syntax = "proto3";

package flexport.operatingprocedures.procedures.v1;

import "flexport/operatingprocedures/procedures/v1/procedure.proto";

option java_multiple_files = true;
option java_outer_classname = "ProcedureApiProto";
option java_package = "com.flexport.operatingprocedures.procedures.v1";
option ruby_package = "Flexport::OperatingProcedures::Procedures::V1";

// The protocol for retrieving all procedures of a given category from the operating_procedures service.
service ProcedureAPI {
  // Retrieves a list of Procedures for a given client fid / company entity fid.
  rpc GetDestinationCoordinationProcedures(GetDestinationCoordinationProceduresRequest) returns (GetDestinationCoordinationProceduresResponse);
}

// Retrieve a DestinationCoordinationProcedure for a given client_fid/company_entity_fid.
message GetDestinationCoordinationProceduresRequest {
  string client_fid = 2;
  string company_entity_fid = 3;
}

// Represents a DestinationCoordinationProcedure.
message GetDestinationCoordinationProceduresResponse {
  repeated DestinationCoordinationProcedure procedure = 1;
}
