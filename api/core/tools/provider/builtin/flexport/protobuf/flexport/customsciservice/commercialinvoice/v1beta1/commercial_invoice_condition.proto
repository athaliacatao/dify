// TEAM: customs_platform

syntax = "proto3";

package flexport.customsciservice.commercialinvoice.v1beta1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "CommercialInvoiceConditionProto";
option java_package = "com.flexport.customsciservice.commercialinvoice.v1beta1";
option ruby_package = "Flexport::CustomsCiService::CommercialInvoice::V1Beta1";

// Following is based on the ADR-1 spec:
// https://github.flexport.io/flexport/customs-adr/blob/main/decisions/accepted/0001-validations-conditions-escalations.md
// The above link explains the fields in CommercialInvoice.
message CommercialInvoiceCondition {
  enum CommercialInvoiceConditionType {
    // This is the invalid commercial invoice condition.
    COMMERCIAL_INVOICE_CONDITION_TYPE_INVALID = 0;
    // TODO: add more condition types here.
  }

  bool status = 1;
  CommercialInvoiceConditionType condition_type = 2;
  string reason = 3;
  optional string message = 4;
  google.protobuf.Timestamp last_evaluated = 5;
  google.protobuf.Timestamp last_transitioned = 6;
  optional google.protobuf.Int64Value observed_generation = 7;
  repeated uint32 line_item_ids = 8;

// TODO: add context field here.
// oneof context {
// }
// message DetailedContext {
// }
}
