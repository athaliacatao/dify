// TEAM: trucking

syntax = "proto3";

package flexport.executionmilestones.truckingdeliveryorderstate.v1;

import "flexport/operatingprocedures/procedures/v4beta1/procedure.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "TruckingDeliveryOrderStateProto";
option java_package = "com.flexport.executionmilestones.truckingdeliveryorderstate.v1";

message TruckingDeliveryOrderState {
  // the key should be an execution_task_fid
  map<string, CurrentDeliveryOrder> current_delivery_order = 1;
}

message CurrentDeliveryOrder {
  // an ET could associate with multiple DOs but we only care about the current one.
  string delivery_order_fid = 1;

  bool accepted_by_carrier = 101;

  bool is_full_do_sent = 2;

  string full_do_sent_by = 3;

  bool is_deleted = 4;

  string deleted_by = 5;

  bool is_declined = 6;

  string declined_by = 7;

  bool is_accepted = 9;

  string accepted_by = 10;

  bool is_notice_sent = 11;

  string notice_sent_by = 12;

  bool is_recover_and_hold_sent = 13;

  string recover_and_hold_sent_by = 14;

  string origin_country_code = 15;

  string destination_country_code = 16;

  string origin_address_type = 17;

  string destination_address_type = 18;

  string origin_facility_type = 19;

  string destination_facility_type = 20;

  google.protobuf.Timestamp full_do_sent_at = 21;

  google.protobuf.Timestamp notice_do_sent_at = 22;

  google.protobuf.Timestamp recover_and_hold_sent_at = 23;

  bool destination_is_amazon_location = 24;

  google.protobuf.Timestamp auto_send_scheduled_send_at = 25;

  google.protobuf.Timestamp ready_for_work_time = 26 [deprecated = true];

  google.protobuf.Timestamp due_at_time = 27 [deprecated = true];

  // Specifies the ready for work time relative to a milestone.
  // Used to calculate import dispatch trucking ready for work time.
  // By storing the time relative to a milestone the ready for work date would change if the milestone date changes.
  TimeFromMilestone ready_for_work_from_milestone = 28;
  // Specifies the due at time relative to a milestone.
  // Used to calculate import dispatch trucking due at time.
  // By storing the time relative to a milestone the due at time would change if the milestone date changes.
  TimeFromMilestone due_at_from_milestone = 29;

  string destination_address_location_fid = 30;

  string origin_address_location_fid = 31;
}

// TimeFromMilestone stores the ready for work and due at times relative to the milestones.
message TimeFromMilestone {
  // Specifies the milestone type.
  flexport.operatingprocedures.procedures.v4beta1.ShipmentMilestoneDate milestone_date = 1;
  // Specifies the offset amount from the above milestone.
  int32 timeline_offset = 2;
  // Specifies the unit for the offset (Days/hours).
  flexport.operatingprocedures.procedures.v4beta1.AnchorOffsetUnit offset_unit = 3;
}
