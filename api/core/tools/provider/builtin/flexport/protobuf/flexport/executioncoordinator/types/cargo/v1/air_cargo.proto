// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.types.cargo.v1;

option java_multiple_files = true;
option java_outer_classname = "AirCargoProto";
option java_package = "com.flexport.executioncoordinator.types.cargo.v1";
option ruby_package = "Flexport::ExecutionCoordinator::Types::Cargo::V1";

import "flexport/os/v1/types/cargo/v1/cargo_measurements.proto";

// One Unit Load Device (ULD).
// https://www.flexport.com/glossary/unit-load-device/
message AirCargoUld {
  //
  // ULD type fid from AirProcurement::Models::EquipmentType.
  string equipment_type_fid = 1;
  //
  // The contents of each ULD.
  repeated AirCargoCartons contents = 2;
  //
  // Optional: The Master Air Waybill (MAWB) number this ULD flies under.
  // If given, all the cargo in these ULDs fly under this MAWB number. If the
  // cargo in these ULDs will fly under different MAWB numbers, leave this
  // blank and specify them at the carton level.
  string master_air_waybill_number = 3;
  //
  // ULD number
  string uld_number = 4;
  //
  // The total measurements of *all* units, *including* all enclosures but not the ULD itself.
  flexport.os.v1.types.cargo.v1.CargoMeasurements total_gross_measurements = 5;
}

// Cartons to move by air. These can be tendered loose to an airline at the
// terminal, or consolidated into a ULD.
// TODO: Add weights, dimensions, etc.
message AirCargoCartons {
  //
  // The number of cartons. Must be at least 1.
  // If greater than 1, the attributes apply to every carton.
  int32 quantity = 1;
  //
  // The Master Air Waybill (MAWB) number these cartons fly under. If these
  // cartons are consolidated into a ULD, and all of the cartons within that
  // ULD will travel under the same MAWB number, leave this blank and set the
  // MAWB number at the ULD level.
  string master_air_waybill_number = 2;
}
