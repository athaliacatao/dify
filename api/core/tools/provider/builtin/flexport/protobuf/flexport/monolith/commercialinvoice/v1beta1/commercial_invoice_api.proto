// TEAM: customs_platform

syntax = "proto3";

package flexport.monolith.commercialinvoice.v1beta1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/type/money.proto";
import "flexport/customsciservice/constants/v1beta1/constants.proto";

option java_multiple_files = true;
option java_outer_classname = "CommercialInvoiceApiProto";
option java_package = "com.flexport.monolith.commercialinvoice.v1beta1";
option ruby_package = "Flexport::Monolith::CommercialInvoice::V1Beta1";

// The CommercialInvoiceAPI service provides methods to fetch commercial invoices
// that live in the Monolith commercial_invoice_engine database.
service CommercialInvoiceAPI {
  rpc GetShipmentInvoices(GetShipmentInvoicesRequest) returns (GetShipmentInvoicesResponse);
}

message GetShipmentInvoicesRequest {
  repeated string shipment_fids = 1;
}

message GetShipmentInvoicesResponse {
  repeated ShipmentInvoice shipment_invoices = 1;
}

message ShipmentInvoice {
  int64 id = 9;
  string shipment_fid = 1;
  string invoice_fid = 2;
  google.type.Money total_price = 3;
  string invoice_number = 5;
  repeated CommercialInvoiceLineItem line_items = 6;
  google.protobuf.Timestamp invoice_date = 7;
  // Represents metadata for the commercial invoice as a map of key-value pairs
  // where the key is a string and the value is a list of strings.
  map<string, MetadataStringList> metadata = 8;
  repeated ChargeAdjustment charge_adjustments = 10;
  ChargeAdjustmentTotals charge_adjustment_totals = 11;
}

// Reservations for fields in flexport.customsciservice.commercialinvoice.v1beta1.CommercialInvoiceLineItem
// that were not implemented in the monolith yet.
message CommercialInvoiceLineItem {
  int64 id = 1;
  google.protobuf.Int32Value document_line_number = 2;
  string purchase_order_number = 3;
  reserved 6; // reserved for "mid_code"
  repeated string container_numbers = 7;
  google.protobuf.StringValue country_of_origin = 8;
  reserved 9; // reserved for "sku"
  int32 quantity = 10;
  google.type.Money net_value = 11;
  google.type.Money value = 12;
  google.type.Money unit_price = 13;
  google.protobuf.DoubleValue net_weight = 14;
  reserved 15; // reserved for "net_net_weight"
  google.protobuf.DoubleValue gross_weight = 16;
  reserved 17; // reserved for "volume"
  QuantityUnit quantity_unit_of_measure = 18;
  WeightUnit weight_unit_of_measure = 19;
  reserved 20; // reserved for "volume_unit_of_measure"
  reserved 21; // reserved for "first_sale_value"
  reserved 22; // reserved for "final_sale_value"
  reserved 23; // reserved for "description"
  reserved 24; // reserved for "po_line_item_number"
  CommercialInvoiceInvolvedParty manufacturer_address = 25;
  // Represents metadata for the commercial invoice line item as a map of key-value pairs
  // where the key is a string and the value is a list of strings.
  map<string, MetadataStringList> metadata = 26;
  google.protobuf.Timestamp created_at = 27;
  google.protobuf.Timestamp updated_at = 28;
  google.protobuf.StringValue product_fid = 29;
  repeated ChargeAdjustment charge_adjustments = 30;

  oneof special_program {
    string special_program_code = 31;
    bool eligible_for_special_program = 32;
  }

  ChargeAdjustmentLineItemTotals charge_adjustment_totals = 33;
}

// Types of weight units
enum WeightUnit {
  WEIGHT_UNIT_INVALID = 0;
  WEIGHT_UNIT_KG = 1;
  WEIGHT_UNIT_LB = 2;
}

// Types of quantity units based on CommercialInvoiceLineItemQuantityUnits
enum QuantityUnit {
  QUANTITY_UNIT_INVALID = 0;
  QUANTITY_UNIT_YARDS = 1;
  QUANTITY_UNIT_NET_YARDS = 2;
  QUANTITY_UNIT_GROSS_YARDS = 3;
  QUANTITY_UNIT_SQUARE_FEET = 4;
  QUANTITY_UNIT_SQUARE_METERS = 5;
  QUANTITY_UNIT_ROLLS = 6;
  QUANTITY_UNIT_CARTONS = 7;
  QUANTITY_UNIT_HIDES = 8;
  QUANTITY_UNIT_EACH = 9;
  QUANTITY_UNIT_CRATES = 10;
}

// Types of involved parties
enum InvolvedPartyType {
  INVOLVED_PARTY_TYPE_INVALID = 0;
  INVOLVED_PARTY_TYPE_CONSIGNEE = 1;
  INVOLVED_PARTY_TYPE_IMPORTER_OF_RECORD = 2;
  INVOLVED_PARTY_TYPE_SELLER = 3;
  INVOLVED_PARTY_TYPE_BUYER = 4;
  INVOLVED_PARTY_TYPE_MANUFACTURER = 5;
}

// Represents a commercial invoice involved party object
message CommercialInvoiceInvolvedParty {
  uint32 id = 1;
  InvolvedPartyType type = 2;
}

message MetadataStringList {
  repeated string value = 1;
}

message ChargeAdjustmentTotals {
  google.type.Money flat_rate_charges = 1;
  google.type.Money per_unit_charges = 2;
  google.type.Money percentages = 3;
}

message ChargeAdjustmentLineItemTotals {
  google.type.Money flat_rate_charges = 1;
  google.type.Money per_unit_charges = 2;
  google.type.Money percentages = 3;

  google.type.Money combined_total_charges = 4;

  google.type.Money weighted_invoice_flat_rate_charges = 5;
}

message ChargeAdjustment {
  flexport.customsciservice.constants.v1beta1.ChargeAdjustmentAppliedAs adjustment_applied_as = 1;
  string adjustment_code = 2;
  google.type.Money value = 3;
  string client_defined_code = 5;
  flexport.customsciservice.constants.v1beta1.ChargeAdjustmentAppliedTo adjustment_applied_to = 6;
}
