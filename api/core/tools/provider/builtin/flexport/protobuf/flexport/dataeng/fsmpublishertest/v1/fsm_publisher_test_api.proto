// TEAM: data_platform

syntax = "proto3";

package flexport.dataeng.fsmpublishertest.v1;

option java_multiple_files = true;
option java_outer_classname = "FsmPublisherTestApiProto";
option java_package = "com.flexport.dataeng.fsmpublishertest.v1";
option ruby_package = "Flexport::DataEng::FsmPublisherTest::V1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// The Fsm Publish Test service definition.
service FsmPublisherTestAPI {
  // Sends a event to a FSM topic.
  rpc PublishEvent(PublishEventRequest) returns (PublishEventResponse) {
    option (google.api.http) = {
      post: "/v1/dataeng/fsmpublishertest/publish-event"
    };
  }
  // Reads a event from a FSM topic.
  rpc ConsumeEvent(ConsumeEventRequest) returns (ConsumeEventResponse) {
    option (google.api.http) = {
      get: "/v1/dataeng/fsmpublishertest/consume-event"
    };
  }
}

// The request message.
message PublishEventRequest {
  string message = 1;
}

// The response message containing the greetings.
message PublishEventResponse {
  string message = 1;
  google.protobuf.Timestamp current_time = 2;
  string publishing_status = 3;
}

// The (comma delimited) topics to consume.
message ConsumeEventRequest {
  string topics = 1;
}

// The consume response message containing the published greetings.
message ConsumeEventResponse {
  string messages = 1;
  google.protobuf.Timestamp current_time = 2;
  string consuming_status = 3;
}
