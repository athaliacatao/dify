// TEAM: procurement

syntax = "proto3";

package flexport.airprocurement.costcalculator.v1;

import "flexport/airprocurement/costcalculator/v1/cost_calculator.proto";
import "flexport/airprocurement/rates/v1/rate_search_term_parameters.proto";
import "flexport/financialvisibility/supplyservice/v1beta1/supply_service.proto";
import "flexport/financialvisibility/common/v1beta1/common.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "FindCostProto";
option java_package = "com.flexport.airprocurement.costcalculator.v1";
option ruby_package = "Flexport::AirProcurement::CostCalculator::V1";

// Start request shapes

// Keep in sync with
// - flexport.consolplanner.entityevent.v1.SelectedRateType proto
// - AirBsaRateKind GraphQL type
enum SelectedRateType {
  SELECTED_RATE_TYPE_INVALID = 0;
  SELECTED_RATE_TYPE_FIXED = 1;
  SELECTED_RATE_TYPE_FLOATING = 2;
}

message RouteTermParameters {
  string origin_fid = 1;
  string destination_fid = 2;
  string origin_port_fid = 3;
  string destination_port_fid = 4;
  string route_term_fid = 5;
  SelectedRateType selected_rate_type = 6;
}

message RateSearchParameters {
  RouteTermParameters route = 1;
  flexport.airprocurement.rates.v1.ValidityTermParameters validity = 2;
  flexport.airprocurement.rates.v1.ContractTermParameters contract = 3;
  flexport.airprocurement.rates.v1.CarrierTermParameters carrier = 4;
  flexport.airprocurement.rates.v1.FlightTermParameters flight = 5;
  flexport.airprocurement.rates.v1.GoodsClassificationTermParameters goods_classification = 6;
  flexport.airprocurement.rates.v1.ExpediencyTermParameters expediency = 7;
}

enum BatchType {
  BATCH_TYPE_INVALID = 0;
  BATCH_TYPE_MAWB = 1;
}

message BillOfMaterials {
  WeightValue weight = 1;
  VolumeValue volume = 2;
  WeightValue chargeable_weight = 3;
  WeightValue utilized_chargeable_weight = 4;
  WeightValue total_chargeable_weight = 5;
  WeightValue utilized_weight = 6;
  WeightValue total_available_weight = 7;
  ContainersValue containers = 8;
  google.protobuf.Int32Value piece_count = 9;
  google.protobuf.Int32Value pallet_count = 10;
}

message ShipmentBillOfMaterials {
  string shipment_fid = 1;
  reserved 2;
  BillOfMaterials bill_of_materials = 3;
}

message CostCalculationParameters {
  string batch_identifier = 1;
  BatchType batch_type = 2;
  reserved 3, 4, 5, 6, 7, 8;
  BillOfMaterials bill_of_materials = 9;
  repeated ShipmentBillOfMaterials shipment_bill_of_materials = 10;
}

message CostPublishingParameters {
  string batch_parent_shipment_fid = 1;
  float utilization_factor = 2;
  repeated string update_reason = 3;
  flexport.financialvisibility.common.v1beta1.Milestone milestone = 4;
}

message FindCostParameters {
  RateSearchParameters rate_search_parameters = 1;
  CostCalculationParameters cost_calculation_parameters = 2;
  CostPublishingParameters cost_publishing_parameters = 3;
}
// End request shapes


// Start response shapes

message ShipmentAllocation {
  string shipment_fid = 1;
  float factor = 2;
}

message Cost {
  flexport.financialledger.supplyservice.v1beta1.SupplyMode mode = 1;
  int64 total_amount_micros = 2;
  int64 total_amount_at_100_utilization_micros = 3;
  string total_currency_code = 4;
  repeated flexport.airprocurement.costcalculator.v1.CostItem cost_items = 5;
  repeated ShipmentAllocation shipment_allocation = 6;
  repeated flexport.airprocurement.costcalculator.v1.CostItem cost_items_at_100_utilization = 7;
}

message CostRecord {
  Cost cost = 1;
  // The presence of an external identifier indicates that the cost has been published to cost capture
  flexport.financialledger.supplyservice.v1beta1.ExternalIdentifier supply_service_external_identifier = 2 [deprecated = true];
  flexport.airprocurement.costcalculator.v1.Date arrival_date = 3;
  string batch_identifier = 4;
  repeated flexport.financialledger.supplyservice.v1beta1.ExternalIdentifier supply_service_external_identifiers = 5;
}

// End response shapes
