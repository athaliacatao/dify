// TEAM: procurement

syntax = "proto3";

package flexport.monolith.airprocurement.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "CoreServiceApiProto";
option java_package = "com.flexport.monolith.airprocurement.v1beta1";
option ruby_package = "Flexport::Monolith::AirProcurement::V1Beta1";

// API to access Air Procurement in core from grpc.
service CoreServiceAPI {
  // Upload a main freight file by sending the storage service fid of the file, the user uploading, and the partner company this applies to.
  rpc UploadMainFreight(UploadMainFreightRequest) returns (UploadMainFreightResponse);
}

message UploadMainFreightRequest {
  // storage service fid of file to upload
  string storage_service_fid = 1;
  // user who wants to upload
  string user_fid = 2;
  // partner company this sheet is for
  string partner_company_fid = 3;
}

message UploadMainFreightResponse {
  // message if there's success
  string success_message = 1;
  // errors otherwise
  repeated string errors = 2;
}
