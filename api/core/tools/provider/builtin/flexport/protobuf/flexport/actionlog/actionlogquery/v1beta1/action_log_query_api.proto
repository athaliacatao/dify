// TEAM: application_framework

syntax = "proto3";

package flexport.actionlog.actionlogquery.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "ActionLogQueryApiProto";
option java_package = "com.flexport.actionlog.actionlogquery.v1beta1";
option ruby_package = "Flexport::ActionLog::ActionLogQuery::V1Beta1";

import "flexport/actionlog/action/v1beta1/action.proto";
import "flexport/actionlog/actionlogquery/v1beta1/entities_filter.proto";

//
// * Service Boundary Documentation:
// * -------------------------------

//
// * Set of GRPC APIS to query action logs
// *
// * This API is used to fetch the latest actions that have occurred and been logged to the ActionLog NIS
// * The purpose of this API is to render ActionLogs in a component other than the <ActionLog/> react component.
// * Do not use the returned in the Actions for *any BUSINESS LOG*. The returned Actions should be opaquely rendered on the frontend
// * and performing business logic based on the returned actions is an anti pattern?
// *
// * Interested in learning more about ActionLog? Check out go/actionlog to understand more about the product
//

//The API for returning the latest occurring actions according to a set of request filters.
service ActionLogQueryAPI {
  //The name of the function the stub calls to fetch action logs.
  rpc GetActionLogs(GetActionLogsRequest) returns (GetActionLogsResponse);
}

// The request message for fetching at most query limit actions. This does not mean exactly query limit actions will be returned
// The server will choose the query_limit most recent actions of the particularly action_type that have been logged to action log
// One can arbitrarily choose to filter by actors and target
message GetActionLogsRequest {
  string action_type = 1;
  uint32 query_limit = 2;
  EntitiesFilter actors_filter = 3;
  EntitiesFilter targets_filter = 4;
}

// The response message containing the scoped action log token.
message GetActionLogsResponse {
  repeated flexport.actionlog.action.v1beta1.Action actions = 1;
}
