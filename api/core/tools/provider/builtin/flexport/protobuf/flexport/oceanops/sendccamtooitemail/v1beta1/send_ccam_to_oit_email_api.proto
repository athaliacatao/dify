// TEAM: kingsroad

syntax = "proto3";

package flexport.oceanops.sendccamtooitemail.v1beta1;

import "flexport/rulesengine/options/v1/options.proto";

option java_multiple_files = true;
option java_outer_classname = "SendCcamToOitEmailApiProto";
option java_package = "com.flexport.oceanops.sendccamtooitemail.v1beta1";
option ruby_package = "Flexport::OceanOps::SendCcamToOitEmail::V1Beta1";

// SendCcamToOitEmailAPI. This is the rules to evaluate the email template to send ccam to oit.
service SendCcamToOitEmailAPI {
  option (flexport.rulesengine.options.v1.rule_facade).service_name = "ocean_ops";
  // Get everything including to, cc, title, content of the email.
  rpc Template(TemplateRequest) returns (TemplateResponse) {
    option (flexport.rulesengine.options.v1.rule).api_name = "com.flexport.oceanops.sendccamtooitemail.template";
    option (flexport.rulesengine.options.v1.rule).description = "email template for ccam work item";
    option (flexport.rulesengine.options.v1.rule).tolerate_evaluation_error = false;
    option (flexport.rulesengine.options.v1.rule).workspace = "ocean_ops";
    option (flexport.rulesengine.options.v1.rule_set).use = true;
  }
}

message TemplateRequest {
  option (flexport.rulesengine.options.v1.message_description) = "Email Template Request";
  string sender_email = 1;
  string sender_name = 2;
  string flex_id = 3;
  string booking_number = 4;
  string carrier_name = 5;
  string vessel_name = 6;
  string tracking_number = 7;
  string service_string = 8;
  string contract_number = 9;
  string carrier_scac_code = 10;
  int32 day_of_week = 11;
}

message TemplateResponse {
  option (flexport.rulesengine.options.v1.message_description) = "Email Template Response";
  repeated string to = 1 [
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  repeated string cc = 2 [
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  string subject = 3 [
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  string content1 = 4 [
    (flexport.rulesengine.options.v1.field_component) = {
      text_area: {
        min_rows: 5
      }
    },
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  string content2 = 5 [
    (flexport.rulesengine.options.v1.field_component) = {
      text_area: {
        min_rows: 5
      }
    },
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  string content3 = 6 [
    (flexport.rulesengine.options.v1.field_component) = {
      text_area: {
        min_rows: 5
      }
    },
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  string content4 = 7 [
    (flexport.rulesengine.options.v1.field_component) = {
      text_area: {
        min_rows: 5
      }
    },
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  int32 priority = 8 [(flexport.rulesengine.options.v1.optional_output) = true];
}
