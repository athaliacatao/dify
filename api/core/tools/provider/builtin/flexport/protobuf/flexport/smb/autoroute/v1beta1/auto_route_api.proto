// TEAM: tetrominos

syntax = "proto3";

package flexport.smb.autoroute.v1beta1;

import "flexport/commerce/merchandising/catalog/data_authority/offering/v1beta1/offering.proto";
import "flexport/quoting/rfq/v2/rfq.proto";

option java_multiple_files = true;
option java_outer_classname = "AutoRouteApiProto";
option java_package = "com.flexport.smb.autoroute.v1beta1";
option ruby_package = "Flexport::Smb::AutoRoute::V1Beta1";

// API for auto route
service AutoRouteAPI {
  // Find LCL offerings for quote request.
  rpc ListLclOfferingsForRfq(ListLclOfferingsForRfqRequest) returns (ListLclOfferingsForRfqResponse);
}

enum OfferingType {
  OFFERING_TYPE_INVALID = 0;
  OFFERING_TYPE_FASTEST = 1;
  OFFERING_TYPE_CHEAPEST = 2;
  OFFERING_TYPE_PREFERRED = 3;
}

message ListLclOfferingsForRfqRequest {
  quoting.rfq.v2.Rfq rfq = 1;
  repeated OfferingType offering_type = 2;
}

message StitchedBundle {
  OfferingType offering_type = 1;
  repeated flexport.commerce.merchandising.catalog.data_authority.offering.v1beta1.Offering offerings = 2;
}

message ListLclOfferingsForRfqResponse {
  /** DO NOT USE **/
  repeated flexport.commerce.merchandising.catalog.data_authority.offering.v1beta1.Offering fastest_offerings = 1;
  /** DO NOT USE **/
  repeated flexport.commerce.merchandising.catalog.data_authority.offering.v1beta1.Offering cheapest_offerings = 2;
  repeated StitchedBundle bundles = 3;
}
