// TEAM: customs_platform
syntax = "proto3";

package flexport.customs.declaration.eu.common.v1beta1;

option java_multiple_files = true;
option java_package = "com.flexport.customs.declaration.eu.common.v1beta1";
option ruby_package = "Flexport::Customs::Declaration::EU::Common::V1Beta1";

// Union codes for the different types of transport means.
// The enum values represent the codes.
enum TransportMeansIdType {
  TRANSPORT_MEANS_ID_TYPE_INVALID = 0;
  TRANSPORT_MEANS_ID_TYPE_IMO_SHIP_ID = 10;
  TRANSPORT_MEANS_ID_TYPE_VESSEL_NAME = 11;
  TRANSPORT_MEANS_ID_TYPE_WAGON_NUMBER = 20;
  TRANSPORT_MEANS_ID_TYPE_ROAD_VEHICLE_REGISTRATION = 30;
  TRANSPORT_MEANS_ID_TYPE_IATA_FLIGHT_NUMBER = 40;
  TRANSPORT_MEANS_ID_TYPE_AIRCRAFT_REGISTRATION = 41;
  TRANSPORT_MEANS_ID_TYPE_ENI_CODE = 80;
  TRANSPORT_MEANS_ID_TYPE_NAME_INLAND_WATERWAY_VESSEL = 81;
}

// [Data Element: 19 06 000 000]
message ArrivalTransportMeans {
  // [Data Element: 19 06 061 000]
  TransportMeansIdType type = 1;

  // [Data Element: 19 06 017 000]
  string id = 2;
}

// [Data Element: 19 08 000 000]
message ActiveBorderTransportMeans {
  // [Data Element: 19 08 062 000]
  string nationality = 1;
}
