// TEAM: customs_platform

syntax = "proto3";

package flexport.customs.taskmanager.task.v1;

import "flexport/customs/productlibrary/common/v1beta1/country_code.proto";

option java_multiple_files = true;
option java_outer_classname = "TaskTypeProto";
option java_package = "com.flexport.customs.taskmanager.task.v1";
option ruby_package = "Flexport::Customs::TaskManager::Task::V1";

message TaskType {
  oneof task_type {
    // Customs Clearance (1xxx)
    HBLDateLadenOnBoardIncorrect hbl_date_laden_on_board_incorrect = 1100;
    CITotalQuantityIncorrect ci_total_quantity_incorrect = 1200;
    CILICountryOfOriginIncorrect cili_country_of_origin_incorrect = 1300;
    CILIQuantityIncorrect cili_quantity_incorrect = 1310;
    // ISF (14xx)
    IsfRequiredDataMissing isf_required_data_missing = 1400;
    IsfBillNotOnFile isf_bill_not_on_file = 1401;
    IsfIncorrectBillType isf_incorrect_bill_type = 1402;
    IsfExistingDuplicateIsf isf_existing_duplicate_isf = 1403;
    IsfRejectedByCbp isf_rejected_by_cbp = 1404;
    // CFO (15xx)
    CFOEtdOrEtaMissing cfo_etd_or_eta_missing = 1500;
    //CFOMissingContainers cfo_missing_containters = 1510;
    CFOPortsMissing cfo_ports_missing = 1520;
    CFOInvolvedPartiesNotSet cfo_involved_parties_not_set = 1530;
    CFOForwardingAgentNotSet cfo_forwarding_agent_not_set = 1540;
    CFOManifestQuantityMismatch cfo_manifest_quantity_mismatch = 1550;
    // CPO (16xx)
    CPOPortsMissing cpo_ports_missing = 1600;
    CPOForwardingAgentNotSet cpo_forwarding_agent_not_set = 1601;
    //Product Library (20XX)
    ProductClassificationIncomplete product_classification_incomplete = 2001;
    ProductClassificationMoreInfoNeeded product_classification_more_info_needed = 2005;
    ProductClassificationPendingAudit product_classification_pending_audit = 2011;
    ProductSpecialTariffs301Incomplete product_special_tariffs_301_incomplete = 2015;
    ProductCottonFeesIncomplete product_cotton_fees_incomplete = 2021;
  }
}

message CILICountryOfOriginIncorrect {
  string commercial_invoice_fid = 1;
}

message CILIQuantityIncorrect {
  string commercial_invoice_fid = 1;
}

message HBLDateLadenOnBoardIncorrect {}

message CITotalQuantityIncorrect {}

message IsfRequiredDataMissing {
  message InvalidField {
    // This should contain a JsonPath reference to field of the ISF entity as per ADR-9
    string field = 1;
    string message = 2;
  }

  repeated InvalidField invalid_fields = 1;
}

message IsfBillNotOnFile {}

message IsfIncorrectBillType {}

message IsfExistingDuplicateIsf {}

message IsfRejectedByCbp {}

message CFOEtdOrEtaMissing {}

//message CFOMissingContainers {}

message CFOPortsMissing {}

message CFOInvolvedPartiesNotSet {}

message CFOForwardingAgentNotSet {}

message CPOPortsMissing {}

message CPOForwardingAgentNotSet {}

message CFOManifestQuantityMismatch {}

message ProductClassificationIncomplete {
  flexport.customs.productlibrary.common.v1beta1.CountryCode country_of_import = 1;
  flexport.customs.productlibrary.common.v1beta1.CountryCode country_of_origin = 2;
}

message ProductClassificationMoreInfoNeeded {
  flexport.customs.productlibrary.common.v1beta1.CountryCode country_of_import = 1;
  flexport.customs.productlibrary.common.v1beta1.CountryCode country_of_origin = 2;
}

message ProductClassificationPendingAudit {
  flexport.customs.productlibrary.common.v1beta1.CountryCode country_of_import = 1;
  flexport.customs.productlibrary.common.v1beta1.CountryCode country_of_origin = 2;
}

message ProductSpecialTariffs301Incomplete {}

message ProductCottonFeesIncomplete {}
