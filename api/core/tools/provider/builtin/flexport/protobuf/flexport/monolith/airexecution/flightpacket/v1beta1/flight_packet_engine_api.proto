// TEAM: perseus

syntax = "proto3";

package flexport.monolith.airexecution.flightpacket.v1beta1;

import "flexport/airshippingdoc/flightpacket/v1beta1/flight_packet.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "FlightPacketEngineApiProto";
option java_package = "com.flexport.monolith.airexecution.flightpacket.v1beta1";
option ruby_package = "Flexport::Monolith::AirExecution::Flight::V1Beta1";

service FlightPacketAPI {
  rpc ListEngineFlightPacket(ListEngineFlightPacketRequest) returns (ListEngineFlightPacketResponse);
  rpc SaveEngineFlightPacket(SaveEngineFlightPacketRequest) returns (SaveEngineFlightPacketResponse);
  rpc GetFlightPacketToShipmentAssociation(GetFlightPacketToShipmentAssociationRequest) returns (GetFlightPacketToShipmentAssociationResponse);
  rpc GenerateEngineFlightPacketDocs(GenerateEngineFlightPacketDocsRequest) returns (GenerateEngineFlightPacketDocsResponse);
}

message ListEngineFlightPacketRequest {
  string mawb_number = 1;
}

message ListEngineFlightPacketResponse {
  flexport.airshippingdoc.flightpacket.v1beta1.FlightPacket flight_packet = 1;
  repeated string errors = 2;
}

message SaveEngineFlightPacketRequest {
  flexport.airshippingdoc.flightpacket.v1beta1.FlightPacket flight_packet = 1;
  string mawb_number = 2;
  string user_fid = 3;
}

message SaveEngineFlightPacketResponse {
  string mawb_number = 1;
  repeated string errors = 2;
}

message GetFlightPacketToShipmentAssociationRequest {
  string flight_packet_id = 1; // Required. In engine it is air_carrier_booking_booking_id.
}

message BookingToShipment {
  int64 id = 1;
  int32 flight_packet_id = 2;
  int32 shipment_id = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  google.protobuf.Timestamp deleted_at = 6;
}

message GetFlightPacketToShipmentAssociationResponse {
  BookingToShipment booking_to_shipment = 1;
  repeated string errors = 2;
}

message GenerateEngineFlightPacketDocsRequest {
  flexport.airshippingdoc.flightpacket.v1beta1.FlightPacketEngineBooking booking = 1;
  bool should_publish = 2;
  string executed_by = 3;
}

message GenerateEngineFlightPacketDocsResponse {
  flexport.airshippingdoc.flightpacket.v1beta1.FlightPacketDocuments flight_packet_documents = 1;
  repeated string errors = 2;
}
