// TEAM: sutro

syntax = "proto3";

package flexport.executionmilestones.customsdeclarationstate.v1beta1;

import "flexport/executioncoordinator/executionoffering/v1/valueadded/import_customs_execution_offering.proto";
import "flexport/forwardingcustomsmanager/export/customsdeclaration/enums/v1beta1/automated_export_system.proto";
import "flexport/monolith/customs/v1beta1/customs_status_api.proto";
import "flexport/monolith/customs/v1beta1/declaration_filing_process_service.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_outer_classname = "CustomsDeclarationStateProto";
option java_package = "com.flexport.executionmilestones.customsdeclarationstate.v1beta1";
option ruby_package = "Flexport::ExecutionMilestones::CustomsDeclarationState::V1Beta1";

// Customs declaration state to store in the Execution Milestone Service.
message CustomsDeclarationState {
  repeated flexport.monolith.customs.v1beta1.DeclarationFilingProcess declaration_filing_process = 1;
  string shipment_fid = 2;
  IsfInfo isf_info = 3;
  AmsInfo ams_info = 4;
  AesInfo aes_info = 5 [deprecated = true]; // removed
  repeated AesFilingInfo aes_filing_infos = 6;
  repeated CustomsStatus customs_status = 7;
  repeated SliDigitizationStatus sli_digitization_status = 8;
  // The manual work status for the shipment. key is the manual work type.value is if it has been completed.
  map<string, ManualWorkStatus> manual_work_status = 9;
  // The ENS filing state for the shipment.
  EnsInfo ens_info = 10;
}

message ManualWorkStatus {
  bool is_completed = 1;
  string last_updated_by = 2;
  google.protobuf.Timestamp last_updated_at = 3;
}

enum ManualWorkType {
  MANUAL_WORK_TYPE_INVALID = 0;
  MANUAL_WORK_TYPE_PACKING_DECLARATION_VALIDATION = 1;
}

message CustomsStatus {
  int32 origin_address_id = 1;
  int32 destination_address_id = 2;
  int32 carrier_id = 4;
  google.protobuf.Timestamp status_updated_at = 5;
  flexport.monolith.customs.v1beta1.CustomsTopLevelStatus top_level_status = 6;
  repeated flexport.monolith.customs.v1beta1.CustomsSubLevelStatusEntry sub_level_status = 7;
}

message AesFilingInfo {
  string itn_number = 1;
  string fid = 2;
  string broker_comment = 3;

  reserved 4 to 20;

  google.protobuf.Timestamp updated_at = 21;
  string updated_by_user_fid = 22;
  flexport.forwardingcustomsmanager.export.customsdeclaration.enums.v1beta1.AesFilingStatus aes_filing_status = 23;
}

message SliDigitizationStatus {
  int64 document_id = 1;

  bool is_confirmed = 11;
  optional int32 confirmed_by = 12;

  bool is_archived = 21;
  google.protobuf.Timestamp updated_at = 22;
  int32 version = 23;
}

// will be remove soon
message AesInfo {
  option deprecated = true;

  repeated ItnInfo itn_infos = 1;
}

// will be remove soon
message ItnInfo {
  option deprecated = true;

  string itn_number = 1;
  string last_updated_by = 2;
}

// The state to store ISF declaration state data for the shipment.
message IsfInfo {
  IsfType isf_file_type = 1;
  google.protobuf.Timestamp isf_due_date = 2;

  // recommended way: ExecutionOrder -> ValueAddedOfferings -> ImportCustoms -> ImporterSecurityFilingRole
  flexport.executioncoordinator.executionoffering.v1.ImporterSecurityFilingRole isf_role = 3 [deprecated = true];
  bool mark_as_completed = 4;
  string last_updated_by_fid = 5;
  IsfFilingStatus isf_filing_status = 6;
}

// ISF type need to file.
enum IsfType {
  ISF_TYPE_INVALID = 0;
  ISF_TYPE_NOT_NEEDED = 1;
  ISF_TYPE_10 = 2;
  ISF_TYPE_5 = 3;
}

enum IsfFilingStatus {
  ISF_FILING_STATUS_INVALID = 0;
  ISF_FILING_STATUS_FILED_ONLINE = 1;
  ISF_FILING_STATUS_ACCEPTED_ONLINE = 2;
  ISF_FILING_STATUS_OTHER_ONLINE = 3;
}

// The state to store AMS filing state data of a shipment
message AmsInfo {
  PortOfCalling port_of_calling = 1;
  AmsFilingTypesCombination ams_filing_types = 2;
  repeated HblLevelFilingData hbl_level_filing_data = 3;
  string last_updated_by_fid = 4;
}

// Port of calling in route
enum PortOfCalling {
  PORT_OF_CALLING_INVALID = 0;
  PORT_OF_CALLING_US = 1;
  PORT_OF_CALLING_CA = 2;
  PORT_OF_CALLING_OTHER = 3;
}

// The combination of AMS filing types
enum AmsFilingTypesCombination {
  AMS_FILING_TYPES_COMBINATION_INVALID = 0;
  AMS_FILING_TYPES_COMBINATION_AMS_ONLY = 1;
  AMS_FILING_TYPES_COMBINATION_ACI_ONLY = 2;
  AMS_FILING_TYPES_COMBINATION_EMANIFEST_ONLY = 3;
  AMS_FILING_TYPES_COMBINATION_AFR_ONLY = 4;
  AMS_FILING_TYPES_COMBINATION_AMS_ACI = 5;
  AMS_FILING_TYPES_COMBINATION_AMS_EMANIFEST = 6;
}

// The AMS filing status
enum AmsFilingStatus {
  AMS_FILING_STATUS_INVALID = 0;
  AMS_FILING_STATUS_FILED_ONLINE = 1;
  AMS_FILING_STATUS_MATCHED_ONLINE = 2;
  AMS_FILING_STATUS_ERROR_ONLINE = 3;
  AMS_FILING_STATUS_FILED_OFFLINE = 4;
  AMS_FILING_STATUS_MATCHED_OFFLINE = 5;
  AMS_FILING_STATUS_NOT_FILED = 6;
  AMS_FILING_STATUS_SENT_TRADE_TECH_OFFLINE = 7;
  AMS_FILING_STATUS_UNDEFINED_ONLINE = 8;
}

// AMS filing is executed per hbl level, this is used to record filing data per hbl.
message HblLevelFilingData {
  string hbl_number = 1;
  AmsFilingStatus latest_filing_status = 2;
  google.protobuf.Timestamp last_updated_at = 3;
}

// ENS filing is executed per hbl level, this is used to record filing data per hbl.
message HblLevelEnsFilingData {
  string hbl_number = 1;
  EnsFilingStatus latest_filing_status = 2;
  google.protobuf.Timestamp last_updated_at = 3;
}

// The state to store ENS filing state data for shipment
message EnsInfo {
  repeated HblLevelEnsFilingData hbl_level_filing_data = 1;
  string last_updated_by_fid = 2;
}

enum EnsFilingStatus {
  ENS_FILING_STATUS_INVALID = 0;
  ENS_FILING_STATUS_FILED_OFFLINE = 1;
  ENS_FILING_STATUS_MATCHED_OFFLINE = 2;
  ENS_FILING_STATUS_NOT_FILED = 3;
}
