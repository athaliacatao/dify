// TEAM: service_catalog

syntax = "proto3";

package flexport.commerce.search.events.v1beta1;

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

option java_multiple_files = true;
option java_outer_classname = "EventWrapperProto";
option java_package = "com.flexport.commerce.search.events.v1beta1";
option ruby_package = "Flexport::Commerce::Search::Events::V1Beta1";

// Wrapper for Commerce Search events.
message EventWrapper {
  ProducerSource source = 1;
  string entity_fid = 2;
  string idempotency_key = 3;
  // Validate against format indicator after unwrapping data
  google.protobuf.Struct body = 6;
  optional google.protobuf.Any entity_body = 7;
  // Validation instructions for the enclosed data.
  oneof format_indicator {
    // Consumer has access to the schema.
    // Resource which could be indicated by version number, namespace, or schema version.
    string format_schema_id = 101;
    // Consumer doesn't have access to schema (or schema has evolved).
    // Validation schema is provided and should be stored.
    google.protobuf.Struct format_schema = 102;
  }
}

// Type of producer source.
enum ProducerSource {
  PRODUCER_SOURCE_INVALID = 0;
  PRODUCER_SOURCE_CORE = 1;
  PRODUCER_SOURCE_CATALOG_DATA_AUTHORITY = 2;
}
