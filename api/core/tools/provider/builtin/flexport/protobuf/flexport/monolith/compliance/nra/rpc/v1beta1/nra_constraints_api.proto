// TEAM: kingsroad

syntax = "proto3";

package flexport.monolith.compliance.nra.rpc.v1beta1;

import "flexport/monolith/compliance/nra/rpc/v1beta1/nra_constraints.proto";

option java_multiple_files = true;
option java_outer_classname = "NraConstraintsProto";
option java_package = "com.flexport.monolith.compliance.nra.rpc.v1beta1";
option ruby_package = "Flexport::Monolith::Compliance::Nra::Rpc::V1Beta1";

// API for NraConstraints
service NraConstraintsAPI {
  rpc GetNraConstraintsByShipmentFid(GetNraConstraintsByShipmentFidRequest) returns (GetNraConstraintsByShipmentFidResponse);
  rpc GetNraConstraintsByPortIds(GetNraConstraintsByPortIdsRequest) returns (GetNraConstraintsByPortIdsResponse);
}

message GetNraConstraintsByShipmentFidRequest {
  string shipment_fid = 1;
}

message GetNraConstraintsByShipmentFidResponse {
  bool exists = 1;
  NraConstraints nra_constraints = 2;
}

message GetNraConstraintsByPortIdsRequest {
  int32 place_of_receipt_port_id = 1;
  int32 port_of_loading_port_id = 2;
  int32 port_of_unloading_port_id = 3;
  int32 place_of_delivery_port_id = 4;
}

message GetNraConstraintsByPortIdsResponse {
  NraConstraints port_constraints = 1;
}
