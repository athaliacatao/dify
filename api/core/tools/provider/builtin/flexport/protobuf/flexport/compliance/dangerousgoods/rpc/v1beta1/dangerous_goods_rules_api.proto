// TEAM: compliance

syntax = "proto3";

package flexport.compliance.dangerousgoods.rpc.v1beta1;

import "flexport/compliance/dangerousgoods/constant/v1beta1/dangerous_goods_packing_instructions_type.proto";
import "flexport/compliance/dangerousgoods/constant/v1beta1/dg_review_status.proto";
import "flexport/rulesengine/options/v1/options.proto";

option java_multiple_files = true;
option java_outer_classname = "DangerousGoodsRulesApiProto";
option java_package = "com.flexport.compliance.dangerousgoods.rpc.v1beta1";
option ruby_package = "Flexport::Compliance::DangerousGoods::Rpc::V1Beta1";

// DangerousGoodsRulesAPI. The rules to evaluate data from dangerous goods review and classifications.
service DangerousGoodsRulesAPI {
  option (flexport.rulesengine.options.v1.rule_facade).service_name = "dangerous_goods";
  // GenerateInstructions. Create human readable dangerous goods instructions for a shipment.
  rpc GenerateInstructions(GenerateInstructionsRequest) returns (GenerateInstructionsResponse) {
    option (flexport.rulesengine.options.v1.decision_table).use = true;
    option (flexport.rulesengine.options.v1.rule).allow_evaluation_from_frontend = true;
    option (flexport.rulesengine.options.v1.rule).api_name = "com.flexport.compliance.dangerousgoods.generateinstructions";
    option (flexport.rulesengine.options.v1.rule).description = "Generates human readable dangerous goods instructions for the shipment.";
    option (flexport.rulesengine.options.v1.rule).tolerate_evaluation_error = false;
    option (flexport.rulesengine.options.v1.rule).workspace = "dangerous_goods";
    option (flexport.rulesengine.options.v1.rule_set).use = true;
  }
}

message GenerateInstructionsRequest {
  option (flexport.rulesengine.options.v1.message_description) = "Generate Instructions Request";
  bool is_dangerous = 1;
  string un_code = 2;
  string packing_instructions = 3;
  string section = 4;
  repeated string special_provisions = 5;
  int32 package_count = 6;
  bool excepted_quantities = 7;
  bool limited_quantities = 8;
  string cargo_details = 9;
  string dg_class = 10;
  flexport.compliance.dangerousgoods.constant.v1beta1.DangerousGoodsReviewStatus review_status = 11;
  bool is_air = 12;
  flexport.compliance.dangerousgoods.constant.v1beta1.DangerousGoodsPackingInstructionsType packing_instructions_type = 13;
}

message GenerateInstructionsResponse {
  option (flexport.rulesengine.options.v1.message_description) = "Generate Instructions Response";
  bool success = 1;
  string handling_info = 2 [
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  string nature_and_quantity_of_goods = 3 [
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
  string carrier_booking_instructions = 4 [
    (flexport.rulesengine.options.v1.optional_output) = true,
    (flexport.rulesengine.options.v1.template_type) = TEMPLATE_TYPE_SPEL
  ];
}
