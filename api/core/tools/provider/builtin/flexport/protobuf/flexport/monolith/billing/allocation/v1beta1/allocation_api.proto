// TEAM: billing

syntax = "proto3";

package flexport.monolith.billing.allocation.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "AllocationApiProto";
option java_package = "com.flexport.monolith.billing.allocation.v1beta1";
option ruby_package = "Flexport::Monolith::Billing::Allocation::V1Beta1";

import "flexport/billing/util/v1beta1/error_result.proto";
import "flexport/monolith/billing/allocation/v1beta1/shipment_allocation.proto";

// An API to retrieve Bill allocations.
service AllocationAPI {
  // Retrieves shipment FIDs by allocation references.
  rpc GetShipmentAllocation(GetShipmentAllocationRequest) returns (GetShipmentAllocationResponse);
  // Expands consol shipments to child shipments.
  rpc ExpandConsolShipments(ExpandConsolShipmentsRequest) returns (ExpandConsolShipmentsResponse);
}

// The request to retrieve shipment allocations.
message GetShipmentAllocationRequest {
  string vendor_fid = 1;
  repeated string shipment_fids = 2;
  repeated string bill_of_lading_numbers = 3;
  repeated string container_numbers = 4;
}

// The response for retrieving shipment allocations.
message GetShipmentAllocationResponse {
  oneof result {
    flexport.monolith.billing.allocation.v1beta1.ShipmentAllocation success_result = 1;
    flexport.billing.util.v1beta1.ErrorResult failure_result = 2;
  }
}

// The request to expand consol shipments.
message ExpandConsolShipmentsRequest {
  repeated string shipment_fids = 1;
}

// The response for expanded consol shipments.
message ExpandConsolShipmentsResponse {
  oneof result {
    flexport.monolith.billing.allocation.v1beta1.ShipmentAllocation success_result = 1;
    flexport.billing.util.v1beta1.ErrorResult failure_result = 2;
  }
}
