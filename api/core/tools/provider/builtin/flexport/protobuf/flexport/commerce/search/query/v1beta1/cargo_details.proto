// TEAM: service_catalog

syntax = "proto3";

package flexport.commerce.search.query.v1beta1;

import "flexport/commerce/fpos/v1beta1/container_size_general_name.proto";
import "flexport/commerce/fpos/v1beta1/cuboid.proto";
import "flexport/commerce/fpos/v1beta1/physical_mass_quantity.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "CargoDetailsProto";
option java_package = "com.flexport.commerce.search.query.v1beta1";
option ruby_package = "Flexport::Commerce::Search::Query::V1Beta1";

message CargoDetails {
  // FCL requires container counts input
  repeated ContainerCount container_counts = 1;
  // LCL and Air requires weight and volume input
  optional flexport.commerce.fpos.v1beta1.PhysicalMassQuantity weight = 2;
  optional flexport.commerce.fpos.v1beta1.Cuboid volume = 3;
  repeated CargoUnitType cargo_unit_types = 4;

  // If provided, this will be used for filtering instead of `weight`
  optional flexport.commerce.fpos.v1beta1.PhysicalMassQuantity chargeable_weight = 5;
}

message ContainerCount {
  flexport.commerce.fpos.v1beta1.ContainerSizeGeneralName container_size = 1;
  google.protobuf.Int32Value quantity = 2;
}

enum CargoUnitType {
  CARGO_UNIT_TYPE_INVALID = 0;
  CARGO_UNIT_TYPE_PALLET = 1;
  CARGO_UNIT_TYPE_CARTON = 2;
  CARGO_UNIT_TYPE_BAG = 3;
  CARGO_UNIT_TYPE_BALE = 4;
  CARGO_UNIT_TYPE_BARREL = 5;
  CARGO_UNIT_TYPE_CRATE = 6;
  CARGO_UNIT_TYPE_ROLL = 7;
  CARGO_UNIT_TYPE_ISO6346_CONTAINER = 8;
  CARGO_UNIT_TYPE_ULD = 9;
  CARGO_UNIT_TYPE_PRODUCT = 10;
  CARGO_UNIT_TYPE_PACKAGE = 11;
  CARGO_UNIT_TYPE_BOX = 12;
  CARGO_UNIT_TYPE_DRUM = 13;
  CARGO_UNIT_TYPE_BUNDLE = 14;
  CARGO_UNIT_TYPE_BULK = 15;
  CARGO_UNIT_TYPE_TOTE = 16;
  CARGO_UNIT_TYPE_SKID = 17;
  CARGO_UNIT_TYPE_PIECE = 18;
  CARGO_UNIT_TYPE_CASE = 19;
  CARGO_UNIT_TYPE_PAIL = 20;
  CARGO_UNIT_TYPE_SET = 21;
  CARGO_UNIT_TYPE_BIN = 22;
  CARGO_UNIT_TYPE_SACK = 23;
}
