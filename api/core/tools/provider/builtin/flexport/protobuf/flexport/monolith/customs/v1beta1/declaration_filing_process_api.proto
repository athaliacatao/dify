// TEAM: customs_platform

syntax = "proto3";

package flexport.monolith.customs.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "DeclarationFilingProcessApiProto";
option java_package = "com.flexport.monolith.customs.v1beta1";
option ruby_package = "Flexport::Monolith::Customs::V1Beta1";

import "flexport/monolith/customs/v1beta1/declaration_filing_process_service.proto";

// API for requesting customs declaration filing processes.
service DeclarationFilingProcessAPI {
  // List all declaration filing processes to be fulfilled by partners for an execution order.
  rpc ListPartnerDeclarationFilingProcesses(ListPartnerDeclarationFilingProcessesRequest) returns (ListPartnerDeclarationFilingProcessesResponse);
}

message ListPartnerDeclarationFilingProcessesRequest {
  string shipment_fid = 1;
}

message ListPartnerDeclarationFilingProcessesResponse {
  // Boolean which indicates whether declaration filing process for partners have been planned.
  // If this boolean is false and the list of declaration filing process is empty: declarations will be planned/appear at a later moment in time.
  // If this boolean is true and the list of declaration filing process is empty: there is no requirement for declarations, none will appear at a later moment time.
  bool declaration_filing_processes_planned = 1;
  // Returns all declaration filing processes that will or have been fulfilled by partners.
  repeated DeclarationFilingProcess declaration_filing_processes = 2;
}
