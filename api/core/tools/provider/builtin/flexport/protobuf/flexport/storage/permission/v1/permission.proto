// TEAM: document_intelligence

syntax = "proto3";

package flexport.storage.permission.v1;

option java_multiple_files = true;
option java_outer_classname = "PermissionProto";
option java_package = "com.flexport.storage.permission.v1";
option ruby_package = "Flexport::Storage::Permission::V1";

// Object used to define a permission rule for a file object. The permission is
// evaluated against an actor in the Authorization service. Permission to
// perform an action (action_type = 1) is granted iff one of the rules (rules = 2)
// evaluate to true.
message Permission {
  // The types of actions performed on a file object.
  enum ActionType {
    // This is an invalid action type. Do not use this.
    ACTION_TYPE_INVALID = 0;
    // The action to allow an actor to update the permission rules.
    ACTION_TYPE_PERMISSION = 1;
    // The action to allow an actor to read a file object.
    ACTION_TYPE_READ = 2;
    // The action to allow an actor to update and write a file object.
    ACTION_TYPE_UPDATE = 3;
    // The action to allow an actor to archive a file object.
    ACTION_TYPE_ARCHIVE = 4;
    // The action to allow an actor to soft-delete a file object.
    ACTION_TYPE_DELETE = 5;
    // The action to allow an actor to create a new object.
    ACTION_TYPE_CREATE = 6;
  }
  // The type of action being defined.
  ActionType action_type = 1;
  // A disjunction of rules.
  repeated Rule rules = 2;
}

// A rule determines whether an actor can perform some operation.
message Rule {
  oneof rule_type {
    PermissionRule permission_rule = 1;
    ParameterizedPermissionRule parameterized_permission_rule = 2;
  }
}

// An atomic rule that checks if an actor can operate some non-parameterized
// operation defined in the Authorization service.
message PermissionRule {
  // The operation slug as defined in the Authorization service.
  string operation_slug = 1;
}

// An atomic rule that checks if an actor can operate some parameterized
// operation defined in the Authorization service.
message ParameterizedPermissionRule {
  // The operation slug as defined in the Authorization service.
  string operation_slug = 1;
  // The resource FID to check against the operation slug.
  string resource_fid = 2;
}
