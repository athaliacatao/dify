// TEAM: bookings

syntax = "proto3";

package flexport.booking.eject.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "EjectProto";
option java_package = "com.flexport.booking.eject.v1beta1";
option ruby_package = "Flexport::Booking::Eject::V1Beta1";

import "flexport/booking/cargo/v1beta1/cargo.proto";
import "flexport/booking/enums/declared_as_dangerous/v1beta1/declared_as_dangerous.proto";
import "flexport/os/v1/types/incoterm/v1/incoterm.proto";

// A snapshot of a booking in the booking service. This is used to sync the
// booking data to the monolith.
message Booking {
  string fid = 1;
  int32 flex_id = 2;
  string name = 3;
  // :WHO:
  // Company entity corresponding to the recipient of the shipment's goods.
  string consignee_entity_fid = 4;
  // Company shipping the goods.
  string shipper_entity_fid = 5;
  // Defines who is responsible for payment of which parts of the shipment.
  flexport.os.v1.types.incoterm.v1.Incoterm incoterm = 6;
  // :WHAT:
  // Info about the packages in the shipment
  flexport.booking.cargo.v1beta1.Cargo cargo = 7;
  // How many of each size container is being shipped.
  ContainerCounts container_counts = 8;
  // How much of the shipment is dangerous goods (see enum options).
  flexport.booking.enums.declaredasdangerous.v1beta1.DeclaredAsDangerous declared_as_dangerous = 9;
  HkStrategicCommoditiesOption declared_contains_hk_strategic_commodities = 10;
  string description_of_products = 11;
  string eccn_codes = 12;
  int32 estimated_commercial_invoice_value = 13;
  // List of all HS codes in this shipment.
  repeated string product_hs_codes = 14;
  // :WHEN:
  string cargo_ready_date = 15;
  string target_delivery_date = 16;
  // :WHERE:
  // Final destination address.
  string destination_address_fid = 17;
  // Origin address
  string origin_address_fid = 18;
  string port_of_loading_fid = 19;
  string port_of_unloading_fid = 20;
  // :HOW:
  bool air = 21;
  bool ocean_fcl = 22;
  bool ocean_lcl = 23;
  bool truck_ltl = 24;
  bool truck_ftl = 25;
  bool wants_delivery_service = 26;
  bool wants_export_customs_service = 27;
  bool wants_pickup_service = 28;
  bool wants_hk_export_trade_declaration_service = 29;
}

// Whether the booking includes items that may be classified as "strategic
// commodities" in Hong Kong. Strategic commodities are defined in "Schedules
// to the Import and Export (Strategic Commodities) Regulations, Chapter 60G,
// Laws of Hong Kong."
enum HkStrategicCommoditiesOption {
  HK_STRATEGIC_COMMODITIES_OPTION_INVALID = 0;
  HK_STRATEGIC_COMMODITIES_OPTION_YES = 1;
  HK_STRATEGIC_COMMODITIES_OPTION_NO = 2;
  HK_STRATEGIC_COMMODITIES_OPTION_NOTSURE = 3;
}

// How many of what size containers the shipment has.
message ContainerCounts {
  int32 twenty_foot = 1;
  int32 forty_foot = 2;
  int32 forty_foot_high_cube = 3;
  int32 forty_five_foot_high_cube = 4;
}
