// TEAM: work_management

syntax = "proto3";

package flexport.workitems.queueentryservice.v1beta1;

import "flexport/workitems/entityevent/v1/queue_entry_entity.proto";
import "google/protobuf/wrappers.proto";

option java_multiple_files = true;
option java_outer_classname = "QueueEntryServiceApiProto";
option java_package = "com.flexport.workitems.queueentryservice.v1beta1";
option ruby_package = "Flexport::WorkItems::QueueEntryService::V1Beta1";

// DO NOT USE !!
// This is a temporary service API for missing assignment report,
// and will be removed after migration.

// Service API for queue entry.
service QueueEntryServiceAPI {
  // Fetches queue entries from a work queue.
  rpc GetQueueEntries(GetQueueEntriesRequest) returns (GetQueueEntriesResponse);
}

// Not aligned with Google's https://google.aip.dev/158 due to implementation
// Try to align with behaviour of GraphQL
message GetQueueEntriesRequest {
  string queue_name = 1;
  QueueEntriesInput queue_entries_input = 2;
  int32 page_size = 3;
  google.protobuf.StringValue after_cursor = 4;
  UpstreamService upstream_service_name = 5;
}

message GetQueueEntriesResponse {
  repeated flexport.workitems.entityevent.v1.QueueEntryEntity queue_entries = 1;
  bool has_next_page = 2;
  google.protobuf.StringValue end_cursor = 3;
  int32 total_count = 4;
}

// Input for fetching queue entries.
message QueueEntriesInput {
  string filter_values = 1;
  google.protobuf.BoolValue fetch_entries_assigned_to_actor_teams_only = 2;
  int32 maximum_count = 3;
  google.protobuf.StringValue sort_by = 4;
  SortOrderWrapper sort_order = 5;
  // QueueEntries correspond to users, and this field is an
  // alternative to Authorization.currentUserClaims.
  repeated string topic_fids = 6;
}

message SortOrderWrapper {
  SortOrder value = 1;
}

enum SortOrder {
  SORT_ORDER_INVALID = 0;
  SORT_ORDER_ASC = 1;
  SORT_ORDER_DESC = 2;
}

enum UpstreamService {
  UPSTREAM_SERVICE_INVALID = 0;
  UPSTREAM_SERVICE_UNSPECIFIED = 1;
  UPSTREAM_SERVICE_ASSIGNMENT = 2;
}
