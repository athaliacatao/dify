// TEAM: trucking_planning

syntax = "proto3";

package flexport.monolith.trucking.v1beta1;

import "flexport/monolith/trucking/v1beta1/carrier_capabilities.proto";

option java_multiple_files = true;
option java_outer_classname = "CarrierCapabilitiesApiProto";
option java_package = "com.flexport.monolith.trucking.v1beta1";
option ruby_package = "Flexport::Monolith::Trucking::V1Beta1";

// API to retrieve trucking carrier capabilities
service CarrierCapabilitiesAPI {
  // Returns all carrier capabilities that correspond to the provided search parameters.
  rpc ListCarrierCapabilities(ListCarrierCapabilitiesRequest) returns (ListCarrierCapabilitiesResponse);

  // Returns a map of markets to corresponding carrier capabilities.
  rpc BatchListCarrierCapabilities(BatchListCarrierCapabilitiesRequest) returns (BatchListCarrierCapabilitiesResponse);
}

message ListCarrierCapabilitiesRequest {
  trucking.v1beta1.HaulType haul_type = 1;
  oneof market_identifier {
    string address_fid = 2;
    int32 market_id = 3;
  }
}

message ListCarrierCapabilitiesResponse {
  repeated trucking.v1beta1.CarrierCapabilities carrier_capabilities = 1;
}

message AddressFids {
  repeated string values = 1;
}

message MarketIds {
  repeated int32 values = 1;
}

message BatchListCarrierCapabilitiesRequest {
  trucking.v1beta1.HaulType haul_type = 1;
  oneof market_identifier {
    AddressFids address_fids = 2;
    MarketIds market_ids = 3;
  }
}

message BatchListCarrierCapabilitiesResponse {
  map<string, ListCarrierCapabilitiesResponse> markets_to_carrier_capabilities = 1;
}
