// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.types.query.v1;

option java_multiple_files = true;
option java_outer_classname = "DistinctOnProto";
option java_package = "com.flexport.executioncoordinator.types.query.v1";
option ruby_package = "Flexport::ExecutionCoordinator::Types::Query::V1";

// Enum used for sorting values in the ExecutionCoordinator list APIs. A distinct_on clause
// may be used ONLY if a matchesAny array of size exactly one is defined for one of:
// executionTaskFix, executionOrderFid, shipmentFid.
//
// These query parameters behave like PostgreSQL's DISTINCT ON clause:
// https://geekytidbits.com/postgres-distinct-on
//
// Examples:
//
// All the most recently processed events for a given shipmentFid:
//
//   list_execution_order_state_events({
//      shipment_fid: {matches_any: ["flx::core:shipment:dbid/123"]},
//      order_by: "ORDER_BY_PROCESSED_TIME_DESC",
//      distinct_on: "DISTINCT_ON_DETAILS_CASE",
//   })
//
// All the most recently processed ocean_house_bill_of_lading_updated events for a given shipmentFid:
//
//   list_execution_order_state_events({
//      shipment_fid: {matches_any: ["flx::core:shipment:dbid/123"]},
//      details_case: {matches_any: ["ocean_house_bill_of_lading_updated"]},
//      order_by: "ORDER_BY_PROCESSED_TIME_DESC",
//      distinct_on: "DISTINCT_ON_HOUSE_BILL_OF_LADING_FID",
//   })
//
// The most recently processed ocean_carrier_booking_updated event for a given executionOrderFid:
//
//   list_execution_task_state_events({
//      execution_order_fid: {matches_any: ["flx::execution_coordinator:execution_order:abc-123"]},
//      details_case: {matches_any: ["ocean_carrier_booking_updated"]},
//      order_by: "ORDER_BY_PROCESSED_TIME_DESC",
//      distinct_on: "DISTINCT_ON_DETAILS_CASE",
//   })
//
enum DistinctOn {
  DISTINCT_ON_INVALID = 0;
  //
  // For use with: ExecutionOrderStateEvent, ExecutionTaskStateEvent.
  DISTINCT_ON_DETAILS_CASE = 1;
  //
  // For use with details_case that contains bill_of_lading
  DISTINCT_ON_HOUSE_BILL_OF_LADING_FID = 2;
  //
  // For use with: ExecutionTaskStateEvent and ExecutionTaskStateEventRejected
  DISTINCT_ON_ENTRY_POINT = 3;
  //
  // For use with: ExecutionTaskStateEvent and ExecutionTaskStateEventRejected
  DISTINCT_ON_REJECTED_REASON = 4;
}
