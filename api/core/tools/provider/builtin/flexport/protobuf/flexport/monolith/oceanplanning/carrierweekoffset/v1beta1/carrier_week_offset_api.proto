// TEAM: ocean_planning

syntax = "proto3";

package flexport.monolith.oceanplanning.carrierweekoffset.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "CarrierWeekOffsetApiProto";
option java_package = "com.flexport.monolith.oceanplanning.carrierweekoffset.v1beta1";
option ruby_package = "Flexport::Monolith::OceanPlanning::CarrierWeekOffset::V1Beta1";

import "flexport/monolith/oceanplanning/carrierweekoffset/v1beta1/carrier_week_offset.proto";

// This service is used by any NIS to retrieve carrier week offsets.
service CarrierWeekOffsetAPI {
  // Get carrier weeks offset from sailing schedules by CarrierStringWeekOffsetQuery.
  rpc GetCarrierStringWeekOffsetProxy(GetCarrierStringWeekOffsetProxyRequest) returns (GetCarrierStringWeekOffsetProxyResponse);
}

// Request message to get a list of CarrierStringWeekOffset.
message GetCarrierStringWeekOffsetProxyRequest {
  // Fields to query for offsets in bulk.
  repeated CarrierStringWeekOffsetQuery offset_queries = 1;
}

// Response message containing a list of iso_week <> carrier_week translations.
message GetCarrierStringWeekOffsetProxyResponse {
  repeated CarrierStringWeekOffsets carrier_string_week_offsets = 1;
}
