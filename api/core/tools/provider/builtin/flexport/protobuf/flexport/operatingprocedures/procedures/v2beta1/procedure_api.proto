// TEAM: work_management

syntax = "proto3";

package flexport.operatingprocedures.procedures.v2beta1;

import "flexport/executioncoordinator/types/enums/v1/shipment_priority.proto";
import "flexport/operatingprocedures/procedures/v2beta1/procedure.proto";

option java_multiple_files = true;
option java_outer_classname = "ProcedureApiProto";
option java_package = "com.flexport.operatingprocedures.procedures.v2beta1";
option ruby_package = "Flexport::OperatingProcedures::Procedures::V2Beta1";

// The protocol for retrieving all procedures of a given category from the operating_procedures service.
service ProcedureAPI {
  // Retrieves a list of Procedures for a given client fid / company entity fid.
  rpc GetDestinationCoordinationProcedures(GetDestinationCoordinationProceduresRequest) returns (GetDestinationCoordinationProceduresResponse);
  // Retrieves a list of DC Procedures for a given delivery order and its properties (criteria).
  rpc GetFilteredDestinationCoordinationProcedures(GetFilteredDestinationCoordinationProceduresRequest) returns (GetFilteredDestinationCoordinationProceduresResponse);
  // Retrieves the current state of a FollowUpOnOutstandingProcedure for one client.
  rpc GetFollowUpOnOutstandingProcedure(GetFollowUpOnOutstandingProcedureRequest) returns (GetFollowUpOnOutstandingProcedureResponse);
}

// Retrieve a DestinationCoordinationProcedure for a given client_fid/company_entity_fid.
message GetDestinationCoordinationProceduresRequest {
  string client_fid = 2;
  string company_entity_fid = 3;
}

// Represents a DestinationCoordinationProcedure.
message GetDestinationCoordinationProceduresResponse {
  repeated DestinationCoordinationProcedure procedures = 1;
}

// Retrieve the DestinationCoordinationProcedures for a given set of filters
message GetFilteredDestinationCoordinationProceduresRequest {
  string client_fid = 1;
  string company_entity_fid = 2;
  ServiceType service_type = 3;
  string carrier_fid = 4;
  string delivery_location_fid = 5;
  flexport.executioncoordinator.types.enums.v1.ShipmentPriority shipment_priority = 6;
  string pick_up_location_fid = 7;
}

// Represents a DestinationCoordinationProcedure.
message GetFilteredDestinationCoordinationProceduresResponse {
  repeated DestinationCoordinationProcedure procedures = 1;
}

message GetFollowUpOnOutstandingProcedureRequest {
  string client_fid = 1;
}

message GetFollowUpOnOutstandingProcedureResponse {
  bool follow_up_on_quotes = 1;
}
