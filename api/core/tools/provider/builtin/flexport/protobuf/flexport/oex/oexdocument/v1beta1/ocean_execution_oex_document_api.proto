// TEAM: kingsroad

syntax = "proto3";

package flexport.oex.oexdocument.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "OceanExecutionOexDocumentApiProto";
option java_package = "com.flexport.oex.oexdocument.v1beta1";
option ruby_package = "Flexport::OceanExecution::OexDocument::V1Beta1";

// Internal API for Ocean Execution team to migrate data from Core to OEX NIS.
service OexDocumentAPI {
  // Put CarrierBookingBundle for backfill.
  rpc FetchOrCreateOexDocument(FetchOrCreateOexDocumentRequest) returns (FetchOrCreateOexDocumentResponse);
}

message FetchOrCreateOexDocumentRequest {
  string carrier_booking_fid = 1;
}

message FetchOrCreateOexDocumentResponse {
  string oex_document_fid = 1;
}
