// TEAM: order_management

syntax = "proto3";

package flexport.monolith.ordermanagement.order.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "EnumsProto";
option java_package = "com.flexport.monolith.ordermanagement.order.v1beta1";
option ruby_package = "Flexport::Monolith::OrderManagement::Order::V1Beta1";

// Enum for role in order party, from engines/order_management/app/constants/order_management/roles.rb.
enum OrderRole {
  ORDER_ROLE_INVALID = 0;
  ORDER_ROLE_BUYER = 1;
  ORDER_ROLE_SELLER = 2;
  ORDER_ROLE_OWNER = 3;
  ORDER_ROLE_SHIPPER = 4;
  ORDER_ROLE_CONSIGNEE = 5;
  ORDER_ROLE_FREIGHT_FORWARDER = 6;
  ORDER_ROLE_NOTIFY_PARTY = 7;
  ORDER_ROLE_CUSTOMS_BROKER = 8;
  ORDER_ROLE_CARRIER = 9;
  ORDER_ROLE_MANUFACTURER = 10;
  ORDER_ROLE_BUYERS_AGENT = 11;
  ORDER_ROLE_SELLERS_AGENT = 12;
}

// Enum for type of order class, from engines/order_management/app/constants/order_management/order_classes.rb.
enum OrderClass {
  ORDER_CLASS_INVALID = 0;
  ORDER_CLASS_PURCHASE_ORDER = 1;
  ORDER_CLASS_SALES_ORDER = 2;
  ORDER_CLASS_TRANSFER_ORDER = 3;
  ORDER_CLASS_DELIVERY_ORDER = 4;
  ORDER_CLASS_WORK_ORDER = 5;
}

// Enum for method to create po version, from engines/order_management/app/constants/order_management/version_create_method_types.rb.
enum VersionCreateMethodType {
  VERSION_CREATE_METHOD_TYPE_INVALID = 0;
  VERSION_CREATE_METHOD_TYPE_CSV = 1;
  VERSION_CREATE_METHOD_TYPE_SSI = 2;
  VERSION_CREATE_METHOD_TYPE_UI = 3;
  VERSION_CREATE_METHOD_TYPE_API_V1 = 4;
  VERSION_CREATE_METHOD_TYPE_API_V3 = 5;
  VERSION_CREATE_METHOD_TYPE_AUTO_CLOSE = 6;
}

// Enum for  status type of purchase order, from engines/order_management/app/constants/order_management/purchase_order_statuses.rb.
enum OrderStatus {
  ORDER_STATUS_INVALID = 0;
  ORDER_STATUS_CLOSE = 1;
  ORDER_STATUS_OPEN = 2;
  ORDER_STATUS_CANCELLED = 3;
}

// Enum for priority level of purchase order, from engines/order_management/app/constants/order_management/order_priority_levels.rb.
enum OrderPriority {
  ORDER_PRIORITY_INVALID = 0;
  ORDER_PRIORITY_STANDARD = 1;
  ORDER_PRIORITY_HIGH = 2;
}

// Enum for po line item measurement type, from engines/order_management/app/constants/order_management/line_item_measurement_types.rb.
enum LineItemMeasurementType {
  LINE_ITEM_MEASUREMENT_TYPE_INVALID = 0;
  LINE_ITEM_MEASUREMENT_TYPE_LENGTH = 1;
  LINE_ITEM_MEASUREMENT_TYPE_WIDTH = 2;
  LINE_ITEM_MEASUREMENT_TYPE_HEIGHT = 3;
  LINE_ITEM_MEASUREMENT_TYPE_GROSS_WEIGHT = 4;
  LINE_ITEM_MEASUREMENT_TYPE_NET_WEIGHT = 5;
  LINE_ITEM_MEASUREMENT_TYPE_NET_NET_WEIGHT = 6;
  LINE_ITEM_MEASUREMENT_TYPE_GROSS_VOLUME = 7;
  LINE_ITEM_MEASUREMENT_TYPE_VOLUME_WEIGHT = 8;
}

// Enum for purchase order line type, from engines/order_management/app/constants/order_management/line_item_types.rb.
enum LineItemType {
  LINE_ITEM_TYPE_INVALID = 0;
  LINE_ITEM_TYPE_MAIN_LINE = 1;
  LINE_ITEM_TYPE_COMPONENT_LINE = 2;
  LINE_ITEM_TYPE_SUB_LINE = 3;
}

// Enum for freight payment term (app/constants/freight_payment_terms.rb).
enum FreightPaymentTerm {
  FREIGHT_PAYMENT_TERM_INVALID = 0;
  FREIGHT_PAYMENT_TERM_FREIGHT_COLLECT = 1;
  FREIGHT_PAYMENT_TERM_FREIGHT_PREPAID = 2;
}

// Enum for transportation modes (common/ruby/gems/forwarding_constants/lib/forwarding_constants/transportation_modes.rb).
enum TransportationMode {
  TRANSPORTATION_MODE_INVALID = 0;
  TRANSPORTATION_MODE_AIR = 1;
  TRANSPORTATION_MODE_OCEAN = 2;
  TRANSPORTATION_MODE_TRUCK = 3;
  TRANSPORTATION_MODE_RAIL = 4;
  TRANSPORTATION_MODE_UNKNOWN_TRANSPORTATION = 5;
  TRANSPORTATION_MODE_OCEAN_AIR = 6;
  TRANSPORTATION_MODE_TRUCK_INTL = 7;
  TRANSPORTATION_MODE_WAREHOUSE_STORAGE = 8;
}
