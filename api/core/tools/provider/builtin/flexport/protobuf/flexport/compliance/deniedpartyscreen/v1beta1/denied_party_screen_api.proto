// TEAM: compliance

syntax = "proto3";

package flexport.compliance.deniedpartyscreen.v1beta1;

option java_multiple_files = true;
option java_outer_classname = "DeniedPartyScreenApiProto";
option java_package = "com.flexport.compliance.deniedpartyscreen.v1beta1";
option ruby_package = "Flexport::DeniedPartyScreen::V1Beta1";

import "flexport/compliance/deniedpartyscreen/v1beta1/denied_party_screen.proto";
import "google/protobuf/timestamp.proto";

// An API for Denied Party Screen.
service DeniedPartyScreenAPI {
  // Screen an entity.
  rpc ScreenEntity(ScreenEntityRequest) returns (ScreenEntityResponse);
  rpc GetLatestScreenTimestamp(GetLatestScreenTimestampRequest) returns (GetLatestScreenTimestampResponse);
}

message GetLatestScreenTimestampRequest {
  string company_fid = 1;
}

message GetLatestScreenTimestampResponse {
  bool screened = 1;
  google.protobuf.Timestamp screened_time = 2;
}

// The request for screening.
message ScreenEntityRequest {
  ScreenInput screen_input = 1;
}

// The response for screening.
message ScreenEntityResponse {
  oneof result {
    ScreenOutput success_result = 1;
    ScreenErrorOutput failure_result = 2;
  }
}