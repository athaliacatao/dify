// TEAM: forwarding_platform

syntax = "proto3";

package flexport.executioncoordinator.executionorder.v1;

option java_multiple_files = true;
option java_outer_classname = "ExecutionOrderFieldMaskProto";
option java_package = "com.flexport.executioncoordinator.executionorder.v1";
option ruby_package = "Flexport::ExecutionCoordinator::ExecutionOrder::V1";

import "google/protobuf/field_mask.proto";

// An field mask for the ExecutionOrder.
message ExecutionOrderFieldMask {
  //
  // A custom field mask that limits the fields to upsert.
  google.protobuf.FieldMask custom_mask = 1;
  //
  // A set of standard pre-defined masks for ExecutionOrder.
  repeated StandardExecutionOrderMask standard_masks = 2;
}

// A pre-defined standard ExecutionOrder mask supported by the ExecutionCoordinator.
// These are helpful for nested fields within repeated messages, which are not supported
// out-of-the-box by google.protobuf.FieldMask.
enum StandardExecutionOrderMask {
  STANDARD_EXECUTION_ORDER_MASK_INVALID = 0;
  STANDARD_EXECUTION_ORDER_MASK_CARGO_READY_DATES = 1;
  STANDARD_EXECUTION_ORDER_MASK_ORDER_STATUS = 2;
}
