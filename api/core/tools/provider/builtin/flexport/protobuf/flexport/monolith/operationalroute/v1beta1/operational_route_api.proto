// TEAM: forwarding

syntax = "proto3";

package flexport.monolith.operationalroute.v1beta1;

import "flexport/executioncoordinator/itinerary/v1beta1/itinerary.proto";

option java_multiple_files = true;
option java_outer_classname = "OperationalRouteApiProto";
option java_package = "com.flexport.monolith.operationalroute.v1beta1";
option ruby_package = "Flexport::Monolith::OperationalRoute::V1Beta1";

// Perform operational route related validation for external services.
service OperationalRouteAPI {
  rpc VerifyItineraryEffectToGraph(VerifyItineraryEffectToGraphRequest) returns (VerifyItineraryEffectToGraphResponse);
}

message VerifyItineraryEffectToGraphRequest {
  flexport.executioncoordinator.itinerary.v1beta1.Itinerary itinerary = 1;
}

// This is a verification endpoint, so we don't expect any returned value when succeed.
// User error will be returned when validations fails.
message VerifyItineraryEffectToGraphResponse {}
